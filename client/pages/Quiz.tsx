import React, { useState, useRef, useEffect } from "react";
import {
  ArrowRight,
  ArrowLeft,
  Instagram,
  Youtube,
  Linkedin,
  Globe,
  ChevronDown,
  Twitter,
  Star,
  Target,
  TrendingUp,
  CheckCircle,
  Sparkles,
  User,
  Mail,
  MapPin,
  Calendar,
  Download,
  Home,
  FileText,
  Layout,
} from "lucide-react";
import { Link, useNavigate } from "react-router-dom";
import { supabase, isSupabaseConfigured } from "@/lib/supabase";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";

interface QuizData {
  name: string;
  email: string;
  phone: string;
  age: string;
  city: string;
  primaryPlatform: string;
  secondaryPlatforms: string[];
  followerCount: string;
  niche: string;
  contentType: string;
  postingFrequency: string;
  experience: string[];
  monthlyIncome: string;
  biggestChallenge: string[];
  goals: string[];
  socialLinks: {
    instagram: string;
    youtube: string;
    linkedin: string;
    website: string;
    twitter: string;
    tiktok: string;
  };
  bio: string;
  language: string;
  engagementRate: string;
}

const initialQuizData: QuizData = {
  name: "",
  email: "",
  phone: "",
  age: "",
  city: "",
  primaryPlatform: "",
  secondaryPlatforms: [],
  followerCount: "",
  niche: "",
  contentType: "",
  postingFrequency: "",
  experience: [],
  monthlyIncome: "",
  biggestChallenge: [],
  goals: [],
  socialLinks: {
    instagram: "",
    youtube: "",
    linkedin: "",
    website: "",
    twitter: "",
    tiktok: "",
  },
  bio: "",
  language: "english",
  engagementRate: "",
};

const languages = {
  english: {
    title: "Creator Success Quiz",
    subtitle: "Get your personalized growth strategy in 3 minutes",
    steps: {
      1: "Platform & Followers",
      2: "Follower Count",
      3: "Other Platforms",
      4: "Content Niche",
      5: "Content Type",
      6: "Posting Frequency",
      7: "Experience",
      8: "Income",
      9: "Biggest Challenge",
      10: "Goals",
      11: "Social Links",
      12: "Engagement Rate",
      13: "Contact Info",
    },
    questions: {
      name: "What's your name?",
      email: "What's your email address?",
      phone: "What's your phone number? (Optional)",
      city: "Which city are you from?",
      primaryPlatform: "What's your primary content platform?",
      followerCount: "How many followers do you have on your primary platform?",
      secondaryPlatforms:
        "Which other platforms do you use? (Select all that apply)",
      niche: "What's your content niche?",
      contentType: "What type of content do you create?",
      postingFrequency: "How often do you post content?",
      experience:
        "How long have you been creating content? (Select all levels you've experienced)",
      monthlyIncome: "What's your current monthly income from content?",
      biggestChallenge:
        "What are your biggest challenges as a creator? (Select max 3)",
      goals: "What are your main goals for the next 6 months? (Select max 3)",
      socialLinks: "Share Your Social Presence (Optional)",
      bio: "Anything more about yourself and your content (optional)",
      engagementRate: "What's your average engagement rate?",
    },
    options: {
      platforms: [
        "Instagram",
        "YouTube",
        "LinkedIn",
        "TikTok",
        "Twitter",
        "Facebook",
        "Website/Blog",
      ],
      followerRanges: [
        "Less than 1K",
        "1K - 5K",
        "5K - 10K",
        "10K - 50K",
        "50K - 100K",
        "100K - 500K",
        "500K+",
      ],
      niches: [
        "Fashion & Beauty",
        "Technology & AI",
        "Food & Cooking",
        "Travel & Adventure",
        "Fitness & Health",
        "Personal Finance & Investing",
        "Entertainment & Comedy",
        "Entrepreneurship & Business",
        "Lifestyle & Wellness",
        "Art & Design",
        "Gaming & Esports",
        "Music & Dance",
        "Education & Learning",
        "Sports & Athletics",
        "Motivation & Self-Help",
        "Parenting & Family",
        "DIY & Crafts",
        "Spirituality & Mindfulness",
        "Other",
      ],
      contentTypes: [
        "Photos & Carousels",
        "Short Videos/Reels",
        "Long-form Videos",
        "Live Streams",
        "Stories",
        "Written Posts",
        "Podcasts",
        "Mixed Content",
      ],
      frequencies: [
        "Daily",
        "3-4 times a week",
        "Weekly",
        "2-3 times a month",
        "Monthly",
        "Irregular",
      ],
      experiences: [
        "Just started (0-6 months)",
        "Beginner (6 months - 1 year)",
        "Growing (1-2 years)",
        "Experienced (2-3 years)",
        "Expert (3+ years)",
      ],
      incomes: [
        "тВ╣0 (No income yet)",
        "тВ╣1Kя┐╜я┐╜я┐╜5K",
        "тВ╣5KтАУ15K",
        "тВ╣15KтАУ30K",
        "тВ╣30KтАУ50K",
        "тВ╣50KтАУ1L",
        "тВ╣1L+",
      ],
      challenges: [
        "ЁЯФД Growth & Engagement: Low views & inconsistent engagement",
        "ЁЯза Growth & Engagement: Staying relevant with fast-moving trends",
        "ЁЯФБ Growth & Engagement: Algorithm changes killing reach",
        "ЁЯзНтАНтЩАя╕П Growth & Engagement: Competing with bigger creators",
        "ЁЯЧгя╕П Brand & Identity: Struggling to find my unique voice/style",
        "ЁЯдЭ Brand & Identity: Balancing authenticity with brand appeal",
        "ЁЯМ▒ Brand & Identity: Building a real, connected community",
        "ЁЯТФ Monetization & Scaling: Can't convert followers into paying customers",
        "ЁЯдЭ Monetization & Scaling: Not landing brand collaborations",
        "ЁЯУК Monetization & Scaling: Confused by analytics & metrics",
        "ЁЯе╡ Creator Wellness: Burnout & content fatigue",
        "ЁЯТм Creator Wellness: Handling trolls/negativity",
        "ЁЯУ▒ Creator Wellness: Managing too many platforms at once",
      ],
      goals: [
        "Reach 10K / 50K / 100K+ Followers",
        "Earn тВ╣25K / тВ╣50K / тВ╣1L+ per month",
        "Get Brand Collaborations",
        "Build Personal Brand",
        "Create Viral Content",
        "Post More Consistently",
        "Expand to New Platforms",
      ],
      engagementRates: [
        "Less than 1%",
        "1-3%",
        "3-5%",
        "5-8%",
        "8-12%",
        "More than 12%",
        "I don't know",
      ],
    },
    buttons: {
      next: "Next Step",
      back: "Previous",
      submit: "Get My Creator Analysis",
    },
    freeResources: {
      title: "ЁЯОЙ Quiz Complete! Here are your FREE Creator Resources",
      subtitle:
        "Download these powerful tools to kickstart your creator journey",
      mediaKit: {
        title: "Professional Media Kit Template",
        description: "Create stunning media kits that brands will love",
      },
      emailTemplates: {
        title: "Brand Outreach Email Templates",
        description: "30+ proven email templates for brand partnerships",
      },
      growthGuide: {
        title: "90-Day Growth Strategy Guide",
        description: "Step-by-step roadmap to grow your following",
      },
      downloadFree: "Download Free",
    },
  },
  hindi: {
    title: "рдХреНрд░я┐╜я┐╜я┐╜рдПрдЯрд░ рд╕рдХреНрд╕реЗрд╕ рдХреНрд╡рд┐рдЬрд╝",
    subtitle: "3 рдорд┐рдирдЯ рдореЗрдВ рдЕрдкрдиреА рд╡реНрдпя┐╜я┐╜реНрддрд┐рдЧрдд рдЧреНрд░реЛрде рд░рдгрдиреАрддрд┐ рдкя┐╜я┐╜рдПрдВ",
    steps: {
      1: "рдмреБрдирд┐рдпрд╛рджреА рдЬрд╛рдирдХрд╛рд░реА",
      2: "рдкреНрд▓реЗрдЯя┐╜я┐╜я┐╜реЙрд░реНрдо рдФрд░ рдлреЙрд▓реЛрдЕрд░реНрд╕",
      3: "рдХрдВрдЯреЗрдВрдЯ рдирд┐рдЪ",
      4: "рдХрдВрдЯреЗрдВрдЯ рдкреНрд░рдХрд╛рд░",
      5: "рдкреЛрд╕реНрдЯрд┐рдВрдЧ рдЖрд╡реГрддреНрддрд┐",
      6: "рдЕрдиреБрднрд╡ рдФрд░ рдЖрдп",
      7: "рд╕рдмрд╕реЗ рдмрдбрд╝реА рдЪя┐╜я┐╜рдиреМрддреА",
      8: "рд▓рдХреНрд╖реНрдп",
      9: "рд╕реЛя┐╜я┐╜рд▓ рд▓рд┐рдВрдХреНрд╕",
      10: "рдПрдВрдЧреЗрдЬрдореЗрдВрдЯ рд░реЗрдЯ",
    },
    questions: {
      name: "рдЖрдкрдХрд╛ рдирд╛рдо рдХреНрдпрд╛ рд╣реИ?",
      email: "рдЖрдкрдХрд╛ рдИрдореЗрд▓ рдкрддрд╛ рдХреНрдпрд╛ рд╣реИ?",
      phone: "рдЖрдкрдХрд╛ рдлреЛрди рдирдВрдмрд░ рдХреНрдпрд╛ рд╣реИ? (рд╡реИрдХрд▓реНрдкрд┐рдХ)",
      city: "рдЖрдк рдХрд┐рд╕ рд╢рд╣рд░ рд╕реЗ рд╣реИрдВ?",
      primaryPlatform: "рдЖя┐╜я┐╜ рдореБрдЦреНрдпрддрдГ рдХя┐╜я┐╜я┐╜рд╕ рдкреНрд▓реЗя┐╜я┐╜я┐╜рдлреЙрд░реНрдо рдкрд░ рдХрдВрдЯреЗрдВрдЯ рдмрдирд╛рддреЗ рд╣реИрдВ?",
      followerCount: "рдЖрдкрдХреЗ рдкреНрд░рд╛рдердорд┐рдХ рдкреНрд▓реЗрдЯрдлреЙрд░реНрдо рдкрд░ рдХрд┐рддрдиреЗ рдлреЙрд▓реЛрдЕрд░реНрд╕ рд╣реИрдВ?",
      secondaryPlatforms:
        "рдЖрдк рдФрд░ рдХреМрди рд╕реЗ рдкреНрд▓реЗрдЯрдлреЙрд░реНрдо рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рддреЗ рд╣реИрдВ? (рдХрдИ рд╡рд┐рдХрд▓реНрдк рдЪреБрдиреЗрдВ)",
      niche: "рдЖрдкрдХрд╛ рдХрдВрдЯреЗрдВрдЯ рдХрд┐рд╕ рд╡рд┐рд╖рдп рдкрд░ рд╣реИ?",
      contentType: "рдЖрдк рдХрд┐рд╕ рдкреНрд░рдХрд╛рд░ рдХрд╛ рдХрдВрдЯреЗрдВрдЯ рдмрдирд╛рддреЗ рд╣реИрдВ?",
      postingFrequency: "рдЖрдк рдХрд┐рддрдиреА рдмрд╛рд░ рдХрдВрдЯреЗрдВрдЯ рдкреЛрд╕реНрдЯ рдХрд░рддреЗ рд╣реИрдВ?",
      experience:
        "рдЖя┐╜я┐╜ рдХрд┐рддрдиреЗ рд╕рдордп рд╕реЗ рдХрдВрдЯреЗрдВрдЯ рдмрдирд╛ рд░рд╣реЗ рд╣реИрдВ? (рд╕рднреА рд╕реНрддрд░ рдЪреБрдиреЗрдВ рдЬрд┐рдирдХрд╛ рдЖрдкрдиреЗ рдЕрдиреБрднрд╡ рдХрд┐рдпрд╛ я┐╜я┐╜я┐╜реИ)",
      monthlyIncome: "рдХрдВрдЯреЗрдВрдЯ рд╕реЗ рдЖрдкрдХреА рд╡рд░реНрддрдорд╛рди рдорд╛рд╕рд┐рдХ рдЖрдп рдХреНрдпрд╛ рд╣реИ?",
      engagementRate: "рдЖрдкрдХрд╛ рдФрд╕рдд рдПрдВрдЧреЗрдЬрдореЗрдВрдЯ рд░реЗрдЯ рдХреНрдпрд╛ рд╣реИ?",
      biggestChallenge:
        "рдЖрдкрдХреА рд╕рдмрд╕я┐╜я┐╜я┐╜ рдмрдбрд╝реА рдЪреБрдиреМрддреА рдХя┐╜я┐╜рдпрд╛ рд╣реИ? 3 рддрдХ рдЪреБрдиреЗрдВ тАУ рд╣рдо рд╕рдм рдЗрд╕рдореЗрдВ рдПрдХ рд╕рд╛рде рд╣реИрдВ! рдЖрдкрдХреА рдкрд░реЗрд╢рд╛рдирд┐рдпреЛрдВ рдХреЛ рд╕рдордЭрдирд╛ рд╣рдореЗрдВ рдмреЗрд╣рддрд░ рд╕рдорд╛рдзрд╛рди рджреЗрдиреЗ рдореЗрдВ рдорджрдж рдХрд░рддрд╛ рд╣реИред",
      goals: "рдЖрдкрдХреЗ я┐╜я┐╜я┐╜рдЧрд▓реЗ 6 рдорд╣реАрдиреЗ рдХреЗ рдореБрдЦреНрдп рд▓рдХреНрд╖реНрдп рдХреНрдпрд╛ рд╣реИрдВ? (рдЕрдзрд┐рдХрддрдо 3 рдЪреБрдиреЗрдВ)",
      socialLinks: "рдЕрдкрдиреА рд╕реЛрд╢рд▓ рдЙрдкрд╕реНрдерд┐рддрд┐ рд╕рд╛рдЭрд╛ рдХрд░реЗрдВ (рд╡реИрдХрд▓реНрдкрд┐рдХ)",
      bio: "рдЕрдкрдиреЗ рдФрд░ рдЕрдкрдиреЗ рдХрдВрдЯреЗрдВрдЯ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдХреБрдЫ рдФрд░ рдмрддрд╛рдПрдВ (рд╡реИрдХрд▓реНрдкрд┐рдХ)",
    },
    options: {
      platforms: [
        "я┐╜я┐╜я┐╜рдВрд╕я┐╜я┐╜рдЯрд╛рдЧреНрд░я┐╜я┐╜рдо",
        "рдпреВрдЯреНрдпреВрдм",
        "рд▓рд┐рдВрдХреНя┐╜я┐╜рдЗрди",
        "я┐╜я┐╜рд┐рдХрдЯя┐╜я┐╜я┐╜рдХ",
        "рдЯреНрд╡рд┐рдЯрд░",
        "рдлреЗрд╕рдмреБя┐╜я┐╜я┐╜",
        "рд╡реЗрдмрд╕рд╛рдЗрдЯ/я┐╜я┐╜я┐╜реНрд▓реЙрдЧ",
      ],
      followerRanges: [
        "1K рд╕реЗ рдХрдо",
        "1K - 5K",
        "5K - 10K",
        "10K - 50K",
        "50K - 100K",
        "100K - 500K",
        "500K+",
      ],
      niches: [
        "рдлреИрд╢рди я┐╜я┐╜рд░ рдмя┐╜я┐╜я┐╜рдпреВрдЯреА",
        "рдЯреЗрдХреНрдиреЛрд▓реЙрдЬреА рдФрд░ AI",
        "рдЦрд╛рдирд╛ рдФрд░ рдЦрд╛рдирд╛ рдмрдирд╛рдирд╛",
        "рдпрд╛рддреНрд░рд╛ рдФрд░ рдПрдбрд╡реЗрдВрдЪрд░",
        "я┐╜я┐╜я┐╜рд┐рдЯрдиреЗрд╕ рдФрд░ рд╕реНрд╡рд╛рд╕реНрдереНрдп",
        "рд╡реНрдпрдХреНрддрд┐рдЧрдд рд╡рд┐я┐╜я┐╜реНрдд рдФрд░ рдирд┐я┐╜я┐╜реЗрд╢",
        "рдордиреЛрд░рдВрдЬрди рдФрд░ рдХреЙрдореЗрдбреА",
        "рдЙрджреНрдпрдорд┐рддрд╛ рдФрд░ рд╡реНрдпрд╛рдкрд╛рд░",
        "рдЬреАрд╡рдирд╢реИрд▓реА рдФрд░ рдХрд▓реНрдпрд╛рдг",
        "рдХрд▓рд╛ рдФрд░ рдбрд┐рдЬрд╝рд╛рдЗрди",
        "рдЧреЗрдорд┐рдВрдЧ рдФрд░ я┐╜я┐╜я┐╜рд╕реНрдкреЛрд░я┐╜я┐╜я┐╜рдЯреНрд╕",
        "я┐╜я┐╜рдВрдЧреАрдд рдФрд░ рдиреГрддреНя┐╜я┐╜я┐╜",
        "рд╢рд┐рдХреНрд╖рд╛ я┐╜я┐╜я┐╜рд░ рд╕реАрдЦрдирд╛",
        "рдЦреЗрд▓ рдФрд░ рдПрдерд▓реЗрдЯрд┐рдХреНрд╕",
        "рдкреНрд░реЗрд░рдгрд╛ рдФрд░ рд╕реНрд╡-рд╕рд╣я┐╜я┐╜рдпрддрд╛",
        "рдкреЗрд░реЗрдВя┐╜я┐╜я┐╜рд┐рдВрдЧ рдФя┐╜я┐╜ рдкрд░я┐╜я┐╜рд╡рд╛рд░",
        "DIY рдФрд░ рд╢я┐╜я┐╜рд▓реНрдк",
        "я┐╜я┐╜я┐╜я┐╜рдзреНрдпрд╛рддреНрдо рдФрд░ рдорд╛рдЗрдВрдбрдлреБрд▓рдиреЗрд╕",
        "рдЕрдиреНрдп",
      ],
      engagementRates: [
        "1% рд╕я┐╜я┐╜ рдХрдо",
        "1-3%",
        "3-5%",
        "5-8%",
        "8-12%",
        "12% рд╕реЗ рдЕрдзрд┐я┐╜я┐╜",
        "рдореБрдЭреЗ рдирд╣реАрдВ рдкрддрд╛",
      ],
      contentTypes: [
        "рдлреЛрдЯреЛ рдФрд░ рдХя┐╜я┐╜я┐╜рд░реЛрд╕реЗрд▓",
        "рдЫреЛрдЯреЗ рд╡реАрдбрд┐рдпя┐╜я┐╜/рд░я┐╜я┐╜рд▓реНрд╕",
        "рд▓рдВрдмреЗ рд╡реАрдбрд┐рдпреЛ",
        "рд▓рд╛рдЗрд╡ рд╕реНрдЯреНрд░реАрдо",
        "рд╕реНрдЯреЛрд░реАрдЬрд╝",
        "рд▓рд┐рдЦрд┐рдд рдкреЛрд╕реНрдЯ",
        "рдкреЙрдбрдХрд╛рд╕реНрдЯ",
        "рдорд┐рд╢реНрд░рд┐рдд рдХрдВрдЯреЗрдВрдЯ",
      ],
      frequencies: [
        "рд░реЛрдЬрд╝рд╛я┐╜я┐╜я┐╜рд╛",
        "рд╕рдкреНя┐╜я┐╜я┐╜рд╛рд╣ рдореЗрдВ 3-4 рдмрд╛рд░",
        "рд╕рд╛я┐╜я┐╜я┐╜реНрддрд╛рд╣рд┐рдХ",
        "я┐╜я┐╜я┐╜я┐╜я┐╜я┐╜реАрдиреЗ рдореЗрдВ 2-3 рдмрд╛рд░",
        "я┐╜я┐╜я┐╜я┐╜рд╕рд┐рдХ",
        "рдЕрдирд┐рдпрдорд┐рдд",
      ],
      experiences: [
        "рдЕрднреА рд╢реБрд░реВ рдХрд┐рдпрд╛ (0-6 рдорд╣реАрдия┐╜я┐╜)",
        "рд╢реБрд░реБрдЖрддреА (6 я┐╜я┐╜рд╣реАя┐╜я┐╜я┐╜я┐╜я┐╜я┐╜я┐╜реЗ - 1 рд╕рд╛рд▓)",
        "рдмя┐╜я┐╜я┐╜рд╝ рд░рд╣реЗ рд╣реИрдВ (1-2 я┐╜я┐╜я┐╜я┐╜я┐╜я┐╜рд▓)",
        "рдЕрдия┐╜я┐╜рднрд╡реА (2-3 рд╕рд╛рд▓)",
        "рд╡рд┐рд╢реЗрд╖рдЬреНрдЮ (3+ рд╕рд╛рд▓)",
      ],
      incomes: [
        "тВ╣0 (я┐╜я┐╜рднреА рддрдХ рдХреЛрдИ рдЖрдп рдирд╣реАрдВ)",
        "тВ╣1KтАУ5K",
        "тВ╣5KтАУ15K",
        "тВ╣15KтАУ30K",
        "тВ╣30KтАУ50K",
        "тВ╣50KтАУ1L",
        "тВ╣1L+",
      ],
      challenges: [
        "ЁЯФД Growth & Engagement: Low views & inconsistent engagement",
        "ЁЯза Growth & Engagement: Staying relevant with fast-moving trends",
        "ЁЯФБ Growth & Engagement: Algorithm changes killing reach",
        "ЁЯзНтАНтЩАя╕П Growth & Engagement: Competing with bigger creators",
        "ЁЯЧгя╕П Brand & Identity: Struggling to find my unique voice/style",
        "ЁЯдЭ Brand & Identity: Balancing authenticity with brand appeal",
        "ЁЯМ▒ Brand & Identity: Building a real, connected community",
        "ЁЯТФ Monetization & Scaling: Can't convert followers into paying customers",
        "ЁЯдЭ Monetization & Scaling: Not landing brand collaborations",
        "ЁЯУК Monetization & Scaling: Confused by analytics & metrics",
        "ЁЯе╡ Creator Wellness: Burnout & content fatigue",
        "ЁЯТм Creator Wellness: Handling trolls/negativity",
        "ЁЯУ▒ Creator Wellness: Managing too many platforms at once",
      ],
      goals: [
        "рдорд╛рд╕рд┐рдХ рдЖрдп я┐╜я┐╜я┐╜я┐╜50K+ рддрдХ рдмя┐╜я┐╜я┐╜рд╝рд╛рдирд╛",
        "100K+ рдХрд╛ authentic я┐╜я┐╜рдореБрджрд╛рдп рдмрдирд╛рдирд╛",
        "рд╕рдкрдия┐╜я┐╜рдВ рдХреЗ рдмреНрд░рд╛рдВрдбреНрд╕ рдХреЗ рд╕рд╛рде рдкрд╛рд░реНрдЯрдия┐╜я┐╜рд╢рд┐рдк",
        "рдЕя┐╜я┐╜я┐╜рдирд╛ рдкреНрд░реЛрдбрдХреНрдЯ/рдХреЛрд░реНя┐╜я┐╜ рд▓реЙрдиреНрдЪ рдХя┐╜я┐╜я┐╜рдирд╛",
        "рдЕрдкрдиреЗ рдирд┐рдЪ рдореЗрдВ рдЧреЛ-рдЯреВ я┐╜я┐╜я┐╜рдХреНрд╕рдкрд░реНрдЯ рдмрдирдирд╛",
        "рд▓рдЧрд╛рддрд╛рд░ рд╡рд╛рдпрд░рд▓ рдХрдВрдЯреЗрдВрдЯ рдмрдирд╛рдирд╛",
        "10K рд╕рдмреНрд╕рдХреНрд░рд╛рдЗя┐╜я┐╜я┐╜рд░реНрд╕ рдХреА рдИрдореЗрд▓ рд▓рд┐рд╕реНрдЯ рдмрдирд╛рдирд╛",
        "рдЗрдВрдбрд╕реНрдЯреНрд░реА рдЗрд╡реЗрдВрдЯреНрд╕/рдкреЙрдбрдХрд╛рд╕реНрдЯ рдореЗрдВ рдмреЛрд▓рдирд╛",
        "рдкя┐╜я┐╜я┐╜рд╕рд┐рд╡ рдЗрдирдХрдо рд╕реНрдЯреНрд░реАрдо рдмрдирд╛рдирд╛",
        "рдЕрдкрдиреА 9-5 рдЬреЙрдм рдЫреЛрдбрд╝рдХрд░ рдлреБрд▓-рдЯрд╛рдЗрдо рдЬрд╛рдирд╛",
        "рдирдП рдкреНрд▓реЗрдЯрдлреЙрд░реНрдореНрд╕/я┐╜я┐╜реЙрд░реНрдореЗрдЯреНрд╕ рдореЗрдВ expand рдХрд░рдирд╛",
        "рдЕрдкрдиреЗ я┐╜я┐╜реНрдкреЗрд╕ рдореЗрдВ я┐╜я┐╜я┐╜реВрд╕рд░реЗ рдХреНрд░рд┐рдПрдЯя┐╜я┐╜я┐╜реНрд╕ рдХреЛ рдореЗрдВрдЯрд░ рдХрд░рдирд╛",
      ],
      challenges: [
        "ЁЯФД Growth & Engagement: Low views & inconsistent engagement",
        "ЁЯза Growth & Engagement: Staying relevant with fast-moving trends",
        "ЁЯФБ Growth & Engagement: Algorithm changes killing reach",
        "я┐╜я┐╜я┐╜тАНтЩАя╕П Growth & Engagement: Competing with bigger creators",
        "ЁЯЧгя╕П Brand & Identity: Struggling to find my unique voice/style",
        "ЁЯдЭ Brand & Identity: Balancing authenticity with brand appeal",
        "ЁЯМ▒ Brand & Identity: Building a real, connected community",
        "ЁЯТФ Monetization & Scaling: Can't convert followers into paying customers",
        "ЁЯдЭ Monetization & Scaling: Not landing brand collaborations",
        "ЁЯУК Monetization & Scaling: Confused by analytics & metrics",
        "ЁЯе╡ Creator Wellness: Burnout & content fatigue",
        "ЁЯТм Creator Wellness: Handling trolls/negativity",
        "ЁЯУ▒ Creator Wellness: Managing too many platforms at once",
      ],
      goals: [
        "Reach 10K / 50K / 100K+ Followers",
        "Earn тВ╣25K / тВ╣50K / тВ╣1L+ per month",
        "Get Brand Collaborations",
        "Build Personal Brand",
        "Create Viral Content",
        "Post More Consistently",
        "Expand to New Platforms",
      ],
    },
    buttons: {
      next: "рдЕя┐╜я┐╜рд▓рд╛ рдХя┐╜я┐╜я┐╜рдо",
      back: "рдкрд┐рдЫрд▓рд╛",
      submit: "рдореЗрд░рд╛ рдХреНрд░рд┐рдПрдЯрд░ рд╡рд┐рд╢реНя┐╜я┐╜реЗрд╖рдг рдкрд╛рдПрдВ",
    },
    freeResources: {
      title: "ЁЯОЙ рдХреНрд╡рд┐рдЬрд╝ рдкреВрд░я┐╜я┐╜я┐╜! рдпрд╣рд╛рдБ рд╣реИрдВ я┐╜я┐╜я┐╜рдкрдХреЗ рдореБрдлреНрдд рдХреНрд░рд┐рдПрдЯрд░ рд╕рдВрд╕рд╛я┐╜я┐╜рди",
      subtitle:
        "рдЕрдкрдиреА рдХреНрд░рд┐рдПрдЯрд░ рдпрд╛рддреНрд░рд╛ рд╢реБрд░я┐╜я┐╜ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП я┐╜я┐╜рди рд╢рдХреНрддрд┐рд╢рд╛рд▓реА рдЯя┐╜я┐╜я┐╜рд▓реНя┐╜я┐╜ рдХреЛ рдбрд╛рдЙрдирд▓реЛрдб рдХрд░реЗрдВ",
      mediaKit: {
        title: "рдкреНрд░я┐╜я┐╜я┐╜я┐╜я┐╜рдлреЗрд╢рдирд▓ рдореАрдбрд┐рдпрд╛ рдХрд┐рдЯ рдЯреЗрдореНрдкреНрд▓реЗрдЯ",
        description: "рдЖрдХрд░реНрд╖рдХ рдореАрдбрд┐рдпрд╛ рдХрд┐рдЯ рдмрдия┐╜я┐╜я┐╜рдПрдВ рдЬреЛ рдмреНрд░рд╛рдВрдбреНрд╕ рдХреЛ рдкрд╕рдВрдж рдЖрдПрдВрдЧреЗ",
      },
      emailTemplates: {
        title: "рдмреНрд░рд╛рдВрдб рдЖрдЙрдЯрд░реАрдЪ рдИрдореЗрд▓ рдЯреЗрдореНрдкя┐╜я┐╜я┐╜рд▓реЗрдЯреНрд╕",
        description: "я┐╜я┐╜реНрд░рд╛рдВрдб рдкрд╛рд░реНрдЯрдирд░рд╢рд┐рдк рдХреЗ рд▓рд┐рдП 30+ рд╕я┐╜я┐╜я┐╜рджреНрдз рдИрдореЗрд▓ рдЯреЗрдореНрдкреНрд▓реЗрдЯреНрд╕",
      },
      growthGuide: {
        title: "90-я┐╜я┐╜рд┐рди я┐╜я┐╜реА рдЧреНрд░реЛрде рд╕реНрдЯреНрд░реИрдЯреЗрдЬреА рдЧрд╛рдЗрдб",
        description: "рдЕрдкрдиреЗ рдлреЙрд▓реЛрдЗрдВрдЧ рдмрдврд╝рд╛рдиреЗ рдХреЗ рд▓рд┐рдП рд╕реНрдЯреЗрдк-рдмрд╛рдИ-рд╕реНрдЯреЗрдк рд░реЛрдбрдореИрдк",
      },
      downloadFree: "рдореБрдлреНрдд рдбрд╛рдЙрдирд▓реЛрдб рдХрд░реЗрдВ",
    },
  },
};

export default function Quiz() {
  const [currentStep, setCurrentStep] = useState(1);
  const [quizData, setQuizData] = useState<QuizData>(initialQuizData);
  const [language, setLanguage] = useState<"english" | "hindi">("english");
  const [isGenerating, setIsGenerating] = useState(false);
  const [showFreeResources, setShowFreeResources] = useState(false);
  const navigate = useNavigate();
  const quizContentRef = useRef<HTMLDivElement>(null);

  const t = languages[language];
  const totalSteps = 13;

  // Save language preference and update quiz data when language changes
  React.useEffect(() => {
    localStorage.setItem("famechase-language", "english");
    setQuizData((prev) => ({ ...prev, language: "english" }));
  }, [language]);

  // Scroll to top when quiz page loads
  React.useEffect(() => {
    window.scrollTo({ top: 0, behavior: "smooth" });
  }, []);

  // Scroll to top when free resources page is shown
  React.useEffect(() => {
    if (showFreeResources) {
      window.scrollTo({ top: 0, behavior: "smooth" });
    }
  }, [showFreeResources]);

  const updateQuizData = (field: keyof QuizData, value: any) => {
    setQuizData((prev) => ({
      ...prev,
      [field]: value,
    }));
  };

  const updateSocialLink = (
    platform: keyof QuizData["socialLinks"],
    value: string,
  ) => {
    setQuizData((prev) => ({
      ...prev,
      socialLinks: {
        ...prev.socialLinks,
        [platform]: value,
      },
    }));
  };

  const canProceed = () => {
    switch (currentStep) {
      case 1:
        return quizData.primaryPlatform;
      case 2:
        return quizData.followerCount;
      case 3:
        return quizData.secondaryPlatforms.length > 0;
      case 4:
        return quizData.niche;
      case 5:
        return quizData.contentType;
      case 6:
        return quizData.postingFrequency;
      case 7:
        return quizData.experience.length > 0;
      case 8:
        return quizData.monthlyIncome;
      case 9:
        return quizData.biggestChallenge.length >= 1;
      case 10:
        return quizData.goals.length > 0;
      case 11:
        return true; // Optional step (social links)
      case 12:
        return quizData.engagementRate;
      case 13:
        return quizData.name && quizData.email && quizData.city; // Contact info at end
      default:
        return false;
    }
  };

  const handleNext = () => {
    if (currentStep < totalSteps && canProceed()) {
      setCurrentStep(currentStep + 1);
      // Auto-scroll to quiz content area (just below header)
      setTimeout(() => {
        if (quizContentRef.current) {
          quizContentRef.current.scrollIntoView({
            behavior: "smooth",
            block: "start",
          });
        }
      }, 100);
    } else if (currentStep === totalSteps) {
      setShowFreeResources(true);
      // Auto-scroll to top when showing free resources page
      setTimeout(() => {
        window.scrollTo({ top: 0, behavior: "smooth" });
      }, 100);
    }
  };

  const handleBack = () => {
    if (currentStep > 1) {
      setCurrentStep(currentStep - 1);
      // Auto-scroll to quiz content area (just below header)
      setTimeout(() => {
        if (quizContentRef.current) {
          quizContentRef.current.scrollIntoView({
            behavior: "smooth",
            block: "start",
          });
        }
      }, 100);
    }
  };

  const handleSubmit = async () => {
    setIsGenerating(true);

    try {
      // Save quiz data with language preference (English only now)
      const finalQuizData = { ...quizData, language: "english" };
      localStorage.setItem("fameChaseQuizData", JSON.stringify(finalQuizData));

      // Save user data to Supabase if configured
      if (isSupabaseConfigured() && supabase) {
        const userData = {
          name: quizData.name,
          email: quizData.email,
          phone: quizData.phone || null,
          city: quizData.city,
          niche: quizData.niche,
          primary_platform: quizData.primaryPlatform,
          follower_count: quizData.followerCount,
          goals: quizData.goals,
          quiz_data: finalQuizData,
        };

        const { error } = await supabase.from("users").upsert([userData], {
          onConflict: "email",
          ignoreDuplicates: false,
        });

        if (error) {
          console.error("Error saving user data to Supabase:", error);
          // Continue anyway - don't block the user experience
        } else {
          console.log("User data saved to Supabase successfully");
        }
      }

      // Small delay for user experience
      await new Promise((resolve) => setTimeout(resolve, 1500));

      // Navigate to results with immediate scroll to top
      navigate("/results");

      // Force immediate scroll to top of results page
      window.scrollTo({ top: 0, behavior: "auto" });

      // Additional scroll after navigation completes
      setTimeout(() => {
        window.scrollTo({ top: 0, behavior: "smooth" });
      }, 50);
    } catch (error) {
      console.error("Error in handleSubmit:", error);
      // Continue with navigation even if there's an error
      navigate("/results");
      window.scrollTo({ top: 0, behavior: "auto" });
    } finally {
      setIsGenerating(false);
    }
  };

  const toggleSecondaryPlatform = (platform: string) => {
    const platforms = quizData.secondaryPlatforms.includes(platform)
      ? quizData.secondaryPlatforms.filter((p) => p !== platform)
      : [...quizData.secondaryPlatforms, platform];
    updateQuizData("secondaryPlatforms", platforms);
  };

  const toggleMultipleChoice = (
    field: "experience" | "biggestChallenge" | "goals",
    value: string,
    maxSelection?: number,
  ) => {
    const currentValues = quizData[field];
    if (currentValues.includes(value)) {
      const newValues = currentValues.filter((v) => v !== value);
      updateQuizData(field, newValues);
    } else {
      if (!maxSelection || currentValues.length < maxSelection) {
        const newValues = [...currentValues, value];
        updateQuizData(field, newValues);
      }
    }
  };

  const generateDownload = (type: string, fileName: string) => {
    let content = "";
    const userName = quizData.name || "Creator";

    // Add font size indicator for much larger display
    const fontSizeIndicator = `
=== DISPLAY INSTRUCTIONS ===
IMPORTANT: Set Font Size to 18-22pt for comfortable reading
Please zoom to 150-200% or increase font size in your viewer
This content is optimized for larger text display for better readability
========================================================

`;

    if (type === "mediaKit") {
      content =
        fontSizeIndicator +
        `${language === "hindi" ? "рдореАрдбя┐╜я┐╜я┐╜рдпя┐╜я┐╜я┐╜ рдХрд┐я┐╜я┐╜я┐╜" : "MEDIA KIT"} - ${userName}

${language === "hindi" ? "рд╡реНрдпрдХреНрддрд┐я┐╜я┐╜я┐╜я┐╜я┐╜я┐╜ рдЬрд╛рдирдХя┐╜я┐╜я┐╜рд░реА:" : "PERSONAL INFO:"}
${language === "hindi" ? "рдирд╛рдо:" : "Name:"} ${userName}
${language === "hindi" ? "рдирд┐рдЪ:" : "Niche:"} ${quizData.niche}
${language === "hindi" ? "я┐╜я┐╜я┐╜реНрд▓реЗя┐╜я┐╜я┐╜рдлреЙрд░реНрдо:" : "Platform:"} ${quizData.primaryPlatform}
${language === "hindi" ? "я┐╜я┐╜я┐╜я┐╜реЙрд▓реЛя┐╜я┐╜я┐╜рд░реНрд╕:" : "Followers:"} ${quizData.followerCount}

${language === "hindi" ? "рд╕рд╛рдВрдЦреНрдпрд┐рдХреА я┐╜я┐╜я┐╜рд░ рджрд░я┐╜я┐╜рдВ:" : "STATISTICS & RATES:"}
${language === "hindi" ? "рдХрдВрдЯреЗрдВрдЯ я┐╜я┐╜реНрд░рдХрд╛рд░:" : "Content Type:"} ${quizData.contentType}
${language === "hindi" ? "рдкреЛрд╕реНрдЯя┐╜я┐╜я┐╜рдВрдЧ рдЖрд╡реГя┐╜я┐╜я┐╜реНрддрд┐:" : "Posting Frequency:"} ${quizData.postingFrequency}
${language === "hindi" ? "рдорд╛рд╕рд┐рдХ рдЖя┐╜я┐╜:" : "Monthly Income:"} ${quizData.monthlyIncome}

${language === "hindi" ? "рд╕реБрдЭрд╛рд╡рд┐рдд рджрд░я┐╜я┐╜я┐╜рдВ (рднрд╛рд░рддреАрдп рдмрд╛рдЬрд╛рд░ рдХреЗ рдЖрдзрд╛рд░ рдкрд░):" : "SUGGESTED RATES (Based on Indian Market):"}

${language === "hindi" ? "ЁЯУ▒ рдкреНрд▓реЗрдЯя┐╜я┐╜я┐╜реЙрд░реНрдо рджрд░реЗрдВ:" : "я┐╜я┐╜я┐╜ PLATFORM RATES:"}
${language === "hindi" ? "Instagram рдкреЛрд╕реНрдЯ:" : "Instagram Post:"} тВ╣${quizData.followerCount.includes("Less than 1K") ? "200-500" : quizData.followerCount.includes("1K - 5K") ? "500-1,000" : "1,000-3,000"}
${language === "hindi" ? "Instagram Reel:" : "Instagram Reel:"} тВ╣${quizData.followerCount.includes("Less than 1K") ? "500-1,000" : quizData.followerCount.includes("1K - 5K") ? "1,000-2,000" : "2,000-5,000"}
${language === "hindi" ? "Instagram Story:" : "Instagram Story:"} тВ╣${quizData.followerCount.includes("Less than 1K") ? "100-300" : quizData.followerCount.includes("1K - 5K") ? "300-500" : "500-1,500"}
${language === "hindi" ? "YouTube рд╢реЙрд░реНрдЯ:" : "YouTube Short:"} тВ╣${quizData.followerCount.includes("Less than 1K") ? "500-1,000" : quizData.followerCount.includes("1K - 5K") ? "1,000-2,000" : "2,000-5,000"}
${language === "hindi" ? "YouTube рд╡реАя┐╜я┐╜я┐╜рд┐рдпреЛ рдоя┐╜я┐╜я┐╜рдВрд╢рди:" : "YouTube Video Mention:"} тВ╣${quizData.followerCount.includes("Less than 1K") ? "1,000-2,000" : quizData.followerCount.includes("1K - 5K") ? "2,000-3,000" : "3,000-8,000"}
${language === "hindi" ? "Twitter рдкреЛрд╕я┐╜я┐╜я┐╜рдЯ:" : "Twitter Post:"} тВ╣${quizData.followerCount.includes("Less than 1K") ? "100-200" : quizData.followerCount.includes("1K - 5K") ? "200-400" : "400-1,000"}
${language === "hindi" ? "Newsletter рдореЗрдВя┐╜я┐╜я┐╜я┐╜я┐╜я┐╜я┐╜я┐╜:" : "Newsletter Mention:"} тВ╣${quizData.followerCount.includes("Less than 1K") ? "200-500" : quizData.followerCount.includes("1K - 5K") ? "500-1,000" : "1,000-2,500"}

${language === "hindi" ? "ЁЯУж рдкреИрдХреЗрдЬ рджрд░реЗрдВ:" : "ЁЯУж PACKAGE RATES:"}
${language === "hindi" ? "я┐╜я┐╜ рдмя┐╜я┐╜рд╕рд┐рдХ рдкреИрдХя┐╜я┐╜я┐╜рдЬ (1 рдкреЛрд╕реНрдЯ + 2 рд╕реНрдЯреЛя┐╜я┐╜я┐╜реА):" : "тАв Basic Package (1 Post + 2 Stories):"} тВ╣${quizData.followerCount.includes("Less than 1K") ? "400-800" : quizData.followerCount.includes("1K - 5K") ? "800-1,500" : "1,500-4,000"}
${language === "hindi" ? "тАв рдкреНрд░реАрдорд┐рдпрдо рдкреИрдХреЗрдЬ (2 рдкреЛрд╕реНрдЯ + 1 рд░я┐╜я┐╜я┐╜рд▓ + 3 рд╕я┐╜я┐╜я┐╜рдЯреЛрд░реА):" : "тАв Premium Package (2 Posts + 1 Reel + 3 Stories):"} тВ╣${quizData.followerCount.includes("Less than 1K") ? "1,200-2,500" : quizData.followerCount.includes("1K - 5K") ? "2,500-4,500" : "4,500-12,000"}

${language === "hindi" ? "рд╕рдВрдкрд░реНя┐╜я┐╜:" : "CONTACT:"}
${language === "hindi" ? "рдИрдореЗрд▓:" : "Email:"} ${quizData.email || "[your@email.com]"}
${language === "hindi" ? "рд╕реЛрд╢рд▓ рд▓рд┐рдВрдХреНрд╕:" : "Social Links:"}
- Instagram: ${quizData.socialLinks.instagram || "[Your Instagram]"}
- YouTube: ${quizData.socialLinks.youtube || "[Your YouTube]"}`;
    } else if (type === "emailTemplates") {
      content =
        fontSizeIndicator +
        `${language === "hindi" ? "6+ я┐╜я┐╜я┐╜реНрд░рд╛рдВрдб рдЖя┐╜я┐╜я┐╜рдЯрд░реАрдЪ рдИрдореЗрд▓ я┐╜я┐╜я┐╜реЗрдореНрдкреНрд▓реЗрдЯреНрд╕" : "6+ BRAND OUTREACH EMAIL TEMPLATES"} - ${userName}

${language === "hindi" ? "рдЯреЗрдореНрдкреНрд▓я┐╜я┐╜я┐╜рдЯ 1: рдкреНрд░рд╛рд░рдВрднрд┐рдХ рд╕рдВрдкрд░реНрдХ (рдХреЛрд▓реНя┐╜я┐╜ рдЖрдЙрдЯрд░реАрдЪ)" : "TEMPLATE 1: INITIAL OUTREACH (COLD EMAIL)"}
${language === "hindi" ? "рд╡рд┐рд╖рдп:" : "Subject:"} ${language === "hindi" ? `рд╕рд╣рдпреЛрдЧ рдХрд╛ рдкреНрд░рд╕реНрддрд╛рд╡ - ${userName} X [рдмреНрд░рд╛рдВрдб рдирд╛рдо]` : `Collaboration Proposal - ${userName} X [Brand Name]`}

${language === "hindi" ? "рдкреНрд░рд┐рдп [рдмреНрд░рд╛рдВрдб я┐╜я┐╜я┐╜рд╛рдо] рдЯреАрдо," : "Dear [Brand Name] Team,"}

${language === "hindi" ? `я┐╜я┐╜реИрдВ ${userName} рд╣реВрдВ, ${quizData.niche} рдореЗрдВ я┐╜я┐╜я┐╜рдХ рдХрдВрдЯреЗрдВрдЯ рдХреНрд░рд┐рдПрдЯрд░ рд╣реВрдВ рдЬрд┐рд╕рдХреЗ ${quizData.primaryPlatform} рдкрд░ ${quizData.followerCount} я┐╜я┐╜я┐╜реЙрд▓реЛрдЕя┐╜я┐╜я┐╜я┐╜реНрд╕ рд╣реИрдВред` : `I'm ${userName}, a content creator in ${quizData.niche} with ${quizData.followerCount} followers on ${quizData.primaryPlatform}.`}

${language === "hindi" ? "рдореБрдЭреЗ рдЖрдкрдХя┐╜я┐╜я┐╜ я┐╜я┐╜я┐╜реНрд░рд╛рдВрдб рдХреЗ рд╕рд╛рде рдХрд╛рдо рдХрд░я┐╜я┐╜реЗ рдореЗрдВ рджя┐╜я┐╜я┐╜рд▓рдЪя┐╜я┐╜реНрдкреА рд╣реИ рдХреНрдпреЛрдВрдХрд┐:" : "I'd love to work with your brand because:"}
${language === "hindi" ? "- рдЖрдкрдХреЗ рдЙрддреНя┐╜я┐╜я┐╜рд╛рдж рдореЗрд░реЗ рджрд░реНрд╢рдХя┐╜я┐╜я┐╜рдВ я┐╜я┐╜я┐╜реЗ рд╕рд╛рде рдкреВрд░реА рддрд░рд╣ я┐╜я┐╜я┐╜реЗрд▓ рдЦрд╛рддреЗ рд╣реИрдВ" : "- Your products align perfectly with my audience"}
${language === "hindi" ? `- рдореЗрд░реЗ рджрд░реНрд╢рдХ ${quizData.niche} рдореЗрдВ рд░реБрдЪрд┐ рд░рдЦрддреЗ рд╣реИрдВ` : `- My audience is interested in ${quizData.niche}`}
${language === "hindi" ? "- рдореИрдВ рдкреНрд░рд╛рдорд╛рдгрд┐рдХ рдХрдВрдЯреЗрдВрдЯ рдмрдирд╛рдиреЗ рдоя┐╜я┐╜рдВ рд╡рд┐рд╢я┐╜я┐╜рд╖рдЬреНя┐╜я┐╜ рд╣реВрдВ" : "- I specialize in creating authentic content"}

${language === "hindi" ? "рд╕я┐╜я┐╜рдВрдЦреНрдпрд┐рдХреА:" : "Statistics:"}
${language === "hindi" ? "- рдлреЙя┐╜я┐╜я┐╜я┐╜реЛрдЕрд░реНрд╕:" : "- Followers:"} ${quizData.followerCount}
${language === "hindi" ? "- рдХрдВрдЯреЗрдВрдЯ рдкреНрд░рдХрд╛рд░:" : "- Content Type:"} ${quizData.contentType}
${language === "hindi" ? "- рдкя┐╜я┐╜я┐╜я┐╜я┐╜я┐╜я┐╜я┐╜рдЯрд┐рдВрдЧ рдЖрд╡реГрддреНрддрд┐:" : "- Posting Frequency:"} ${quizData.postingFrequency}

${language === "hindi" ? "рдХреНрдпрд╛ рдЖрдк рд╕я┐╜я┐╜я┐╜рдпреЛрдЧ рдХреЗ рдЕрд╡рд╕рд░реЛрдВ рдкрд░ я┐╜я┐╜я┐╜я┐╜я┐╜рд░я┐╜я┐╜рдЪрд╛ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рд╕рдордп рдирд┐рдХрд╛рд▓ я┐╜я┐╜я┐╜рдХрддреЗ рд╣реИрдВ?" : "Would you be available to discuss collaboration opportunities?"}

${language === "hindi" ? "рдзрдиреНрдпрд╡я┐╜я┐╜я┐╜рдж," : "Best regards,"}
${userName}

---

${language === "hindi" ? "рдЯреЗя┐╜я┐╜реНрдкреНрд▓реЗрдЯ 2: рдлреЙрд▓реЛ-я┐╜я┐╜я┐╜я┐╜рдк рдИрдореЗрд▓" : "TEMPLATE 2: FOLLOW-UP EMAIL"}
${language === "hindi" ? "рд╡рд┐рд╖рдп:" : "Subject:"} ${language === "hindi" ? `рдлреЙрд▓реЛ-рдЕрдк: ${userName} рдХреЛрд▓реИрдмреЛрд░реЗрд╢рди рдкреНрд░рд╕реНрддрд╛рд╡` : `Follow-up: ${userName} Collaboration Proposal`}

${language === "hindi" ? "рд╣реИрд▓я┐╜я┐╜я┐╜ [рд╕рдВрдкрд░реНрдХ рдирд╛рдо]," : "Hi [Contact Name],"}

${language === "hindi" ? "рдореИрдВрдиреЗ рдкрд┐рдЫрд▓реЗ рд╕рдкреНрддрд╛рд╣ рдЖрдкрдХя┐╜я┐╜ collaboration рдХя┐╜я┐╜ рдмрд╛рд░реЗ рдореЗя┐╜я┐╜я┐╜ email рднреЗрдЬрд╛ рдерд╛ред рдореБя┐╜я┐╜я┐╜реЗ рд▓рдЧрддрд╛ рд╣реИ рдХрд┐ рд╣рдо рдПрдХ amazing partnership create я┐╜я┐╜рд░ рд╕рдХрддреЗ рд╣реИрдВ!" : "I sent you an email last week about collaboration opportunities. I believe we could create an amazing partnership!"}

${language === "hindi" ? "Recently рдореИрдВрдиреЗ [competitor brand] рдХреЗ рд╕рд╛я┐╜я┐╜я┐╜ work рдХрд┐рдпрд╛ рдФрд░ я┐╜я┐╜я┐╜рд╕ post я┐╜я┐╜я┐╜реЛ [specific results] рдорд┐рд▓реЗред" : "Recently I worked with [competitor brand] and that post received [specific results]."}

${language === "hindi" ? "рдХреНрдпрд╛ рд╣рдо рдЗрд╕ week рдПрдХ quick 15-minute call schedule рдХя┐╜я┐╜я┐╜ рд╕рдХрддреЗ рд╣реИрдВ?" : "Could we schedule a quick 15-minute call this week?"}

${language === "hindi" ? "Looking forward," : "Looking forward,"}
${userName}

---

${language === "hindi" ? "рдЯреЗрдореНрдкреНрд▓я┐╜я┐╜я┐╜рдЯ 3: рд░реЗрдЯ рдХрд╛рд░реНрдб рдкреНрд░реЗрдЬреЗрдВрдЯреЗрд╢рди" : "TEMPLATE 3: RATE CARD PRESENTATION"}
${language === "hindi" ? "рд╡рд┐рд╖рдп:" : "Subject:"} ${language === "hindi" ? `${userName} - Collaboration rates & packages` : `${userName} - Collaboration rates & packages`}

${language === "hindi" ? "Dear [Brand Name]," : "Dear [Brand Name],"}

${language === "hindi" ? "рдЖрдкя┐╜я┐╜реА interest я┐╜я┐╜реЗ рд▓рд┐я┐╜я┐╜я┐╜ рдзрдиреНрдпрд╡рд╛рдж! рдпрд╣рд╛рдВ рдореЗя┐╜я┐╜реЗ collaboration packages рд╣реИрдВ:" : "Thank you for your interest! Here are my collaboration packages:"}

${language === "hindi" ? "ЁЯУ╕ рд╕рд┐рдВрдЧрд▓ я┐╜я┐╜реЛрд╕реНрдЯ: тВ╣[рдЖрдкрдХреА rate]" : "ЁЯУ╕ Single Post: тВ╣[Your rate]"}
${language === "hindi" ? "тАв 1 feed post with your product" : "тАв 1 feed post with your product"}
${language === "hindi" ? "тАв 24-hour story promotion" : "тАв 24-hour story promotion"}
${language === "hindi" ? "я┐╜я┐╜я┐╜ Professional photography" : "я┐╜я┐╜ Professional photography"}

${language === "hindi" ? "ЁЯУ▒ рд╕реНрдЯя┐╜я┐╜я┐╜рд░я┐╜я┐╜ рдкреИрдХя┐╜я┐╜я┐╜рдЬ: тВ╣[рдЖрдкрдХреА rate]" : "ЁЯУ▒ Story Package: я┐╜я┐╜я┐╜я┐╜[Your rate]"}
${language === "hindi" ? "тАв 3-5 story slides" : "тАв 3-5 story slides"}
${language === "hindi" ? "тАв Behind-the-scenes content" : "тАв Behind-the-scenes content"}

${language === "hindi" ? "ЁЯОе рд░реАрд▓реНрд╕ рдХрдВрдЯреЗрдВрдЯ: тВ╣[рдЖрдкрдХреА rate]" : "я┐╜я┐╜я┐╜я┐╜ Reels Content: тВ╣[Your rate]"}
${language === "hindi" ? "тАв High-quality reel creation" : "тАв High-quality reel creation"}
${language === "hindi" ? "я┐╜я┐╜ Trending music/sounds" : "тАв Trending music/sounds"}

${language === "hindi" ? "Best," : "Best,"}
${userName}

---

${language === "hindi" ? "рдЯреЗрдореНя┐╜я┐╜я┐╜я┐╜реНрд▓реЗрдЯ 4: рдия┐╜я┐╜я┐╜рдЧреЛрд╕рд┐рдПрд╢рди/рдХрд╛рдЙрдВрдЯрд░ рдСрдлрд░" : "TEMPLATE 4: NEGOTIATION/COUNTER OFFER"}
${language === "hindi" ? "рд╡рд┐рд╖рдп:" : "Subject:"} ${language === "hindi" ? "Re: Collaboration proposal - Let's find a win-win" : "Re: Collaboration proposal - Let's find a win-win"}

${language === "hindi" ? "Hi [Contact Name]," : "Hi [Contact Name],"}

${language === "hindi" ? "рдЖрдкрдХреЗ proposal я┐╜я┐╜реЗ рд▓рд┐рдП thank you! рдоя┐╜я┐╜рдВ definitely interested рд╣я┐╜я┐╜рдВред" : "Thank you for your proposal! I'm definitely interested."}

${language === "hindi" ? "Considering my engagement rates рдФрд░ audience quality, рдХреНрдпрд╛ рд╣рдо rate рдХя┐╜я┐╜я┐╜ slightly adjust рдХрд░ рд╕рдХрддреЗ я┐╜я┐╜реИрдВ? рдореИрдВ тВ╣[your counter] suggest я┐╜я┐╜рд░реВрдВя┐╜я┐╜рд╛ because:" : "Considering my engagement rates and audience quality, could we adjust the rate slightly? I'd suggest тВ╣[your counter] because:"}

${language === "hindi" ? "тАв рдореЗрд░реА audience рдХя┐╜я┐╜ [specific demographic] match рдХрд░рддрд╛ рд╣реИ рдЖрдкрдХреЗ target рд╕реЗ" : "тАв My audience demographic matches your target perfectly"}
${language === "hindi" ? "тАв рдореЗрд░реЗ recent collaborations рдореЗрдВ [specific results] рдорд┐рд▓реЗ рд╣реИрдВ" : "тАв My recent collaborations achieved [specific results]"}
${language === "hindi" ? "я┐╜я┐╜ рдореИрдВ additional value add рдХрд░ рд╕рдХрддя┐╜я┐╜ рд╣я┐╜я┐╜рдВ like [extra service]" : "тАв I can add additional value like [extra service]"}

${language === "hindi" ? "я┐╜я┐╜реИя┐╜я┐╜я┐╜ flexible рд╣я┐╜я┐╜рдВ рдФя┐╜я┐╜я┐╜ я┐╜я┐╜я┐╜я┐╜ mutually beneficial deal рдмрдирд╛рдирд╛ я┐╜я┐╜я┐╜я┐╜я┐╜рд╣рддрд╛ рд╣реВрдВя┐╜я┐╜я┐╜" : "I'm flexible and want to create a mutually beneficial deal."}

${language === "hindi" ? "Best regards," : "Best regards,"}
${userName}

---

${language === "hindi" ? "рдЯреЗрдореНрдкреНрд▓реЗрдЯ 5: рдкя┐╜я┐╜рдлреЙрд░реНрдореЗрдВрд╕ рд░рд┐рдкреЛя┐╜я┐╜я┐╜реНрдЯ" : "TEMPLATE 5: PERFORMANCE REPORT"}
${language === "hindi" ? "рд╡рд┐рд╖рдп:" : "Subject:"} ${language === "hindi" ? `${userName} x [Brand] - Campaign Performance Report` : `${userName} x [Brand] - Campaign Performance Report`}

${language === "hindi" ? "Dear [Brand Team]," : "Dear [Brand Team],"}

${language === "hindi" ? "рд╣рдорд╛рд░реЗ recent collaboration рдХреЗ results share рдХрд░рдирд╛ рдЪрд╛рд╣рддрд╛ рд╣я┐╜я┐╜я┐╜рдВ:" : "I wanted to share the results from our recent collaboration:"}

${language === "hindi" ? "ЁЯУК PERFORMANCE METRICS:" : "ЁЯУК PERFORMANCE METRICS:"}
${language === "hindi" ? "тАв Post Reach: [number] impressions" : "тАв Post Reach: [number] impressions"}
${language === "hindi" ? "тАв Engagement Rate: [percentage]" : "тАв Engagement Rate: [percentage]"}
${language === "hindi" ? "тАв Story Views: [number]" : "тАв Story Views: [number]"}
${language === "hindi" ? "я┐╜я┐╜ Website Clicks: [number]" : "тАв Website Clicks: [number]"}

${language === "hindi" ? "ЁЯОп AUDIENCE FEEDBACK:" : "ЁЯОп AUDIENCE FEEDBACK:"}
${language === "hindi" ? "тАв [Positive feedback examples]" : "тАв [Positive feedback examples]"}
${language === "hindi" ? "тАв [Questions about product]" : "тАв [Questions about product]"}

${language === "hindi" ? "рдореБрдЭреЗ future collaborations рдореЗя┐╜я┐╜я┐╜ interest рд╣реИ рдФрд░ рдЖрдкрдХреЗ products рдХреЛ authentically promote рдХрд░рдирд╛ рдкрд╕рдВрдж рд╣я┐╜я┐╜я┐╜ред" : "I'm interested in future collaborations and love authentically promoting your products."}

${language === "hindi" ? "Thank you for trusting me!" : "Thank you for trusting me!"}
${userName}

---

${language === "hindi" ? "рдЯреЗрдореНрдкреНрд▓реЗрдЯ 6: рд▓я┐╜я┐╜я┐╜рдия┐╜я┐╜рдЧ-рдЯрд░реНрдо рдкрд╛рд░реНрдЯрдирд░рд╢рд┐рдк рдкреНрд░я┐╜я┐╜я┐╜реЛрдЬрд╝рд▓" : "TEMPLATE 6: LONG-TERM PARTNERSHIP PROPOSAL"}
${language === "hindi" ? "рд╡рд┐рд╖рдп:" : "Subject:"} ${language === "hindi" ? `Long-term Partnership Proposal - ${userName} x [Brand]` : `Long-term Partnership Proposal - ${userName} x [Brand]`}

${language === "hindi" ? "Dear [Decision Maker]," : "Dear [Decision Maker],"}

${language === "hindi" ? "рд╣рдорд╛я┐╜я┐╜реЗ successful collaboration рдХреЗ рдмрд╛я┐╜я┐╜я┐╜я┐╜, я┐╜я┐╜я┐╜реИрдВ рдПрдХ long-term partnership propose рдХрд░рдирд╛ рдЪрд╛я┐╜я┐╜я┐╜реВрдВя┐╜я┐╜рд╛я┐╜я┐╜" : "Following our successful collaboration, I'd like to propose a long-term partnership."}

${language === "hindi" ? "ЁЯдЭ PROPOSED PARTNERSHIP:" : "ЁЯдЭ PROPOSED PARTNERSHIP:"}
${language === "hindi" ? "я┐╜я┐╜я┐╜я┐╜ Monthly content creation" : "тАв Monthly content creation"}
${language === "hindi" ? "тАв Product launches coverage" : "тАв Product launches coverage"}
${language === "hindi" ? "тАв Event participation" : "тАв Event participation"}
${language === "hindi" ? "тАв Brand ambassadorship" : "тАв Brand ambassadorship"}

${language === "hindi" ? "я┐╜я┐╜я┐╜я┐╜ PROPOSED STRUCTURE:" : "ЁЯТ░ PROPOSED STRUCTURE:"}
${language === "hindi" ? "тАв Retainer fee: тВ╣[amount]/month" : "тАв Retainer fee: тВ╣[amount]/month"}
${language === "hindi" ? "тАв Performance bonuses" : "тАв Performance bonuses"}
${language === "hindi" ? "тАв Exclusive collaboration terms" : "тАв Exclusive collaboration terms"}

${language === "hindi" ? "ЁЯУИ BENEFITS FOR YOUR BRAND:" : "ЁЯУИ BENEFITS FOR YOUR BRAND:"}
${language === "hindi" ? "тАв Consistent brand presence" : "тАв Consistent brand presence"}
${language === "hindi" ? "тАв Authentic audience connection" : "тАв Authentic audience connection"}
${language === "hindi" ? "тАв Better content planning" : "тАв Better content planning"}
${language === "hindi" ? "тАв Cost-effective marketing" : "тАв Cost-effective marketing"}

${language === "hindi" ? "рдХреНрдпрд╛ рдЖрдк рдЗрд╕ opportunity рдХреЛ explore рдХрд░рдиреЗ я┐╜я┐╜я┐╜реЗрдВ interested рд╣я┐╜я┐╜я┐╜рдВ?" : "Would you be interested in exploring this opportunity?"}

${language === "hindi" ? "Best," : "Best,"}
${userName}

---

${language === "hindi" ? "рдмреЛрдирд╕ рдЯрд┐рдкреНрд╕:" : "BONUS TIPS:"}
${language === "hindi" ? "тАв рд╣рдореЗрд╢рд╛ personalize рдХрд░реЗрдВ emails" : "тАв Always personalize your emails"}
${language === "hindi" ? "тАв Subject lines рдХреЛ catchy рд░рдЦреЗрдВ" : "я┐╜я┐╜я┐╜ Keep subject lines catchy"}
${language === "hindi" ? "тАв Follow-up рдХрд░рдирд╛ рди рднреВрд▓реЗрдВ" : "тАв Don't forget to follow up"}
${language === "hindi" ? "тАв Professional tone maintain рдХрд░реЗрдВ" : "тАв Maintain a professional tone"}
${language === "hindi" ? "тАв Results рдФрд░ metrics share я┐╜я┐╜рд░реЗрдВ" : "тАв Share results and metrics"}
${language === "hindi" ? "тАв Grateful рдФрд░ humble рд░рд╣реЗрдВ" : "тАв Be grateful and humble"}`;
    } else if (type === "growthStrategy") {
      content =
        fontSizeIndicator +
        `${language === "hindi" ? "90-я┐╜я┐╜я┐╜рд┐рди я┐╜я┐╜я┐╜я┐╜ я┐╜я┐╜я┐╜я┐╜рд░реЛрде рд░рдгрдиреАрддрд┐" : "90-DAY GROWTH STRATEGY"} - ${userName}

${language === "hindi" ? "рд╡реНрдпрдХреНрддрд┐рдЧрдд рд╡рд┐рд╢реНрд▓реЗрд╖рдг:" : "PERSONAL ANALYSIS:"}
${language === "hindi" ? "рд╡рд░реНрддрдорд╛рди рд╕реНя┐╜я┐╜я┐╜рд┐рддрд┐:" : "Current Status:"} ${quizData.followerCount} on ${quizData.primaryPlatform}
${language === "hindi" ? "рдоя┐╜я┐╜рдЦреНрдп рдЪреБрдиреМрддрд┐я┐╜я┐╜я┐╜рд╛рдВ:" : "Main Challenges:"} ${quizData.biggestChallenge.slice(0, 2).join(", ")}
${language === "hindi" ? "рдореБрдЦреНрдп рд▓рдХреНрд╖реНрдп:" : "Primary Goals:"} ${quizData.goals.slice(0, 2).join(", ")}

${language === "hindi" ? "рджрд┐рди 1-30: рдмреБрдия┐╜я┐╜я┐╜я┐╜я┐╜я┐╜я┐╜рд╛рдж рдоя┐╜я┐╜рдмреВрдд рдХрд░рдирд╛" : "DAYS 1-30: FOUNDATION BUILDING"}
${language === "hindi" ? "рд╕рдкреНя┐╜я┐╜я┐╜рд╛рд╣ 1:" : "Week 1:"}
${language === "hindi" ? `- ${quizData.postingFrequency === "Daily" ? "рдЕрдкрдиреА рд╡рд░реНя┐╜я┐╜я┐╜рдорд╛рди рдЖрд╡реГрддреНрддя┐╜я┐╜я┐╜ рдмрдирд╛рдП рд░рдЦреЗрдВ" : "рдкреЛрд╕реНрдЯрд┐рдВрдЧ рдЖрд╡реГрддреНрддрд┐ рдмрдврд╝я┐╜я┐╜рдХрд░ рджреИрдирд┐рдХ рдХрд░реЗрдВ"}` : `- ${quizData.postingFrequency === "Daily" ? "Maintain your current posting frequency" : "Increase posting frequency to daily"}`}
${language === "hindi" ? `- ${quizData.niche} рдкрд░ 10 рдХя┐╜я┐╜я┐╜рдЯреЗрдВрдЯ рдЖя┐╜я┐╜я┐╜я┐╜я┐╜рдбрд┐рдпрд╛ рддреИрдпрд╛рд░ я┐╜я┐╜я┐╜рд░реЗя┐╜я┐╜` : `- Prepare 10 content ideas for ${quizData.niche}`}
${language === "hindi" ? "- рд╣реИрд╢рдЯреИрдЧ рд░рд┐рд╕рд░реНрдЪ рдХрд░реЗрдВ (30 рд╣реИрд╢рдЯреИрдЧ рдорд┐рдХреНя┐╜я┐╜)" : "- Research hashtags (30 hashtag mix)"}

${language === "hindi" ? "рд╕рдкреНрддя┐╜я┐╜рд╣ 2-4:" : "Week 2-4:"}
${language === "hindi" ? "- рдЗрдВрдЯрд░реИрдХреНрдЯрд┐рд╡ рдХрдВрдЯреЗя┐╜я┐╜я┐╜рдЯ рдмрдврд╝рд╛рдПрдВ (рдкреЛрд▓реНрд╕, Q&A)" : "- Increase interactive content (polls, Q&A)"}
${language === "hindi" ? "- рдХрдореНрдпреБрдирд┐рдЯреА рдПрдВрдЧреЗрдЬрдореЗрдВрдЯ рдлреЛрдХя┐╜я┐╜я┐╜ рдХрд░реЗрдВ" : "- Focus on community engagement"}
${language === "hindi" ? "- рдПрдирд╛рд▓рд┐рдЯрд┐рдХреНрд╕ рдЯреНрд░реИя┐╜я┐╜ рдХрд░рдирд╛ рд╢реБя┐╜я┐╜я┐╜реВ рдХя┐╜я┐╜я┐╜я┐╜я┐╜я┐╜рдВ" : "- Start tracking analytics"}

${language === "hindi" ? "рджрд┐рди 31-60: рд╡рд┐рдХрд╛рд╕ рдФя┐╜я┐╜я┐╜ рдЕрдиреБрдХреВрд▓рди" : "DAYS 31-60: GROWTH & OPTIMIZATION"}
${language === "hindi" ? `- ${quizData.primaryPlatform === "Instagram" ? "рд░реАрд▓реНрд╕ рдкрд░ рдлреЛрдХрд╕ рдХрд░реЗя┐╜я┐╜ (60% рдХрдВрдЯреЗрдВя┐╜я┐╜)" : "рдкреНрд▓реЗрдЯрдлреЙрд░реНрдо-рд╕реНрдкреЗрд╕рд┐рдля┐╜я┐╜я┐╜я┐╜я┐╜я┐╜ рдХрдВрдЯреЗрдВрдЯ рдмрдврд╝рд╛рдПрдВ"}` : `- ${quizData.primaryPlatform === "Instagram" ? "Focus on Reels (60% content)" : "Increase platform-specific content"}`}
${language === "hindi" ? "- рдЯреНрд░реЗрдВрдбрд┐рдВрдЧ рдЯя┐╜я┐╜я┐╜рдкрд┐я┐╜я┐╜я┐╜я┐╜реНрд╕ рдкрд░ рдХрдВрдЯреЗрдВрдЯ рдмрдирд╛рдПрдВ" : "- Create content on trending topics"}
${language === "hindi" ? "- рдЕрдиреНрдп рдХреНрд░рд┐рдПрдЯрд░реНрд╕ рдХреЗ рд╕рд╛рде рдХреЛрд▓реИрдмреЛрд░реЗрд╢рди рд╢реБрд░реВ я┐╜я┐╜я┐╜рд░реЗрдВ" : "- Start collaborations with other creators"}

${language === "hindi" ? "рджя┐╜я┐╜рди 61-90: рдореБрджреНрд░реАрдХрд░рдг рдХреА рддреИрдпрд╛рд░реА" : "DAYS 61-90: MONETIZATION PREP"}
${language === "hindi" ? "- рдореАрдбрд┐рдпрд╛ рдХрд┐рдЯ рддреИрдпрд╛рд░ рдХрд░реЗрдВ" : "- Prepare media kit"}
${language === "hindi" ? "- рдмреНрд░рд╛рдВя┐╜я┐╜я┐╜реНрд╕ рд╕я┐╜я┐╜ я┐╜я┐╜я┐╜рдВрдкрд░реНрдХ рд╢реБрд░реВ рдХрд░реЗрдВ" : "- Start reaching out to brands"}
${language === "hindi" ? "- рдИрдореЗрд▓ рд▓рд┐рд╕реНрдЯ рдмрдирд╛рдия┐╜я┐╜я┐╜ рд╢реБрд░реВ рдХрд░реЗрдВ" : "- Start building email list"}

${language === "hindi" ? "рдЕрдкреЗя┐╜я┐╜реНрд╖рд┐рдд рдкрд░рд┐рдгрд╛рдо (90 рджрд┐рди):" : "EXPECTED RESULTS (90 days):"}
${language === "hindi" ? "- рдлреЙрд▓реЛрдЕрд░ рдЧреНрд░реЛрде: 40-80%" : "- Follower Growth: 40-80%"}
${language === "hindi" ? "- я┐╜я┐╜рдВрдЧреЗрдЬрдореЗрдВрдЯ рдореЗрдВ рд╕я┐╜я┐╜я┐╜я┐╜я┐╜я┐╜я┐╜рдзрд╛рд░: 50-100%" : "- Engagement Improvement: 50-100%"}
${language === "hindi" ? "- я┐╜я┐╜я┐╜реНя┐╜я┐╜я┐╜я┐╜рдВрдб рдкреВрдЫя┐╜я┐╜я┐╜рд╛рдЫ: 3-8" : "- Brand Inquiries: 3-8"}`;
    }

    const blob = new Blob([content], { type: "text/plain" });
    const url = URL.createObjectURL(blob);
    const a = document.createElement("a");
    a.href = url;
    a.download = fileName;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  if (showFreeResources) {
    return (
      <div className="min-h-screen bg-white">
        {/* Header */}
        <header className="relative z-10 px-4 py-6 bg-white border-b border-gray-100 sticky top-0 backdrop-blur-sm">
          <div className="container mx-auto flex justify-between items-center">
            <Link to="/" className="text-lg font-bold text-gray-900">
              FameChase<span className="text-neon-green">.com</span>
            </Link>

            <div className="flex items-center gap-4">
              <Link
                to="/"
                className="flex items-center gap-2 text-gray-600 hover:text-gray-900 transition-colors"
              >
                <Home className="w-4 h-4" />
                Back to Home
              </Link>
              {/* Hindi language disabled - English only */}
              <div className="text-sm text-gray-600 bg-gray-50 px-3 py-2 rounded-lg">
                English
              </div>
            </div>
          </div>
        </header>

        <main className="container mx-auto px-4 py-12">
          <div className="max-w-4xl mx-auto text-center">
            <div className="w-20 h-20 bg-gradient-to-r from-neon-green to-electric-blue rounded-full flex items-center justify-center mx-auto mb-6">
              <CheckCircle className="w-10 h-10 text-white" />
            </div>

            <h1 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
              {t.freeResources.title}
            </h1>
            <p className="text-xl text-gray-600 mb-12 max-w-2xl mx-auto">
              {t.freeResources.subtitle}
            </p>

            <div className="grid md:grid-cols-3 gap-8 mb-12">
              {/* Basic Media Kit Template - FREE VERSION */}
              <div className="bg-white border-2 border-gray-200 rounded-2xl p-8 hover:border-neon-green transition-colors relative">
                <div className="absolute top-4 right-4 bg-green-100 text-green-800 px-3 py-1 rounded-full text-xs font-bold">
                  FREE STARTER
                </div>
                <div className="w-16 h-16 bg-blue-100 rounded-xl flex items-center justify-center mx-auto mb-4">
                  <FileText className="w-8 h-8 text-blue-600" />
                </div>
                <h3 className="text-xl font-bold text-gray-900 mb-3">
                  Basic Media Kit Template
                </h3>
                <p className="text-gray-600 mb-4">
                  Simple media kit template with basic stats and contact info -
                  perfect for getting started
                </p>
                <div className="text-sm text-green-600 mb-4">
                  тЬУ Professional template format
                  <br />
                  тЬУ Industry-standard rate suggestions
                  <br />
                  тЬУ Easy customization fields
                  <br />тЬУ Multi-platform rate structure
                </div>
                <button
                  onClick={() =>
                    generateDownload(
                      "mediaKit",
                      `${quizData.name || "Creator"}_Basic_Media_Kit_${language}.txt`,
                    )
                  }
                  className="w-full bg-gradient-to-r from-neon-green to-electric-blue text-black font-bold py-3 px-6 rounded-xl hover:shadow-lg transition-all"
                >
                  <Download className="w-4 h-4 inline mr-2" />
                  {t.freeResources.downloadFree}
                </button>
              </div>

              {/* Email Templates - FREE VERSION */}
              <div className="bg-white border-2 border-gray-200 rounded-2xl p-8 hover:border-neon-green transition-colors relative">
                <div className="absolute top-4 right-4 bg-green-100 text-green-800 px-3 py-1 rounded-full text-xs font-bold">
                  FREE STARTER
                </div>
                <div className="w-16 h-16 bg-green-100 rounded-xl flex items-center justify-center mx-auto mb-4">
                  <Mail className="w-8 h-8 text-green-600" />
                </div>
                <h3 className="text-xl font-bold text-gray-900 mb-3">
                  Basic Email Templates (6)
                </h3>
                <p className="text-gray-600 mb-4">
                  Essential outreach templates to get you started with brand
                  partnerships
                </p>
                <div className="text-sm text-green-600 mb-4">
                  тЬУ 6 proven email templates
                  <br />
                  тЬУ Professional follow-up sequences
                  <br />
                  тЬУ Ready-to-use pitch formats
                  <br />тЬУ Brand outreach best practices
                </div>
                <button
                  onClick={() =>
                    generateDownload(
                      "emailTemplates",
                      `Basic_Email_Templates_${language}.txt`,
                    )
                  }
                  className="w-full bg-gradient-to-r from-neon-green to-electric-blue text-black font-bold py-3 px-6 rounded-xl hover:shadow-lg transition-all"
                >
                  <Download className="w-4 h-4 inline mr-2" />
                  {t.freeResources.downloadFree}
                </button>
              </div>

              {/* Growth Strategy - FREE VERSION */}
              <div className="bg-white border-2 border-gray-200 rounded-2xl p-8 hover:border-neon-green transition-colors relative">
                <div className="absolute top-4 right-4 bg-green-100 text-green-800 px-3 py-1 rounded-full text-xs font-bold">
                  FREE STARTER
                </div>
                <div className="w-16 h-16 bg-purple-100 rounded-xl flex items-center justify-center mx-auto mb-4">
                  <Target className="w-8 h-8 text-purple-600" />
                </div>
                <h3 className="text-xl font-bold text-gray-900 mb-3">
                  Basic Growth Guide (30-Day)
                </h3>
                <p className="text-gray-600 mb-4">
                  Simple 30-day action plan to get you started on your growth
                  journey
                </p>
                <div className="text-sm text-green-600 mb-4">
                  тЬУ Comprehensive 30-day action plan
                  <br />
                  тЬУ Proven growth strategies
                  <br />
                  тЬУ Daily actionable tasks
                  <br />тЬУ Progress tracking templates
                </div>
                <button
                  onClick={() =>
                    generateDownload(
                      "growthStrategy",
                      `Basic_Growth_Guide_${language}.txt`,
                    )
                  }
                  className="w-full bg-gradient-to-r from-neon-green to-electric-blue text-black font-bold py-3 px-6 rounded-xl hover:shadow-lg transition-all"
                >
                  <Download className="w-4 h-4 inline mr-2" />
                  {t.freeResources.downloadFree}
                </button>
              </div>
            </div>

            <div className="bg-gradient-to-r from-yellow-50 to-orange-50 border-2 border-yellow-200 rounded-2xl p-8">
              <h2 className="text-lg font-bold text-gray-900 mb-4">
                {language === "hindi"
                  ? "рдЕрдкрдирд╛ я┐╜я┐╜я┐╜реВрд░рд╛ рд╡я┐╜я┐╜я┐╜рд╢реНрд▓реЗрд╖рдг рдЪрд╛рд╣рддреЗ рд╣реИрдВ?"
                  : "Want Your Complete Analysis?"}
              </h2>
              <p className="text-gray-600 mb-6">
                {language === "hindi"
                  ? "рд╡реНрдпрдХреНрддрд┐рдЧрдд SWOT рд╡рд┐рд╢реНрд▓реЗрд╖рдг, я┐╜я┐╜я┐╜рд┐рдХрд╛я┐╜я┐╜я┐╜ рд░рдгрдиреАрддрд┐, рдФрд░ рдкреНрд░я┐╜я┐╜рдоя┐╜я┐╜рдпрдо рдЯреВрд▓реНя┐╜я┐╜я┐╜ рдХреЗ рд╕рд╛рде рдЕрдкрдиреА рдХреНрд░рд┐рдПрдЯрд░ рдпрд╛рддреНя┐╜я┐╜я┐╜рд╛ рдХреЛ рддреЗрдЬрд╝реА рд╕реЗ рдЖрдЧреЗ рдмрдврд╝рд╛рдПрдВред"
                  : "Get personalized SWOT analysis, growth strategy, and premium tools to accelerate your creator journey."}
              </p>
              <button
                onClick={handleSubmit}
                className="bg-gradient-to-r from-neon-green to-electric-blue text-black font-bold py-4 px-8 rounded-xl text-lg hover:shadow-lg hover:scale-105 transition-all duration-300"
              >
                <Sparkles className="w-5 h-5 inline mr-2" />
                {t.buttons.submit}
              </button>
            </div>
          </div>
        </main>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-white">
      {/* Header */}
      <header className="relative z-10 px-2 md:px-4 py-3 md:py-4 bg-white border-b border-gray-100 sticky top-0 backdrop-blur-sm">
        <div className="container mx-auto flex justify-between items-center">
          <Link to="/" className="text-base md:text-lg font-bold text-gray-900">
            FameChase<span className="text-neon-green">.com</span>
          </Link>

          <div className="flex items-center gap-2 md:gap-4">
            <Link
              to="/"
              className="flex items-center gap-1 md:gap-2 text-gray-600 hover:text-gray-900 transition-colors text-sm md:text-base"
            >
              <Home className="w-3 h-3 md:w-4 md:h-4" />
              <span className="hidden sm:inline">Back to Home</span>
              <span className="sm:hidden">Home</span>
            </Link>
            {/* Hindi language disabled - English only */}
            <div className="text-xs md:text-sm text-gray-600 bg-gray-50 px-2 py-1 md:px-3 md:py-2 rounded-lg">
              English
            </div>
          </div>
        </div>
      </header>

      {/* Quiz Content */}
      <main ref={quizContentRef} className="container mx-auto px-2 md:px-4 py-2">
        <div className="max-w-xl mx-auto">
          <div className="text-center mb-4 md:mb-6">
            <h1 className="text-2xl md:text-4xl font-bold text-gray-900 mb-2 md:mb-4">
              {t.title}
            </h1>
            <p className="text-sm md:text-lg text-gray-600 leading-relaxed px-2">
              {t.subtitle}
            </p>

            {/* Animated Icons */}
            <div className="flex justify-center gap-3 mt-3">
              <Sparkles className="w-4 h-4 md:w-6 md:h-6 text-neon-green animate-pulse" />
              <Star className="w-4 h-4 md:w-6 md:h-6 text-electric-blue animate-pulse" />
              <Target className="w-4 h-4 md:w-6 md:h-6 text-soft-violet animate-pulse" />
            </div>
          </div>

          <div className="bg-white border-2 border-gray-100 rounded-2xl p-4 md:p-8 shadow-xl backdrop-blur-sm min-h-[70vh] flex flex-col justify-between">
            {/* Language is now fixed to English only */}
            {/* Loading State */}
            {isGenerating && (
              <div className="text-center py-12">
                <div className="w-20 h-20 bg-gradient-to-r from-neon-green to-electric-blue rounded-full flex items-center justify-center mx-auto mb-6 animate-spin">
                  <Sparkles className="w-10 h-10 text-white" />
                </div>
                <h2 className="text-lg font-bold text-gray-900 mb-4">
                  Generating Your Creator Analysis...
                </h2>
                <p className="text-gray-600">
                  Our AI is analyzing your responses and creating your
                  personalized toolkit
                </p>
              </div>
            )}

            {!isGenerating && (
              <>
                {/* Step 1: Primary Platform */}
                {currentStep === 1 && (
                  <div className="space-y-4 md:space-y-6 flex-1 flex flex-col">
                    <div className="text-center mb-4 md:mb-6">
                      <div className="w-12 h-12 md:w-16 md:h-16 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-3">
                        <Globe className="w-6 h-6 md:w-8 md:h-8 text-white" />
                      </div>
                      <h2 className="text-lg md:text-2xl font-bold text-gray-900 mb-2">
                        Your Main Platform
                      </h2>
                      <p className="text-sm md:text-base text-gray-600 px-2">
                        Where do you create and share your content?
                      </p>
                    </div>

                    <div className="flex-1">
                      <label className="block text-gray-900 font-semibold mb-3 text-base md:text-lg">
                        {t.questions.primaryPlatform}
                      </label>
                      <select
                        value={quizData.primaryPlatform}
                        onChange={(e) =>
                          updateQuizData("primaryPlatform", e.target.value)
                        }
                        className="w-full bg-white border-2 border-gray-300 text-gray-900 px-3 py-3 md:py-4 rounded-lg focus:border-electric-blue focus:outline-none transition-colors text-sm md:text-base"
                      >
                        <option value="">Select your primary platform</option>
                        {t.options.platforms.map((platform) => (
                          <option key={platform} value={platform}>
                            {platform}
                          </option>
                        ))}
                      </select>
                    </div>
                  </div>
                )}

                {/* Step 2: Follower Count */}
                {currentStep === 2 && (
                  <div className="space-y-4 md:space-y-6 flex-1 flex flex-col">
                    <div className="text-center mb-4 md:mb-6">
                      <div className="w-12 h-12 md:w-16 md:h-16 bg-gradient-to-r from-green-500 to-blue-500 rounded-full flex items-center justify-center mx-auto mb-3">
                        <Star className="w-6 h-6 md:w-8 md:h-8 text-white" />
                      </div>
                      <h2 className="text-lg md:text-2xl font-bold text-gray-900 mb-2">
                        Your Audience Size
                      </h2>
                      <p className="text-sm md:text-base text-gray-600 px-2">
                        How many followers do you currently have?
                      </p>
                    </div>

                    <div className="flex-1">
                      <label className="block text-gray-900 font-semibold mb-3 text-base md:text-lg">
                        {t.questions.followerCount}
                      </label>
                      <select
                        value={quizData.followerCount}
                        onChange={(e) =>
                          updateQuizData("followerCount", e.target.value)
                        }
                        className="w-full bg-white border-2 border-gray-300 text-gray-900 px-3 py-3 md:py-4 rounded-lg focus:border-electric-blue focus:outline-none transition-colors text-sm md:text-base"
                      >
                        <option value="">Select your follower count</option>
                        {t.options.followerRanges.map((range) => (
                          <option key={range} value={range}>
                            {range}
                          </option>
                        ))}
                      </select>
                    </div>
                  </div>
                )}

                {/* Step 3: Secondary Platforms */}
                {currentStep === 3 && (
                  <div className="space-y-4 md:space-y-6 flex-1 flex flex-col">
                    <div className="text-center mb-4 md:mb-6">
                      <div className="w-12 h-12 md:w-16 md:h-16 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center mx-auto mb-3">
                        <Layout className="w-6 h-6 md:w-8 md:h-8 text-white" />
                      </div>
                      <h2 className="text-lg md:text-2xl font-bold text-gray-900 mb-2">
                        Other Platforms
                      </h2>
                      <p className="text-sm md:text-base text-gray-600 px-2">
                        Which other platforms do you use?
                      </p>
                    </div>

                    <div className="flex-1">
                      <label className="block text-gray-900 font-semibold mb-3 text-base md:text-lg">
                        {t.questions.secondaryPlatforms}
                      </label>
                      <div className="grid grid-cols-2 md:grid-cols-3 gap-2">
                        {t.options.platforms.map((platform) => (
                          <button
                            key={platform}
                            onClick={() => toggleSecondaryPlatform(platform)}
                            className={`p-2 md:p-3 rounded-lg border-2 text-xs md:text-sm font-medium transition-all duration-300 ${
                              quizData.secondaryPlatforms.includes(platform)
                                ? "bg-gradient-to-r from-neon-green/10 to-electric-blue/10 border-neon-green text-gray-900 shadow-lg"
                                : "bg-white border-gray-200 text-gray-700 hover:border-gray-300 hover:shadow-md"
                            }`}
                          >
                            {platform}
                          </button>
                        ))}
                      </div>
                    </div>
                  </div>
                )}

                {/* Step 4: Content Niche */}
                {currentStep === 4 && (
                  <div className="space-y-4 md:space-y-6 flex-1 flex flex-col">
                    <div className="text-center mb-4 md:mb-6">
                      <h2 className="text-lg md:text-xl font-bold text-gray-900 mb-2">
                        Your Content Niche ЁЯОп
                      </h2>
                      <p className="text-sm md:text-base text-gray-600 px-2">
                        What topics do you create content about?
                      </p>
                    </div>

                    <div className="flex-1">
                      <label className="block text-gray-900 font-semibold mb-3 text-base md:text-lg">
                        {t.questions.niche}
                      </label>
                      <select
                        value={quizData.niche}
                        onChange={(e) =>
                          updateQuizData("niche", e.target.value)
                        }
                        className="w-full bg-white border-2 border-gray-300 text-gray-900 px-3 py-3 md:py-4 rounded-lg focus:border-soft-violet focus:outline-none transition-colors text-sm md:text-base"
                      >
                        <option value="">
                          What topics do you create content about?
                        </option>
                        {t.options.niches.map((niche) => (
                          <option key={niche} value={niche}>
                            {niche}
                          </option>
                        ))}
                      </select>
                    </div>
                  </div>
                )}

                {/* Step 5: Content Type */}
                {currentStep === 5 && (
                  <div className="space-y-4 md:space-y-6 flex-1 flex flex-col">
                    <div className="text-center mb-4 md:mb-6">
                      <h2 className="text-lg md:text-xl font-bold text-gray-900 mb-2">
                        Content Format ЁЯОе
                      </h2>
                      <p className="text-sm md:text-base text-gray-600 px-2">
                        What type of content do you primarily create?
                      </p>
                    </div>

                    <div className="flex-1">
                      <label className="block text-gray-900 font-semibold mb-3 text-base md:text-lg">
                        {t.questions.contentType}
                      </label>
                      <select
                        value={quizData.contentType}
                        onChange={(e) =>
                          updateQuizData("contentType", e.target.value)
                        }
                        className="w-full bg-white border-2 border-gray-300 text-gray-900 px-3 py-3 md:py-4 rounded-lg focus:border-electric-blue focus:outline-none transition-colors text-sm md:text-base"
                      >
                        <option value="">
                          What type of content do you primarily create?
                        </option>
                        {t.options.contentTypes.map((type) => (
                          <option key={type} value={type}>
                            {type}
                          </option>
                        ))}
                      </select>
                    </div>
                  </div>
                )}

                {/* Step 6: Posting Frequency */}
                {currentStep === 6 && (
                  <div className="space-y-8">
                    <div className="text-center mb-8">
                      <h2 className="text-lg font-bold text-gray-900 mb-4">
                        Posting Schedule тП░
                      </h2>
                      <p className="text-gray-600">
                        How often do you share new content?
                      </p>
                    </div>

                    <div>
                      <label className="block text-gray-900 font-semibold mb-4 text-lg">
                        {t.questions.postingFrequency}
                      </label>
                      <select
                        value={quizData.postingFrequency}
                        onChange={(e) =>
                          updateQuizData("postingFrequency", e.target.value)
                        }
                        className="w-full bg-white border-2 border-gray-300 text-gray-900 px-4 py-6 rounded-xl focus:border-neon-green focus:outline-none transition-colors text-lg"
                      >
                        <option value="">
                          How often do you share new content?
                        </option>
                        {t.options.frequencies.map((freq) => (
                          <option key={freq} value={freq}>
                            {freq}
                          </option>
                        ))}
                      </select>
                    </div>
                  </div>
                )}

                {/* Step 7: Experience */}
                {currentStep === 7 && (
                  <div className="space-y-8">
                    <div className="text-center mb-8">
                      <h2 className="text-3xl font-bold text-gray-900 mb-4">
                        Your Creator Journey ЁЯЪА
                      </h2>
                      <p className="text-xl text-gray-600">
                        How long have you been creating content?
                      </p>
                    </div>

                    <div>
                      <label className="block text-gray-900 font-semibold mb-4 text-lg">
                        {t.questions.experience}
                      </label>
                      <select
                        value={quizData.experience[0] || ""}
                        onChange={(e) =>
                          updateQuizData(
                            "experience",
                            e.target.value ? [e.target.value] : [],
                          )
                        }
                        className="w-full bg-white border-2 border-gray-300 text-gray-900 px-4 py-6 rounded-xl focus:border-soft-violet focus:outline-none transition-colors text-lg"
                      >
                        <option value="">Select your experience level</option>
                        {t.options.experiences.map((exp) => (
                          <option key={exp} value={exp}>
                            {exp}
                          </option>
                        ))}
                      </select>
                    </div>
                  </div>
                )}

                {/* Step 8: Monthly Income */}
                {currentStep === 8 && (
                  <div className="space-y-8">
                    <div className="text-center mb-8">
                      <h2 className="text-3xl font-bold text-gray-900 mb-4">
                        Current Income ЁЯТ░
                      </h2>
                      <p className="text-xl text-gray-600">
                        What's your current monthly income from content
                        creation?
                      </p>
                    </div>

                    <div>
                      <label className="block text-gray-900 font-semibold mb-4 text-lg">
                        {t.questions.monthlyIncome}
                      </label>
                      <select
                        value={quizData.monthlyIncome}
                        onChange={(e) =>
                          updateQuizData("monthlyIncome", e.target.value)
                        }
                        className="w-full bg-white border-2 border-gray-300 text-gray-900 px-4 py-6 rounded-xl focus:border-soft-violet focus:outline-none transition-colors text-lg"
                      >
                        <option value="">
                          What's your current monthly income from content?
                        </option>
                        {t.options.incomes.map((income) => (
                          <option key={income} value={income}>
                            {income}
                          </option>
                        ))}
                      </select>
                    </div>
                  </div>
                )}

                {/* Step 9: Biggest Challenge */}
                {currentStep === 9 && (
                  <div className="space-y-10">
                    <div className="text-center mb-12">
                      <div className="w-20 h-20 bg-gradient-to-r from-red-500 to-orange-500 rounded-full flex items-center justify-center mx-auto mb-6">
                        <Target className="w-10 h-10 text-white" />
                      </div>
                      <h2 className="text-3xl font-bold text-gray-900 mb-4">
                        What's Your Biggest Struggle?
                      </h2>
                      <p className="text-xl text-gray-600 max-w-3xl mx-auto">
                        Pick up to 3 challenges тАУ we're all in this together!
                        Understanding your pain points helps us provide better
                        solutions.
                      </p>
                    </div>

                    <div>
                      <div className="space-y-6">
                        <div>
                          <label className="block text-gray-900 font-semibold mb-3 text-lg">
                            1. Growth & Engagement
                          </label>
                          <select
                            value={
                              quizData.biggestChallenge.find((c) =>
                                c.includes("Growth & Engagement"),
                              ) || ""
                            }
                            onChange={(e) => {
                              if (e.target.value) {
                                const filtered =
                                  quizData.biggestChallenge.filter(
                                    (c) => !c.includes("Growth & Engagement"),
                                  );
                                if (filtered.length < 3) {
                                  updateQuizData("biggestChallenge", [
                                    ...filtered,
                                    e.target.value,
                                  ]);
                                }
                              } else {
                                updateQuizData(
                                  "biggestChallenge",
                                  quizData.biggestChallenge.filter(
                                    (c) => !c.includes("Growth & Engagement"),
                                  ),
                                );
                              }
                            }}
                            className="w-full bg-white border-2 border-gray-300 text-gray-900 px-4 py-4 rounded-xl focus:border-red-400 focus:outline-none transition-colors text-base"
                          >
                            <option value="">
                              Choose your Growth & Engagement challenge
                            </option>
                            <option value="ЁЯФД Growth & Engagement: Low views & inconsistent engagement">
                              Low views & inconsistent engagement
                            </option>
                            <option value="ЁЯза Growth & Engagement: Staying relevant with fast-moving trends">
                              Staying relevant with fast-moving trends
                            </option>
                            <option value="ЁЯФБ Growth & Engagement: Algorithm changes killing reach">
                              Algorithm changes killing reach
                            </option>
                            <option value="ЁЯзНтАНтЩАя╕П Growth & Engagement: Competing with bigger creators">
                              Competing with bigger creators
                            </option>
                          </select>
                        </div>

                        <div>
                          <label className="block text-gray-900 font-semibold mb-3 text-lg">
                            2. Brand & Identity
                          </label>
                          <select
                            value={
                              quizData.biggestChallenge.find((c) =>
                                c.includes("Brand & Identity"),
                              ) || ""
                            }
                            onChange={(e) => {
                              if (e.target.value) {
                                const filtered =
                                  quizData.biggestChallenge.filter(
                                    (c) => !c.includes("Brand & Identity"),
                                  );
                                if (filtered.length < 3) {
                                  updateQuizData("biggestChallenge", [
                                    ...filtered,
                                    e.target.value,
                                  ]);
                                }
                              } else {
                                updateQuizData(
                                  "biggestChallenge",
                                  quizData.biggestChallenge.filter(
                                    (c) => !c.includes("Brand & Identity"),
                                  ),
                                );
                              }
                            }}
                            className="w-full bg-white border-2 border-gray-300 text-gray-900 px-4 py-4 rounded-xl focus:border-red-400 focus:outline-none transition-colors text-base"
                          >
                            <option value="">
                              Choose your Brand & Identity challenge
                            </option>
                            <option value="ЁЯЧгя╕П Brand & Identity: Struggling to find my unique voice/style">
                              Struggling to find my unique voice/style
                            </option>
                            <option value="ЁЯдЭ Brand & Identity: Balancing authenticity with brand appeal">
                              Balancing authenticity with brand appeal
                            </option>
                            <option value="ЁЯМ▒ Brand & Identity: Building a real, connected community">
                              Building a real, connected community
                            </option>
                          </select>
                        </div>

                        <div>
                          <label className="block text-gray-900 font-semibold mb-3 text-lg">
                            3. Monetization & Scaling
                          </label>
                          <select
                            value={
                              quizData.biggestChallenge.find((c) =>
                                c.includes("Monetization & Scaling"),
                              ) || ""
                            }
                            onChange={(e) => {
                              if (e.target.value) {
                                const filtered =
                                  quizData.biggestChallenge.filter(
                                    (c) =>
                                      !c.includes("Monetization & Scaling"),
                                  );
                                if (filtered.length < 3) {
                                  updateQuizData("biggestChallenge", [
                                    ...filtered,
                                    e.target.value,
                                  ]);
                                }
                              } else {
                                updateQuizData(
                                  "biggestChallenge",
                                  quizData.biggestChallenge.filter(
                                    (c) =>
                                      !c.includes("Monetization & Scaling"),
                                  ),
                                );
                              }
                            }}
                            className="w-full bg-white border-2 border-gray-300 text-gray-900 px-4 py-4 rounded-xl focus:border-red-400 focus:outline-none transition-colors text-base"
                          >
                            <option value="">
                              Choose your Monetization & Scaling challenge
                            </option>
                            <option value="ЁЯТФ Monetization & Scaling: Can't convert followers into paying customers">
                              Can't convert followers into paying customers
                            </option>
                            <option value="ЁЯдЭ Monetization & Scaling: Not landing brand collaborations">
                              Not landing brand collaborations
                            </option>
                            <option value="ЁЯУК Monetization & Scaling: Confused by analytics & metrics">
                              Confused by analytics & metrics
                            </option>
                          </select>
                        </div>

                        <div>
                          <label className="block text-gray-900 font-semibold mb-3 text-lg">
                            4. Creator Wellness
                          </label>
                          <select
                            value={
                              quizData.biggestChallenge.find((c) =>
                                c.includes("Creator Wellness"),
                              ) || ""
                            }
                            onChange={(e) => {
                              if (e.target.value) {
                                const filtered =
                                  quizData.biggestChallenge.filter(
                                    (c) => !c.includes("Creator Wellness"),
                                  );
                                if (filtered.length < 3) {
                                  updateQuizData("biggestChallenge", [
                                    ...filtered,
                                    e.target.value,
                                  ]);
                                }
                              } else {
                                updateQuizData(
                                  "biggestChallenge",
                                  quizData.biggestChallenge.filter(
                                    (c) => !c.includes("Creator Wellness"),
                                  ),
                                );
                              }
                            }}
                            className="w-full bg-white border-2 border-gray-300 text-gray-900 px-4 py-4 rounded-xl focus:border-red-400 focus:outline-none transition-colors text-base"
                          >
                            <option value="">
                              Choose your Creator Wellness challenge
                            </option>
                            <option value="ЁЯе╡ Creator Wellness: Burnout & content fatigue">
                              Burnout & content fatigue
                            </option>
                            <option value="ЁЯТм Creator Wellness: Handling trolls/negativity">
                              Handling trolls/negativity
                            </option>
                            <option value="ЁЯУ▒ Creator Wellness: Managing too many platforms at once">
                              Managing too many platforms at once
                            </option>
                          </select>
                        </div>
                      </div>
                      <div className="bg-blue-50 border border-blue-200 rounded-xl p-4 mt-6">
                        <p className="text-center text-blue-800 font-medium">
                          Selected: {quizData.biggestChallenge.length} / 3
                          maximum
                        </p>
                      </div>
                    </div>
                  </div>
                )}

                {/* Step 10: Goals */}
                {currentStep === 10 && (
                  <div className="space-y-10">
                    <div className="text-center mb-12">
                      <div className="w-20 h-20 bg-gradient-to-r from-green-500 to-blue-500 rounded-full flex items-center justify-center mx-auto mb-6">
                        <TrendingUp className="w-10 h-10 text-white" />
                      </div>
                      <h2 className="text-3xl font-bold text-gray-900 mb-4">
                        {language === "hindi"
                          ? "рдЖрдкрдХреЗ 6-рдорд╣реАрдиреЗ рдХреЗ я┐╜я┐╜рдХреНрд╖реНрдп"
                          : "Your 6-Month Goals"}
                      </h2>
                      <p className="text-xl text-gray-600 max-w-3xl mx-auto">
                        {language === "hindi"
                          ? "рдЖрдк рдЕрдЧрд▓реЗ 6 рдоя┐╜я┐╜я┐╜реАрдиреЛрдВ я┐╜я┐╜я┐╜реЗрдВ рдХреНрдпрд╛ рд╣рд╛рд╕рд┐я┐╜я┐╜я┐╜ рдХрд░рдия┐╜я┐╜я┐╜ рдЪрд╛рд╣рддреЗ рд╣реИрдВ? 3 рд▓рдХреНрд╖реНрдп рдЪреБрдиреЗрдВ рдЬреЛ рдЖрдкрдХреЛ рд╕рдмрд╕реЗ рдЬя┐╜я┐╜я┐╜я┐╜я┐╜я┐╜рд╛рджрд╛ рдЙрддреНрд╕рд╛рд╣рд┐рдд рдХрд░рддреЗ рд╣реИрдВ!"
                          : "What are your main goals for the next 6 months? Select up to 3 most important goals тАУ this helps us personalize your recommendations"}
                      </p>
                    </div>

                    <div>
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                        {t.options.goals.map((goal) => (
                          <button
                            key={goal}
                            onClick={() =>
                              toggleMultipleChoice("goals", goal, 3)
                            }
                            disabled={
                              !quizData.goals.includes(goal) &&
                              quizData.goals.length >= 3
                            }
                            className={`p-6 rounded-2xl border-2 text-left transition-all duration-300 hover:scale-102 ${
                              !quizData.goals.includes(goal) &&
                              quizData.goals.length >= 3
                                ? "opacity-50 cursor-not-allowed"
                                : ""
                            } ${
                              quizData.goals.includes(goal)
                                ? "bg-gradient-to-r from-green-50 to-blue-50 border-green-400 text-gray-900 shadow-xl transform scale-102"
                                : "bg-white border-gray-200 text-gray-700 hover:border-green-300 hover:shadow-lg"
                            }`}
                          >
                            <div className="flex items-start gap-4">
                              {quizData.goals.includes(goal) && (
                                <CheckCircle className="w-6 h-6 text-green-500 flex-shrink-0 mt-1" />
                              )}
                              <span className="text-lg font-medium leading-relaxed">
                                {goal}
                              </span>
                            </div>
                          </button>
                        ))}
                      </div>
                      <div className="bg-green-50 border border-green-200 rounded-xl p-4 mt-6">
                        <p className="text-center text-green-800 font-medium">
                          Selected: {quizData.goals.length} / 3 maximum
                        </p>
                      </div>
                    </div>
                  </div>
                )}

                {/* Step 11: Social Links */}
                {currentStep === 11 && (
                  <div className="space-y-8">
                    <div className="text-center mb-8">
                      <h2 className="text-lg font-bold text-gray-900 mb-4">
                        Social Profiles ЁЯФЧ
                      </h2>
                      <p className="text-gray-600">
                        Optional: Add your social links for better analysis
                      </p>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div className="flex items-center gap-3">
                        <div className="w-8 h-8 bg-gradient-to-r from-pink-500 to-purple-500 rounded-lg flex items-center justify-center">
                          <Instagram className="w-4 h-4 text-white" />
                        </div>
                        <input
                          type="url"
                          value={quizData.socialLinks.instagram}
                          onChange={(e) =>
                            updateSocialLink("instagram", e.target.value)
                          }
                          placeholder="@username"
                          className="flex-1 bg-white border-2 border-gray-200 text-gray-900 px-3 py-2 rounded-lg focus:border-electric-blue focus:outline-none transition-colors text-sm"
                        />
                      </div>

                      <div className="flex items-center gap-3">
                        <div className="w-8 h-8 bg-red-500 rounded-lg flex items-center justify-center">
                          <Youtube className="w-4 h-4 text-white" />
                        </div>
                        <input
                          type="url"
                          value={quizData.socialLinks.youtube}
                          onChange={(e) =>
                            updateSocialLink("youtube", e.target.value)
                          }
                          placeholder="@channel"
                          className="flex-1 bg-white border-2 border-gray-200 text-gray-900 px-3 py-2 rounded-lg focus:border-electric-blue focus:outline-none transition-colors text-sm"
                        />
                      </div>

                      <div className="flex items-center gap-3">
                        <div className="w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center">
                          <Linkedin className="w-4 h-4 text-white" />
                        </div>
                        <input
                          type="url"
                          value={quizData.socialLinks.linkedin}
                          onChange={(e) =>
                            updateSocialLink("linkedin", e.target.value)
                          }
                          placeholder="/in/username"
                          className="flex-1 bg-white border-2 border-gray-200 text-gray-900 px-3 py-2 rounded-lg focus:border-electric-blue focus:outline-none transition-colors text-sm"
                        />
                      </div>

                      <div className="flex items-center gap-3">
                        <div className="w-8 h-8 bg-blue-400 rounded-lg flex items-center justify-center">
                          <Twitter className="w-4 h-4 text-white" />
                        </div>
                        <input
                          type="url"
                          value={quizData.socialLinks.twitter}
                          onChange={(e) =>
                            updateSocialLink("twitter", e.target.value)
                          }
                          placeholder="@username"
                          className="flex-1 bg-white border-2 border-gray-200 text-gray-900 px-3 py-2 rounded-lg focus:border-electric-blue focus:outline-none transition-colors text-sm"
                        />
                      </div>

                      <div className="flex items-center gap-3 md:col-span-2">
                        <div className="w-8 h-8 bg-gray-600 rounded-lg flex items-center justify-center">
                          <Globe className="w-4 h-4 text-white" />
                        </div>
                        <input
                          type="url"
                          value={quizData.socialLinks.website}
                          onChange={(e) =>
                            updateSocialLink("website", e.target.value)
                          }
                          placeholder="yourwebsite.com"
                          className="flex-1 bg-white border-2 border-gray-200 text-gray-900 px-3 py-2 rounded-lg focus:border-electric-blue focus:outline-none transition-colors text-sm"
                        />
                      </div>
                    </div>

                    <div>
                      <label className="block text-gray-900 font-semibold mb-3 text-lg">
                        {t.questions.bio}
                      </label>
                      <textarea
                        value={quizData.bio}
                        onChange={(e) => updateQuizData("bio", e.target.value)}
                        rows={4}
                        placeholder="Tell us about your content style, your audience, what makes you unique..."
                        className="w-full bg-white border-2 border-gray-200 text-gray-900 px-4 py-4 rounded-xl focus:border-electric-blue focus:outline-none resize-none text-lg"
                      />
                    </div>
                  </div>
                )}

                {/* Step 12: Engagement Rate */}
                {currentStep === 12 && (
                  <div className="space-y-10">
                    <div className="text-center mb-12">
                      <div className="w-20 h-20 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center mx-auto mb-6">
                        <Star className="w-10 h-10 text-white" />
                      </div>
                      <h2 className="text-3xl font-bold text-gray-900 mb-4">
                        Engagement Analytics
                      </h2>
                      <p className="text-xl text-gray-600 max-w-3xl mx-auto mb-6">
                        Understanding your engagement helps us provide better
                        monetization recommendations
                      </p>
                      <div className="bg-blue-50 border border-blue-200 rounded-xl p-4 max-w-2xl mx-auto">
                        <p className="text-blue-800 font-medium">
                          ЁЯТб Engagement Rate = (likes + comments +
                          shares)/followers ├Ч 100
                        </p>
                      </div>
                    </div>

                    <div>
                      <label className="block text-gray-900 font-bold mb-8 text-2xl text-center">
                        What's your average engagement rate?
                      </label>
                      <div className="grid grid-cols-2 md:grid-cols-3 gap-4">
                        {t.options.engagementRates.map((rate) => (
                          <button
                            key={rate}
                            onClick={() =>
                              updateQuizData("engagementRate", rate)
                            }
                            className={`p-6 rounded-2xl border-2 text-lg font-semibold transition-all duration-300 hover:scale-105 ${
                              quizData.engagementRate === rate
                                ? "bg-gradient-to-r from-purple-50 to-pink-50 border-purple-400 text-gray-900 shadow-xl transform scale-105"
                                : "bg-white border-gray-200 text-gray-700 hover:border-purple-300 hover:shadow-lg"
                            }`}
                          >
                            {rate}
                          </button>
                        ))}
                      </div>
                    </div>
                  </div>
                )}

                {/* Step 13: Contact Information (moved to end) */}
                {currentStep === 13 && (
                  <div className="space-y-10">
                    <div className="text-center mb-12">
                      <div className="w-20 h-20 bg-gradient-to-r from-green-500 to-blue-500 rounded-full flex items-center justify-center mx-auto mb-6">
                        <User className="w-10 h-10 text-white" />
                      </div>
                      <h2 className="text-3xl font-bold text-gray-900 mb-4">
                        Almost Done! Contact Details
                      </h2>
                      <p className="text-xl text-gray-600 max-w-2xl mx-auto">
                        Finally, let us know how to reach you with your
                        personalized recommendations and resources.
                      </p>
                    </div>

                    <div className="space-y-6">
                      <div>
                        <label className="block text-gray-900 font-semibold mb-4 text-lg">
                          {t.questions.name}
                        </label>
                        <input
                          type="text"
                          value={quizData.name}
                          onChange={(e) =>
                            updateQuizData("name", e.target.value)
                          }
                          placeholder="Your full name"
                          className="w-full bg-white border-2 border-gray-300 text-gray-900 px-4 py-4 rounded-xl focus:border-electric-blue focus:outline-none transition-colors text-lg"
                        />
                      </div>

                      <div>
                        <label className="block text-gray-900 font-semibold mb-4 text-lg">
                          {t.questions.email}
                        </label>
                        <input
                          type="email"
                          value={quizData.email}
                          onChange={(e) =>
                            updateQuizData("email", e.target.value)
                          }
                          placeholder="your.email@example.com"
                          className="w-full bg-white border-2 border-gray-300 text-gray-900 px-4 py-4 rounded-xl focus:border-electric-blue focus:outline-none transition-colors text-lg"
                        />
                      </div>

                      <div>
                        <label className="block text-gray-900 font-semibold mb-4 text-lg">
                          {t.questions.phone}
                        </label>
                        <input
                          type="tel"
                          value={quizData.phone}
                          onChange={(e) =>
                            updateQuizData("phone", e.target.value)
                          }
                          placeholder="+91 98765 43210"
                          className="w-full bg-white border-2 border-gray-300 text-gray-900 px-4 py-4 rounded-xl focus:border-electric-blue focus:outline-none transition-colors text-lg"
                        />
                      </div>

                      <div>
                        <label className="block text-gray-900 font-semibold mb-4 text-lg">
                          {t.questions.city}
                        </label>
                        <input
                          type="text"
                          value={quizData.city}
                          onChange={(e) =>
                            updateQuizData("city", e.target.value)
                          }
                          placeholder="Mumbai, Delhi, Bangalore..."
                          className="w-full bg-white border-2 border-gray-300 text-gray-900 px-4 py-4 rounded-xl focus:border-electric-blue focus:outline-none transition-colors text-lg"
                        />
                      </div>
                    </div>
                  </div>
                )}

                {/* Navigation Buttons */}
                <div className="flex justify-between items-center mt-4 md:mt-6 pt-4 border-t border-gray-200">
                  {currentStep > 1 ? (
                    <button
                      onClick={handleBack}
                      className="flex items-center gap-2 bg-gray-100 text-gray-700 px-4 py-2 md:px-6 md:py-3 rounded-lg font-semibold hover:bg-gray-200 transition-all text-sm md:text-base"
                    >
                      <ArrowLeft className="w-4 h-4" />
                      <span className="hidden sm:inline">{t.buttons.back}</span>
                    </button>
                  ) : (
                    <div></div>
                  )}

                  {/* Progress indicator */}
                  <div className="text-center">
                    <div className="text-xs md:text-sm text-gray-500 mb-1">
                      Step {currentStep} of {totalSteps}
                    </div>
                    <div className="text-lg md:text-xl font-bold text-gray-900">
                      {Math.round((currentStep / totalSteps) * 100)}%
                    </div>
                  </div>

                  {currentStep < totalSteps ? (
                    <button
                      onClick={handleNext}
                      disabled={!canProceed()}
                      className="flex items-center gap-2 bg-gradient-to-r from-neon-green to-electric-blue text-black px-4 py-2 md:px-6 md:py-3 rounded-lg font-semibold hover:shadow-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed text-sm md:text-base"
                    >
                      <span className="hidden sm:inline">{t.buttons.next}</span>
                      <span className="sm:hidden">Next</span>
                      <ArrowRight className="w-4 h-4" />
                    </button>
                  ) : (
                    <button
                      onClick={handleNext}
                      className="flex items-center gap-2 bg-gradient-to-r from-purple-500 to-pink-500 text-white px-4 py-2 md:px-6 md:py-3 rounded-lg font-semibold hover:shadow-lg transition-all text-sm md:text-base"
                    >
                      Complete Quiz
                      <Sparkles className="w-6 h-6" />
                    </button>
                  )}
                </div>
              </>
            )}
          </div>
        </div>
      </main>
    </div>
  );
}
