import React, { useState, useRef } from "react";
import {
  ArrowRight,
  ArrowLeft,
  Instagram,
  Youtube,
  Linkedin,
  Globe,
  ChevronDown,
  Twitter,
  Star,
  Target,
  TrendingUp,
  CheckCircle,
  Sparkles,
  User,
  Mail,
  MapPin,
  Calendar,
  Download,
  Home,
  FileText,
  Layout,
} from "lucide-react";
import { Link, useNavigate } from "react-router-dom";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";

interface QuizData {
  name: string;
  email: string;
  age: string;
  city: string;
  primaryPlatform: string;
  secondaryPlatforms: string[];
  followerCount: string;
  niche: string;
  contentType: string;
  postingFrequency: string;
  experience: string[];
  monthlyIncome: string;
  biggestChallenge: string[];
  goals: string[];
  socialLinks: {
    instagram: string;
    youtube: string;
    linkedin: string;
    website: string;
    twitter: string;
    tiktok: string;
  };
  bio: string;
  language: string;
  engagementRate: string;
}

const initialQuizData: QuizData = {
  name: "",
  email: "",
  age: "",
  city: "",
  primaryPlatform: "",
  secondaryPlatforms: [],
  followerCount: "",
  niche: "",
  contentType: "",
  postingFrequency: "",
  experience: [],
  monthlyIncome: "",
  biggestChallenge: [],
  goals: [],
  socialLinks: {
    instagram: "",
    youtube: "",
    linkedin: "",
    website: "",
    twitter: "",
    tiktok: "",
  },
  bio: "",
  language: "english",
  engagementRate: "",
};

const languages = {
  english: {
    title: "Creator Success Quiz",
    subtitle: "Get your personalized growth strategy in 3 minutes",
    steps: {
      1: "Platform & Followers",
      2: "Content Niche",
      3: "Content Type",
      4: "Posting Frequency",
      5: "Experience & Income",
      6: "Biggest Challenge",
      7: "Goals",
      8: "Social Links",
      9: "Engagement Rate",
    },
    questions: {
      primaryPlatform: "What's your primary content platform?",
      followerCount: "How many followers do you have on your primary platform?",
      secondaryPlatforms:
        "Which other platforms do you use? (Select all that apply)",
      niche: "What's your content niche?",
      contentType: "What type of content do you create?",
      postingFrequency: "How often do you post content?",
      experience:
        "How long have you been creating content? (Select all levels you've experienced)",
      monthlyIncome: "What's your current monthly income from content?",
      biggestChallenge:
        "What are your biggest challenges as a creator? (Select max 3)",
      goals: "What are your main goals for the next 6 months? (Select max 3)",
      socialLinks: "Share Your Social Presence (Optional)",
      bio: "Anything more about yourself and your content (optional)",
      engagementRate: "What's your average engagement rate?",
    },
    options: {
      platforms: [
        "Instagram",
        "YouTube",
        "LinkedIn",
        "TikTok",
        "Twitter",
        "Facebook",
        "Website/Blog",
      ],
      followerRanges: [
        "Less than 1K",
        "1K - 5K",
        "5K - 10K",
        "10K - 50K",
        "50K - 100K",
        "100K - 500K",
        "500K+",
      ],
      niches: [
        "Fashion & Beauty",
        "Technology & AI",
        "Food & Cooking",
        "Travel & Adventure",
        "Fitness & Health",
        "Personal Finance & Investing",
        "Entertainment & Comedy",
        "Entrepreneurship & Business",
        "Lifestyle & Wellness",
        "Art & Design",
        "Gaming & Esports",
        "Music & Dance",
        "Education & Learning",
        "Sports & Athletics",
        "Motivation & Self-Help",
        "Parenting & Family",
        "DIY & Crafts",
        "Spirituality & Mindfulness",
        "Other",
      ],
      contentTypes: [
        "Photos & Carousels",
        "Short Videos/Reels",
        "Long-form Videos",
        "Live Streams",
        "Stories",
        "Written Posts",
        "Podcasts",
        "Mixed Content",
      ],
      frequencies: [
        "Daily",
        "3-4 times a week",
        "Weekly",
        "2-3 times a month",
        "Monthly",
        "Irregular",
      ],
      experiences: [
        "Just started (0-6 months)",
        "Beginner (6 months - 1 year)",
        "Growing (1-2 years)",
        "Experienced (2-3 years)",
        "Expert (3+ years)",
      ],
      incomes: [
        "‚Çπ0 (No income yet)",
        "‚Çπ1-5K",
        "‚Çπ5K-15K",
        "‚Çπ15K-30K",
        "‚Çπ30K-50K",
        "‚Çπ50K-1L",
        "‚Çπ1L+",
      ],
      challenges: [
        "Getting consistent views and engagement",
        "Finding my unique voice/style",
        "Algorithm changes affecting reach",
        "Balancing authenticity with brand appeal",
        "Competing with bigger creators",
        "Converting followers to paying customers",
        "Dealing with negative comments/trolls",
        "Burnout and content fatigue",
        "Understanding analytics and metrics",
        "Building genuine community",
        "Staying relevant with trends",
        "Managing multiple platforms efficiently",
      ],
      goals: [
        "Increase monthly income to ‚Çπ50K+",
        "Build authentic community of 100K+",
        "Land partnerships with dream brands",
        "Launch my own product/course",
        "Become go-to expert in my niche",
        "Achieve viral content consistently",
        "Build email list of 10K subscribers",
        "Speak at industry events/podcasts",
        "Create passive income streams",
        "Quit my 9-5 and go full-time",
        "Expand into new platforms/formats",
        "Mentor other creators in my space",
      ],
      engagementRates: [
        "Less than 1%",
        "1-3%",
        "3-5%",
        "5-8%",
        "8-12%",
        "More than 12%",
        "I don't know",
      ],
    },
    buttons: {
      next: "Next Step",
      back: "Previous",
      submit: "Get My Creator Analysis",
    },
    freeResources: {
      title: "üéâ Quiz Complete! Here are your FREE Creator Resources",
      subtitle:
        "Download these powerful tools to kickstart your creator journey",
      mediaKit: {
        title: "Professional Media Kit Template",
        description: "Create stunning media kits that brands will love",
      },
      emailTemplates: {
        title: "Brand Outreach Email Templates",
        description: "30+ proven email templates for brand partnerships",
      },
      growthGuide: {
        title: "90-Day Growth Strategy Guide",
        description: "Step-by-step roadmap to grow your following",
      },
      downloadFree: "Download Free",
    },
  },
  hindi: {
    title: "‡§ï‡•ç‡§∞‡§ø‡§è‡§ü‡§∞ ‡§∏‡§ï‡•ç‡§∏‡•á‡§∏ ‡§ï‡•ç‡§µ‡§ø‡§ú‡§º",
    subtitle: "3 ‡§Æ‡§ø‡§®‡§ü ‡§Æ‡•á‡§Ç ‡§Ö‡§™‡§®‡•Ä ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§ó‡•ç‡§∞‡•ã‡§• ‡§∞‡§£‡§®‡•Ä‡§§‡§ø ‡§™‡§æ‡§è‡§Ç",
    steps: {
      1: "‡§™‡•ç‡§≤‡•á‡§ü‡§´‡•â‡§∞‡•ç‡§Æ ‡§î‡§∞ ‡§´‡•â‡§≤‡•ã‡§Ö‡§∞‡•ç‡§∏",
      2: "‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü ‡§®‡§ø‡§ö",
      3: "‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞",
      4: "‡§™‡•ã‡§∏‡•ç‡§ü‡§ø‡§Ç‡§ó ‡§Ü‡§µ‡•É‡§§‡•ç‡§§‡§ø",
      5: "‡§Ö‡§®‡•Å‡§≠‡§µ ‡§î‡§∞ ‡§Ü‡§Ø",
      6: "‡§∏‡§¨‡§∏‡•á ‡§¨‡§°‡§º‡•Ä ‡§ö‡•Å‡§®‡•å‡§§‡•Ä",
      7: "‡§≤‡§ï‡•ç‡§∑‡•ç‡§Ø",
      8: "ÔøΩÔøΩ‡•ã‡§∂‡§≤ ‡§≤‡§ø‡§Ç‡§ï‡•ç‡§∏",
      9: "‡§è‡§Ç‡§ó‡•á‡§ú‡§Æ‡•á‡§Ç‡§ü ‡§∞‡•á‡§ü",
    },
    questions: {
      primaryPlatform: "‡§Ü‡§™ ‡§Æ‡•Å‡§ñ‡•ç‡§Ø‡§§‡§É ‡§ï‡§ø‡§∏ ‡§™‡•ç‡§≤‡•á‡§ü‡§´‡•â‡§∞‡•ç‡§Æ ‡§™‡§∞ ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü ‡§¨‡§®‡§æ‡§§‡•á ‡§π‡•à‡§Ç?",
      followerCount: "‡§Ü‡§™‡§ï‡•á ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï ‡§™‡•ç‡§≤‡•á‡§ü‡§´‡•â‡§∞‡•ç‡§Æ ‡§™‡§∞ ‡§ï‡§ø‡§§‡§®‡•á ‡§´‡•â‡§≤‡•ã‡§Ö‡§∞‡•ç‡§∏ ‡§π‡•à‡§Ç?",
      secondaryPlatforms:
        "‡§Ü‡§™ ‡§î‡§∞ ‡§ï‡•å‡§® ‡§∏‡•á ‡§™‡•ç‡§≤‡•á‡§ü‡§´‡•â‡§∞‡•ç‡§Æ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç? (‡§ï‡§à ‡§µ‡§ø‡§ï‡§≤‡•ç‡§™ ‡§ö‡•Å‡§®‡•á‡§Ç)",
      niche: "‡§Ü‡§™‡§ï‡§æ ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü ‡§ï‡§ø‡§∏ ‡§µ‡§ø‡§∑‡§Ø ‡§™‡§∞ ‡§π‡•à?",
      contentType: "‡§Ü‡§™ ‡§ï‡§ø‡§∏ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ï‡§æ ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü ‡§¨‡§®‡§æ‡§§‡•á ‡§π‡•à‡§Ç?",
      postingFrequency: "‡§Ü‡§™ ‡§ï‡§ø‡§§‡§®‡•Ä ‡§¨‡§æ‡§∞ ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü ‡§™‡•ã‡§∏‡•ç‡§ü ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç?",
      experience:
        "‡§Ü‡§™ ‡§ï‡§ø‡§§‡§®‡•á ‡§∏‡§Æ‡§Ø ‡§∏‡•á ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü ‡§¨‡§®‡§æ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç? (‡§∏‡§≠‡•Ä ‡§∏‡•ç‡§§‡§∞ ‡§ö‡•Å‡§®‡•á‡§Ç ‡§ú‡§ø‡§®‡§ï‡§æ ‡§Ü‡§™‡§®‡•á ‡§Ö‡§®‡•Å‡§≠‡§µ ‡§ï‡§ø‡§Ø‡§æ ÔøΩÔøΩ‡•à)",
      monthlyIncome: "‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü ‡§∏‡•á ‡§Ü‡§™‡§ï‡•Ä ‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§Æ‡§æ‡§∏‡§ø‡§ï ‡§Ü‡§Ø ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?",
      engagementRate: "‡§Ü‡§™‡§ïÔøΩÔøΩÔøΩ ‡§î‡§∏‡§§ ‡§è‡§Ç‡§ó‡•á‡§ú‡§Æ‡•á‡§Ç‡§ü ‡§∞‡•á‡§ü ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?",
      biggestChallenge:
        "What's Your Biggest Struggle as a Creator? Pick up to 3 ‚Äì we're all in this together! Understanding your pain points helps us provide better solutions",
      goals:
        "What are your main goals for the next 6 months? (Select max 3)",
      socialLinks: "‡§Ö‡§™‡§®‡•Ä ‡§∏‡•ã‡§∂‡§≤ ‡§â‡§™‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§∏‡§æ‡§ù‡§æ ‡§ï‡§∞‡•á‡§Ç (‡§µ‡•à‡§ï‡§≤‡•ç‡§™‡§ø‡§ï)",
      bio: "‡§Ö‡§™‡§®‡•á ‡§î‡§∞ ‡§Ö‡§™‡§®‡•á ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ï‡•Å‡§õ ‡§î‡§∞ ‡§¨‡§§‡§æ‡§è‡§Ç (‡§µ‡•à‡§ï‡§≤‡•ç‡§™‡§ø‡§ï)",
    },
    options: {
      platforms: [
        "‡§á‡§Ç‡§∏‡•ç‡§ü‡§æ‡§ó‡•ç‡§∞‡§æ‡§Æ",
        "‡§Ø‡•Ç‡§ü‡•ç‡§Ø‡•Ç‡§¨",
        "‡§≤‡§ø‡§Ç‡§ï‡•ç‡§°‡§á‡§®",
        "‡§ü‡§ø‡§ï‡§ü‡•â‡§ï",
        "‡§ü‡•ç‡§µ‡§ø‡§ü‡§∞",
        "‡§´‡•á‡§∏‡§¨‡•Å‡§ï",
        "‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü/‡§¨‡•ç‡§≤‡•â‡§ó",
      ],
      followerRanges: [
        "1K ‡§∏‡•á ‡§ï‡§Æ",
        "1K - 5K",
        "5K - 10K",
        "10K - 50K",
        "50K - 100K",
        "100K - 500K",
        "500K+",
      ],
      niches: [
        "‡§´‡•à‡§∂‡§® ‡§î‡§∞ ‡§¨‡•ç‡§Ø‡•Ç‡§ü‡•Ä",
        "‡§ü‡•á‡§ï‡•ç‡§®‡•ã‡§≤‡•â‡§ú‡•Ä ‡§î‡§∞ AI",
        "‡§ñ‡§æ‡§®‡§æ ‡§î‡§∞ ‡§ñ‡§æ‡§®‡§æ ‡§¨‡§®‡§æ‡§®‡§æ",
        "‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§î‡§∞ ‡§è‡§°‡§µ‡•á‡§Ç‡§ö‡§∞",
        "‡§´‡§ø‡§ü‡§®‡•á‡§∏ ‡§î‡§∞ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø",
        "‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§µ‡§ø‡§§‡•ç‡§§ ‡§î‡§∞ ‡§®‡§ø‡§µÔøΩÔøΩÔøΩ‡§∂",
        "‡§Æ‡§®‡•ã‡§∞‡§Ç‡§ú‡§® ‡§î‡§∞ ‡§ï‡•â‡§Æ‡•á‡§°‡•Ä",
        "‡§â‡§¶‡•ç‡§Ø‡§Æ‡§ø‡§§‡§æ ‡§î‡§∞ ‡§µ‡•ç‡§Ø‡§æ‡§™‡§æ‡§∞",
        "‡§ú‡•Ä‡§µ‡§®‡§∂‡•à‡§≤‡•Ä ‡§î‡§∞ ‡§ï‡§≤‡•ç‡§Ø‡§æ‡§£",
        "‡§ï‡§≤‡§æ ‡§î‡§∞ ‡§°‡§øÔøΩÔøΩ‡§º‡§æ‡§á‡§®",
        "‡§ó‡•á‡§Æ‡§ø‡§Ç‡§ó ‡§î‡§∞ ‡§è‡§∏‡•ç‡§™‡•ã‡§∞‡•ç‡§ü‡•ç‡§∏",
        "‡§∏‡§Ç‡§ó‡•Ä‡§§ ‡§î‡§∞ ‡§®‡•É‡§§‡•ç‡§Ø",
        "‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ ‡§î‡§∞ ‡§∏‡•Ä‡§ñ‡§®‡§æ",
        "‡§ñ‡•á‡§≤ ‡§î‡§∞ ‡§è‡§•‡§≤‡•á‡§ü‡§ø‡§ï‡•ç‡§∏",
        "‡§™‡•ç‡§∞‡•á‡§∞‡§£‡§æ ‡§î‡§∞ ‡§∏‡•ç‡§µ-‡§∏‡§π‡§æ‡§Ø‡§§‡§æ",
        "‡§™‡•á‡§∞‡•á‡§Ç‡§ü‡§ø‡§Ç‡§ó ÔøΩÔøΩ‡§∞ ‡§™‡§∞‡§ø‡§µ‡§æ‡§∞",
        "DIY ‡§î‡§∞ ‡§∂‡§ø‡§≤‡•ç‡§™",
        "‡§Ü‡§ß‡•ç‡§Ø‡§æ‡§§‡•ç‡§Æ ‡§î‡§∞ ‡§Æ‡§æ‡§á‡§Ç‡§°‡§´‡•Å‡§≤‡§®‡•á‡§∏",
        "‡§Ö‡§®‡•ç‡§Ø",
      ],
      engagementRates: [
        "1% ‡§∏‡•á ‡§ï‡§Æ",
        "1-3%",
        "3-5%",
        "5-8%",
        "8-12%",
        "12% ‡§∏‡•á ‡§Ö‡§ß‡§ø‡§ï",
        "‡§Æ‡•Å‡§ù‡•á ‡§®‡§π‡•Ä‡§Ç ‡§™‡§§‡§æ",
      ],
      contentTypes: [
        "‡§´‡•ã‡§ü‡•ã ‡§î‡§∞ ‡§ï‡•à‡§∞‡•ã‡§∏‡•á‡§≤",
        "‡§õ‡•ã‡§ü‡•á ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã/‡§∞‡•Ä‡§≤‡•ç‡§∏",
        "‡§≤‡§Ç‡§¨‡•á ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã",
        "‡§≤‡§æ‡§á‡§µ ‡§∏‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Æ",
        "‡§∏‡•ç‡§ü‡•ã‡§∞‡•Ä‡§ú‡§º",
        "‡§≤‡§ø‡§ñ‡§ø‡§§ ‡§™‡•ã‡§∏‡•ç‡§ü",
        "‡§™‡•â‡§°‡§ï‡§æ‡§∏‡•ç‡§ü",
        "‡§Æ‡§ø‡§∂‡•ç‡§∞‡§ø‡§§ ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü",
      ],
      frequencies: [
        "‡§∞‡•ã‡§ú‡§º‡§æ‡§®‡§æ",
        "‡§∏‡§™‡•ç‡§§‡§æ‡§π ‡§Æ‡•á‡§Ç 3-4 ‡§¨‡§æ‡§∞",
        "‡§∏‡§æ‡§™‡•ç‡§§‡§æ‡§π‡§ø‡§ï",
        "‡§Æ‡§π‡•Ä‡§®‡•á ‡§Æ‡•á‡§Ç 2-3 ‡§¨‡§æ‡§∞",
        "‡§Æ‡§æ‡§∏‡§ø‡§ï",
        "‡§Ö‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§",
      ],
      experiences: [
        "‡§Ö‡§≠‡•Ä ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§øÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ (0-6 ‡§Æ‡§π‡•Ä‡§®‡•á)",
        "‡§∂ÔøΩÔøΩÔøΩ‡§∞‡•Å‡§Ü‡§§‡•Ä (6 ‡§Æ‡§πÔøΩÔøΩÔøΩ‡§®‡•á - 1 ÔøΩÔøΩÔøΩ‡§æ‡§≤)",
        "‡§¨‡§¢‡§º ÔøΩÔøΩ‡§π‡•á ‡§π‡•à‡§Ç (1-2 ‡§∏‡§æ‡§≤)",
        "‡§ÖÔøΩÔøΩÔøΩ‡•Å‡§≠‡§µ‡•Ä (2-3 ‡§∏‡§æ‡§≤)",
        "‡§µ‡§ø‡§∂‡•á‡§∑‡§ú‡•ç‡§û (3+ ‡§∏ÔøΩÔøΩÔøΩ‡§≤)",
      ],
      incomes: [
        "‚Çπ0 (‡§Ö‡§≠‡•Ä ÔøΩÔøΩ‡§ï ‡§ï‡•ã‡§à ‡§Ü‡§Ø ‡§®‡§π‡•Ä‡§Ç)",
        "‚Çπ1-5K",
        "‚Çπ5K-15K",
        "‚Çπ15K-30K",
        "‚Çπ30K-50K",
        "‚Çπ50K-1L",
        "‚Çπ1L+",
      ],
      challenges: [
        "üîÑ Growth & Engagement: Low views & inconsistent engagement",
        "üß† Growth & Engagement: Staying relevant with fast-moving trends",
        "üîÅ Growth & Engagement: Algorithm changes killing reach",
        "üßç‚Äç‚ôÄÔ∏è Growth & Engagement: Competing with bigger creators",
        "üó£Ô∏è Brand & Identity: Struggling to find my unique voice/style",
        "ü§ù Brand & Identity: Balancing authenticity with brand appeal",
        "üå± Brand & Identity: Building a real, connected community",
        "üíî Monetization & Scaling: Can't convert followers into paying customers",
        "ü§ù Monetization & Scaling: Not landing brand collaborations",
        "üìä Monetization & Scaling: Confused by analytics & metrics",
        "ü•µ Creator Wellness: Burnout & content fatigue",
        "üí¨ Creator Wellness: Handling trolls/negativity",
        "üì± Creator Wellness: Managing too many platforms at once",
      ],
      goals: [
        "Reach 10K/50K/100K+ Followers",
        "Earn ‚Çπ25K/50K/1L+ per month",
        "Get Brand Collaborations",
        "Build Personal Brand",
        "Create Viral Content",
        "Post More Consistently",
        "Expand to New Platforms",
        "Create passive income streams",
        "Quit my 9-5 and go full-time",
        "Launch my own product/course",
        "Mentor other creators in my space",
      ],
    },
    buttons: {
      next: "‡§Ö‡§ó‡§≤‡§æ ‡§ïÔøΩÔøΩÔøΩ‡§Æ",
      back: "‡§™‡§ø‡§õ‡§≤‡§æ",
      submit: "‡§Æ‡•á‡§∞‡§æ ‡§ï‡•ç‡§∞‡§ø‡§è‡§ü‡§∞ ‡§µ‡§ø‡§∂‡•çÔøΩÔøΩ‡•á‡§∑‡§£ ‡§™‡§æ‡§è‡§Ç",
    },
    freeResources: {
      title: "üéâ ‡§ï‡•ç‡§µ‡§ø‡§ú‡§º ‡§™ÔøΩÔøΩ‡§∞‡§æ! ‡§Ø‡§π‡§æÔøΩÔøΩ ‡§π‡•à‡§Ç ‡§ÜÔøΩÔøΩ‡§ï‡•á ‡§Æ‡•ÅÔøΩÔøΩ‡•ç‡§§ ‡§ï‡•ç‡§∞‡§ø‡§è‡§ü‡§∞ ‡§∏‡§Ç‡§∏‡§æ‡§ß‡§®",
      subtitle:
        "‡§ÖÔøΩÔøΩÔøΩ‡§®‡•Ä ‡§ï‡•ç‡§∞‡§ø‡§è‡§ü‡§∞ ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§áÔøΩÔøΩ ‡§∂‡§ï‡•ç‡§§‡§ø‡§∂‡§æ‡§≤‡•Ä ‡§üÔøΩÔøΩÔøΩ‡§≤‡•ç‡§∏ ‡§ï‡•ã ‡§°‡§æ‡§â‡§®‡§≤ÔøΩÔøΩÔøΩ‡§° ÔøΩÔøΩÔøΩ‡§∞‡•áÔøΩÔøΩ",
      mediaKit: {
        title: "‡§™‡•ç‡§∞‡•ã‡§´‡•á‡§∂‡§®‡§≤ ‡§Æ‡•Ä‡§°‡§ø‡§Ø‡§æ ‡§ï‡§ø‡§ü ‡§ü‡•á‡§Æ‡•ç‡§™‡•ç‡§≤‡•á‡§ü",
        description: "‡§Ü‡§ï‡§∞ÔøΩÔøΩÔøΩÔøΩ‡§∑‡§ï ‡§Æ‡•Ä‡§°‡§ø‡§Ø‡§æ ‡§ï‡§ø‡§ü ‡§¨‡§®‡§æ‡§è‡§Ç ‡§ú‡•ã ‡§¨‡•ç‡§∞‡§æ‡§Ç‡§°‡•ç‡§∏ ‡§ï‡•ã ‡§™‡§∏‡§Ç‡§¶ ‡§Ü‡§è‡§Ç‡§ó‡•á",
      },
      emailTemplates: {
        title: "‡§¨‡•ç‡§∞‡§æÔøΩÔøΩÔøΩ‡§° ‡§Ü‡§â‡§ü‡§∞‡•Ä‡§ö ‡§à‡§Æ‡•á‡§≤ ‡§ü‡•á‡§Æ‡•ç‡§™‡•ç‡§≤‡•á‡§ü‡•ç‡§∏",
        description: "‡§¨‡•ç‡§∞‡§æ‡§Ç‡§° ‡§™‡§æ‡§∞‡•ç‡§ü‡§®‡§∞‡§∂‡§ø‡§™ ‡§ï‡•á ‡§≤‡§ø‡§è 30+ ‡§∏‡§ø‡§¶‡•ç‡§ß ‡§à‡§Æ‡•á‡§≤ ‡§ü‡•á‡§Æ‡•ç‡§™‡•ç‡§≤‡•á‡§ü‡•ç‡§∏",
      },
      growthGuide: {
        title: "90-‡§¶‡§ø‡§® ‡§ï‡•Ä ‡§ó‡•ç‡§∞‡•ã‡§• ‡§∏ÔøΩÔøΩÔøΩ‡§ü‡•ç‡§∞‡•à‡§ü‡•á‡§ú‡•Ä ‡§ó‡§æ‡§á‡§°",
        description: "‡§Ö‡§™‡§®‡•á ‡§´ÔøΩÔøΩ‡§≤‡•ã‡§á‡§Ç‡§ó ‡§¨‡§¢‡§º‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ÔøΩÔøΩÔøΩ‡•ç‡§ü‡•á‡§™-‡§¨‡§æ‡§à-‡§∏‡•ç‡§ü‡•á‡§™ ‡§∞ÔøΩÔøΩÔøΩ‡§°‡§Æ‡•à‡§™",
      },
      downloadFree: "‡§Æ‡•Å‡§´‡•ç‡§§ ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç",
    },
  },
};

export default function Quiz() {
  const [currentStep, setCurrentStep] = useState(1);
  const [quizData, setQuizData] = useState<QuizData>(initialQuizData);
  const [language, setLanguage] = useState<"english" | "hindi">("english");
  const [isGenerating, setIsGenerating] = useState(false);
  const [showFreeResources, setShowFreeResources] = useState(false);
  const navigate = useNavigate();
  const quizContentRef = useRef<HTMLDivElement>(null);

  const t = languages[language];
  const totalSteps = 9;

  const updateQuizData = (field: keyof QuizData, value: any) => {
    setQuizData((prev) => ({
      ...prev,
      [field]: value,
    }));
  };

  const updateSocialLink = (
    platform: keyof QuizData["socialLinks"],
    value: string,
  ) => {
    setQuizData((prev) => ({
      ...prev,
      socialLinks: {
        ...prev.socialLinks,
        [platform]: value,
      },
    }));
  };

  const canProceed = () => {
    switch (currentStep) {
      case 1:
        return quizData.primaryPlatform && quizData.followerCount;
      case 2:
        return quizData.niche;
      case 3:
        return quizData.contentType;
      case 4:
        return quizData.postingFrequency;
      case 5:
        return quizData.experience.length > 0 && quizData.monthlyIncome;
      case 6:
        return quizData.biggestChallenge.length > 0;
      case 7:
        return quizData.goals.length > 0;
      case 8:
        return true; // Optional step
      case 9:
        return quizData.engagementRate; // Engagement rate step
      default:
        return false;
    }
  };

  const handleNext = () => {
    if (currentStep < totalSteps && canProceed()) {
      setCurrentStep(currentStep + 1);
      // Auto-scroll to quiz content area (just below header)
      setTimeout(() => {
        if (quizContentRef.current) {
          quizContentRef.current.scrollIntoView({
            behavior: "smooth",
            block: "start",
          });
        }
      }, 100);
    } else if (currentStep === totalSteps) {
      setShowFreeResources(true);
    }
  };

  const handleBack = () => {
    if (currentStep > 1) {
      setCurrentStep(currentStep - 1);
      // Auto-scroll to quiz content area (just below header)
      setTimeout(() => {
        if (quizContentRef.current) {
          quizContentRef.current.scrollIntoView({
            behavior: "smooth",
            block: "start",
          });
        }
      }, 100);
    }
  };

  const handleSubmit = async () => {
    setIsGenerating(true);
    await new Promise((resolve) => setTimeout(resolve, 2000));
    localStorage.setItem("fameChaseQuizData", JSON.stringify(quizData));
    navigate("/results");
  };

  const toggleSecondaryPlatform = (platform: string) => {
    const platforms = quizData.secondaryPlatforms.includes(platform)
      ? quizData.secondaryPlatforms.filter((p) => p !== platform)
      : [...quizData.secondaryPlatforms, platform];
    updateQuizData("secondaryPlatforms", platforms);
  };

  const toggleMultipleChoice = (
    field: "experience" | "biggestChallenge" | "goals",
    value: string,
    maxSelection?: number,
  ) => {
    const currentValues = quizData[field];
    if (currentValues.includes(value)) {
      const newValues = currentValues.filter((v) => v !== value);
      updateQuizData(field, newValues);
    } else {
      if (!maxSelection || currentValues.length < maxSelection) {
        const newValues = [...currentValues, value];
        updateQuizData(field, newValues);
      }
    }
  };

  const generateDownload = (type: string, fileName: string) => {
    let content = "";
    const userName = quizData.name || "Creator";

    // Add font size indicator for 3X larger display
    const fontSizeIndicator = `
=== DISPLAY INSTRUCTIONS ===
Recommended Font Size: 24pt (3X larger than standard)
For best readability, increase font size in your PDF viewer or word processor.
Optimal zoom: 150-200% for comfortable reading.
==============================

`;

    if (type === "mediaKit") {
      content =
        fontSizeIndicator +
        `${language === "hindi" ? "‡§Æ‡•Ä‡§°‡§ø‡§Ø‡§æ ‡§ï‡§ø‡§ü" : "MEDIA KIT"} - ${userName}

${language === "hindi" ? "‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§øÔøΩÔøΩÔøΩ‡§§ ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä:" : "PERSONAL INFO:"}
${language === "hindi" ? "‡§®‡§æ‡§Æ:" : "Name:"} ${userName}
${language === "hindi" ? "‡§®‡§ø‡§ö:" : "Niche:"} ${quizData.niche}
${language === "hindi" ? "‡§™‡•ç‡§≤‡•áÔøΩÔøΩÔøΩ‡§´‡•â‡§∞‡•ç‡§Æ:" : "Platform:"} ${quizData.primaryPlatform}
${language === "hindi" ? "ÔøΩÔøΩÔøΩÔøΩ‡•â‡§≤‡•ã‡§Ö‡§∞‡•ç‡§∏:" : "Followers:"} ${quizData.followerCount}

${language === "hindi" ? "‡§∏‡§æ‡§Ç‡§ñ‡•ç‡§Ø‡§ø‡§ï‡•Ä ‡§î‡§∞ ‡§¶‡§∞ÔøΩÔøΩ‡§Ç:" : "STATISTICS & RATES:"}
${language === "hindi" ? "‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞:" : "Content Type:"} ${quizData.contentType}
${language === "hindi" ? "‡§™‡•ã‡§∏‡•ç‡§ü‡§ø‡§Ç‡§ó ‡§Ü‡§µ‡•É‡§§‡•ç‡§§‡§ø:" : "Posting Frequency:"} ${quizData.postingFrequency}
${language === "hindi" ? "‡§Æ‡§æ‡§∏‡§ø‡§ï ‡§ÜÔøΩÔøΩ:" : "Monthly Income:"} ${quizData.monthlyIncome}

${language === "hindi" ? "‡§∏‡•Å‡§ù‡§æ‡§µ‡§ø‡§§ ‡§¶‡§∞‡•á‡§Ç (‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§¨‡§æ‡§ú‡§æ‡§∞ ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞):" : "SUGGESTED RATES (Based on Indian Market):"}

${language === "hindi" ? "ÔøΩÔøΩÔøΩÔøΩ ‡§™‡•ç‡§≤‡•á‡§ü‡§´‡•â‡§∞‡•ç‡§Æ ‡§¶‡§∞‡•á‡§Ç:" : "ÔøΩÔøΩÔøΩ PLATFORM RATES:"}
${language === "hindi" ? "Instagram ‡§™‡•ã‡§∏‡•ç‡§ü:" : "Instagram Post:"} ‚Çπ${quizData.followerCount.includes("Less than 1K") ? "200-500" : quizData.followerCount.includes("1K - 5K") ? "500-1,000" : "1,000-3,000"}
${language === "hindi" ? "Instagram Reel:" : "Instagram Reel:"} ‚Çπ${quizData.followerCount.includes("Less than 1K") ? "500-1,000" : quizData.followerCount.includes("1K - 5K") ? "1,000-2,000" : "2,000-5,000"}
${language === "hindi" ? "Instagram Story:" : "Instagram Story:"} ‚Çπ${quizData.followerCount.includes("Less than 1K") ? "100-300" : quizData.followerCount.includes("1K - 5K") ? "300-500" : "500-1,500"}
${language === "hindi" ? "YouTube ‡§∂‡•â‡§∞‡•ç‡§ü:" : "YouTube Short:"} ‚Çπ${quizData.followerCount.includes("Less than 1K") ? "500-1,000" : quizData.followerCount.includes("1K - 5K") ? "1,000-2,000" : "2,000-5,000"}
${language === "hindi" ? "YouTube ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§Æ‡•á‡§Ç‡§∂‡§®:" : "YouTube Video Mention:"} ‚Çπ${quizData.followerCount.includes("Less than 1K") ? "1,000-2,000" : quizData.followerCount.includes("1K - 5K") ? "2,000-3,000" : "3,000-8,000"}
${language === "hindi" ? "Twitter ‡§™‡•ã‡§∏‡•ç‡§ü:" : "Twitter Post:"} ‚Çπ${quizData.followerCount.includes("Less than 1K") ? "100-200" : quizData.followerCount.includes("1K - 5K") ? "200-400" : "400-1,000"}
${language === "hindi" ? "Newsletter ‡§Æ‡•á‡§Ç‡§∂ÔøΩÔøΩ:" : "Newsletter Mention:"} ‚Çπ${quizData.followerCount.includes("Less than 1K") ? "200-500" : quizData.followerCount.includes("1K - 5K") ? "500-1,000" : "1,000-2,500"}

${language === "hindi" ? "üì¶ ‡§™‡•à‡§ï‡•á‡§ú ‡§¶‡§∞‡•á‡§Ç:" : "üì¶ PACKAGE RATES:"}
${language === "hindi" ? "‚Ä¢ ‡§¨‡•á‡§∏‡§ø‡§ï ‡§™‡•à‡§ïÔøΩÔøΩÔøΩ‡§ú (1 ‡§™‡•ã‡§∏‡•ç‡§ü + 2 ‡§∏‡•ç‡§ü‡•ãÔøΩÔøΩÔøΩ‡•Ä):" : "‚Ä¢ Basic Package (1 Post + 2 Stories):"} ‚Çπ${quizData.followerCount.includes("Less than 1K") ? "400-800" : quizData.followerCount.includes("1K - 5K") ? "800-1,500" : "1,500-4,000"}
${language === "hindi" ? "‚Ä¢ ‡§™‡•ç‡§∞‡•Ä‡§Æ‡§ø‡§Ø‡§Æ ‡§™‡•à‡§ï‡•á‡§ú (2 ‡§™‡•ã‡§∏‡•ç‡§ü + 1 ‡§∞‡•Ä‡§≤ + 3 ‡§∏ÔøΩÔøΩÔøΩ‡§ü‡•ã‡§∞‡•Ä):" : "‚Ä¢ Premium Package (2 Posts + 1 Reel + 3 Stories):"} ‚Çπ${quizData.followerCount.includes("Less than 1K") ? "1,200-2,500" : quizData.followerCount.includes("1K - 5K") ? "2,500-4,500" : "4,500-12,000"}

${language === "hindi" ? "‡§∏‡§Ç‡§™‡§∞‡•çÔøΩÔøΩ:" : "CONTACT:"}
${language === "hindi" ? "‡§à‡§Æ‡•á‡§≤:" : "Email:"} ${quizData.email || "[your@email.com]"}
${language === "hindi" ? "‡§∏‡•ã‡§∂‡§≤ ‡§≤‡§ø‡§Ç‡§ï‡•ç‡§∏:" : "Social Links:"}
- Instagram: ${quizData.socialLinks.instagram || "[Your Instagram]"}
- YouTube: ${quizData.socialLinks.youtube || "[Your YouTube]"}`;
    } else if (type === "emailTemplates") {
      content =
        fontSizeIndicator +
        `${language === "hindi" ? "6+ ‡§¨‡•ç‡§∞‡§æ‡§Ç‡§° ‡§ÜÔøΩÔøΩÔøΩ‡§ü‡§∞‡•Ä‡§ö ‡§à‡§Æ‡•á‡§≤ ‡§ü‡•á‡§Æ‡•ç‡§™‡•ç‡§≤‡•á‡§ü‡•ç‡§∏" : "6+ BRAND OUTREACH EMAIL TEMPLATES"} - ${userName}

${language === "hindi" ? "‡§ü‡•á‡§Æ‡•ç‡§™‡•ç‡§≤ÔøΩÔøΩÔøΩ‡§ü 1: ‡§™‡•ç‡§∞‡§æ‡§∞‡§Ç‡§≠‡§ø‡§ï ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï (‡§ï‡•ã‡§≤‡•ç‡§° ‡§Ü‡§â‡§ü‡§∞‡•Ä‡§ö)" : "TEMPLATE 1: INITIAL OUTREACH (COLD EMAIL)"}
${language === "hindi" ? "‡§µ‡§ø‡§∑‡§Ø:" : "Subject:"} ${language === "hindi" ? `‡§∏‡§π‡§Ø‡•ã‡§ó ‡§ï‡§æ ‡§™‡•ç‡§∞‡§∏‡•ç‡§§‡§æ‡§µ - ${userName} X [‡§¨‡•ç‡§∞‡§æ‡§Ç‡§° ‡§®‡§æ‡§Æ]` : `Collaboration Proposal - ${userName} X [Brand Name]`}

${language === "hindi" ? "‡§™‡•ç‡§∞‡§ø‡§Ø [‡§¨‡•ç‡§∞‡§æ‡§Ç‡§° ÔøΩÔøΩÔøΩ‡§æ‡§Æ] ‡§ü‡•Ä‡§Æ," : "Dear [Brand Name] Team,"}

${language === "hindi" ? `ÔøΩÔøΩ‡•à‡§Ç ${userName} ‡§π‡•Ç‡§Ç, ${quizData.niche} ‡§Æ‡•á‡§Ç ‡§è‡§ï ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü ‡§ï‡•ç‡§∞‡§ø‡§è‡§ü‡§∞ ‡§π‡•Ç‡§Ç ‡§ú‡§ø‡§∏‡§ï‡•á ${quizData.primaryPlatform} ‡§™‡§∞ ${quizData.followerCount} ‡§´‡•â‡§≤‡•ã‡§ÖÔøΩÔøΩÔøΩÔøΩ‡•ç‡§∏ ‡§π‡•à‡§Ç‡•§` : `I'm ${userName}, a content creator in ${quizData.niche} with ${quizData.followerCount} followers on ${quizData.primaryPlatform}.`}

${language === "hindi" ? "‡§Æ‡•Å‡§ù‡•á ‡§Ü‡§™‡§ï‡•á ÔøΩÔøΩÔøΩ‡•ç‡§∞‡§æ‡§Ç‡§° ‡§ï‡•á ‡§∏‡§æ‡§• ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§¶‡§ø‡§≤‡§ö‡§∏‡•ç‡§™‡•Ä ‡§π‡•à ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø:" : "I'd love to work with your brand because:"}
${language === "hindi" ? "- ‡§Ü‡§™‡§ï‡•á ‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§Æ‡•á‡§∞‡•á ‡§¶‡§∞‡•ç‡§∂‡§ï‡•ã‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§• ‡§™‡•Ç‡§∞‡•Ä ‡§§‡§∞‡§π ‡§Æ‡•á‡§≤ ‡§ñ‡§æ‡§§‡•á ‡§π‡•à‡§Ç" : "- Your products align perfectly with my audience"}
${language === "hindi" ? `- ‡§Æ‡•á‡§∞‡•á ‡§¶‡§∞‡•ç‡§∂‡§ï ${quizData.niche} ‡§Æ‡•á‡§Ç ‡§∞‡•Å‡§ö‡§ø ‡§∞‡§ñ‡§§‡•á ‡§π‡•à‡§Ç` : `- My audience is interested in ${quizData.niche}`}
${language === "hindi" ? "- ‡§Æ‡•à‡§Ç ‡§™‡•ç‡§∞‡§æ‡§Æ‡§æ‡§£‡§ø‡§ï ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü ‡§¨‡§®‡§æ‡§®‡•á ‡§Æ‡•á‡§Ç ‡§µ‡§ø‡§∂‡•á‡§∑‡§ú‡•ç‡§û ‡§π‡•Ç‡§Ç" : "- I specialize in creating authentic content"}

${language === "hindi" ? "‡§∏ÔøΩÔøΩ‡§Ç‡§ñ‡•ç‡§Ø‡§ø‡§ï‡•Ä:" : "Statistics:"}
${language === "hindi" ? "- ‡§´‡•âÔøΩÔøΩÔøΩ‡•ã‡§Ö‡§∞‡•ç‡§∏:" : "- Followers:"} ${quizData.followerCount}
${language === "hindi" ? "- ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞:" : "- Content Type:"} ${quizData.contentType}
${language === "hindi" ? "- ‡§™ÔøΩÔøΩ‡§∏‡•ç‡§ü‡§ø‡§Ç‡§ó ‡§Ü‡§µ‡•É‡§§‡•ç‡§§‡§ø:" : "- Posting Frequency:"} ${quizData.postingFrequency}

${language === "hindi" ? "‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§∏ÔøΩÔøΩÔøΩ‡§Ø‡•ã‡§ó ‡§ï‡•á ‡§Ö‡§µ‡§∏‡§∞‡•ã‡§Ç ‡§™‡§∞ ÔøΩÔøΩÔøΩ‡§∞ÔøΩÔøΩ‡§ö‡§æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡§Æ‡§Ø ‡§®‡§ø‡§ï‡§æ‡§≤ ÔøΩÔøΩÔøΩ‡§ï‡§§‡•á ‡§π‡•à‡§Ç?" : "Would you be available to discuss collaboration opportunities?"}

${language === "hindi" ? "‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶," : "Best regards,"}
${userName}

---

${language === "hindi" ? "‡§ü‡•á‡§Æ‡•ç‡§™‡•ç‡§≤‡•á‡§ü 2: ‡§´‡•â‡§≤‡•ã-ÔøΩÔøΩÔøΩ‡§™ ‡§à‡§Æ‡•á‡§≤" : "TEMPLATE 2: FOLLOW-UP EMAIL"}
${language === "hindi" ? "‡§µ‡§ø‡§∑‡§Ø:" : "Subject:"} ${language === "hindi" ? `‡§´‡•â‡§≤‡•ã-‡§Ö‡§™: ${userName} ‡§ï‡•ã‡§≤‡•à‡§¨‡•ã‡§∞‡•á‡§∂‡§® ‡§™‡•ç‡§∞‡§∏‡•ç‡§§‡§æ‡§µ` : `Follow-up: ${userName} Collaboration Proposal`}

${language === "hindi" ? "‡§π‡•à‡§≤‡•ã [‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§®‡§æ‡§Æ]," : "Hi [Contact Name],"}

${language === "hindi" ? "‡§Æ‡•à‡§Ç‡§®‡•á ‡§™‡§ø‡§õ‡§≤‡•á ‡§∏‡§™‡•ç‡§§‡§æ‡§π ‡§Ü‡§™‡§ïÔøΩÔøΩ collaboration ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•áÔøΩÔøΩÔøΩ email ‡§≠‡•á‡§ú‡§æ ‡§•‡§æ‡•§ ‡§Æ‡•ÅÔøΩÔøΩÔøΩ‡•á ‡§≤‡§ó‡§§‡§æ ‡§π‡•à ‡§ï‡§ø ‡§π‡§Æ ‡§è‡§ï amazing partnership create ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç!" : "I sent you an email last week about collaboration opportunities. I believe we could create an amazing partnership!"}

${language === "hindi" ? "Recently ‡§Æ‡•à‡§Ç‡§®‡•á [competitor brand] ‡§ï‡•á ‡§∏‡§æ‡§• work ‡§ï‡§ø‡§Ø‡§æ ‡§î‡§∞ ÔøΩÔøΩÔøΩ‡§∏ post ÔøΩÔøΩÔøΩ‡•ã [specific results] ‡§Æ‡§ø‡§≤‡•á‡•§" : "Recently I worked with [competitor brand] and that post received [specific results]."}

${language === "hindi" ? "‡§ï‡•ç‡§Ø‡§æ ‡§π‡§Æ ‡§á‡§∏ week ‡§è‡§ï quick 15-minute call schedule ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç?" : "Could we schedule a quick 15-minute call this week?"}

${language === "hindi" ? "Looking forward," : "Looking forward,"}
${userName}

---

${language === "hindi" ? "‡§ü‡•á‡§Æ‡•ç‡§™‡•ç‡§≤‡•á‡§ü 3: ‡§∞‡•á‡§ü ‡§ï‡§æ‡§∞‡•ç‡§° ‡§™‡•ç‡§∞‡•á‡§ú‡•á‡§Ç‡§ü‡•á‡§∂‡§®" : "TEMPLATE 3: RATE CARD PRESENTATION"}
${language === "hindi" ? "‡§µ‡§ø‡§∑‡§Ø:" : "Subject:"} ${language === "hindi" ? `${userName} - Collaboration rates & packages` : `${userName} - Collaboration rates & packages`}

${language === "hindi" ? "Dear [Brand Name]," : "Dear [Brand Name],"}

${language === "hindi" ? "‡§Ü‡§™‡§ï‡•Ä interest ÔøΩÔøΩ‡•á ‡§≤‡§ø‡§è ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶! ‡§Ø‡§π‡§æ‡§Ç ‡§Æ‡•áÔøΩÔøΩ‡•á collaboration packages ‡§π‡•à‡§Ç:" : "Thank you for your interest! Here are my collaboration packages:"}

${language === "hindi" ? "üì∏ ‡§∏‡§ø‡§Ç‡§ó‡§≤ ÔøΩÔøΩ‡•ã‡§∏‡•ç‡§ü: ‚Çπ[‡§Ü‡§™‡§ï‡•Ä rate]" : "üì∏ Single Post: ‚Çπ[Your rate]"}
${language === "hindi" ? "‚Ä¢ 1 feed post with your product" : "‚Ä¢ 1 feed post with your product"}
${language === "hindi" ? "‚Ä¢ 24-hour story promotion" : "‚Ä¢ 24-hour story promotion"}
${language === "hindi" ? "‚Ä¢ Professional photography" : "‚Ä¢ Professional photography"}

${language === "hindi" ? "üì± ‡§∏‡•ç‡§üÔøΩÔøΩÔøΩ‡§∞‡•Ä ‡§™‡•à‡§ïÔøΩÔøΩÔøΩ‡§ú: ‚Çπ[‡§Ü‡§™‡§ï‡•Ä rate]" : "üì± Story Package: ÔøΩÔøΩ[Your rate]"}
${language === "hindi" ? "‚Ä¢ 3-5 story slides" : "‚Ä¢ 3-5 story slides"}
${language === "hindi" ? "‚Ä¢ Behind-the-scenes content" : "‚Ä¢ Behind-the-scenes content"}

${language === "hindi" ? "üé• ‡§∞‡•Ä‡§≤‡•ç‡§∏ ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü: ‚Çπ[‡§Ü‡§™‡§ï‡•Ä rate]" : "ÔøΩÔøΩÔøΩÔøΩ Reels Content: ‚Çπ[Your rate]"}
${language === "hindi" ? "‚Ä¢ High-quality reel creation" : "‚Ä¢ High-quality reel creation"}
${language === "hindi" ? "‚Ä¢ Trending music/sounds" : "‚Ä¢ Trending music/sounds"}

${language === "hindi" ? "Best," : "Best,"}
${userName}

---

${language === "hindi" ? "‡§ü‡•á‡§Æ‡•çÔøΩÔøΩÔøΩ‡•ç‡§≤‡•á‡§ü 4: ‡§®ÔøΩÔøΩ‡§ó‡•ã‡§∏‡§ø‡§è‡§∂‡§®/‡§ï‡§æ‡§â‡§Ç‡§ü‡§∞ ‡§ë‡§´‡§∞" : "TEMPLATE 4: NEGOTIATION/COUNTER OFFER"}
${language === "hindi" ? "‡§µ‡§ø‡§∑‡§Ø:" : "Subject:"} ${language === "hindi" ? "Re: Collaboration proposal - Let's find a win-win" : "Re: Collaboration proposal - Let's find a win-win"}

${language === "hindi" ? "Hi [Contact Name]," : "Hi [Contact Name],"}

${language === "hindi" ? "‡§Ü‡§™‡§ï‡•á proposal ‡§ï‡•á ‡§≤‡§ø‡§è thank you! ‡§ÆÔøΩÔøΩ‡§Ç definitely interested ‡§πÔøΩÔøΩ‡§Ç‡•§" : "Thank you for your proposal! I'm definitely interested."}

${language === "hindi" ? "Considering my engagement rates ‡§î‡§∞ audience quality, ‡§ï‡•ç‡§Ø‡§æ ‡§π‡§Æ rate ‡§ï‡•ã slightly adjust ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç? ‡§Æ‡•à‡§Ç ‚Çπ[your counter] suggest ‡§ï‡§∞‡•Ç‡§ÇÔøΩÔøΩ‡§æ because:" : "Considering my engagement rates and audience quality, could we adjust the rate slightly? I'd suggest ‚Çπ[your counter] because:"}

${language === "hindi" ? "‚Ä¢ ‡§Æ‡•á‡§∞‡•Ä audience ‡§ïÔøΩÔøΩ [specific demographic] match ‡§ï‡§∞‡§§‡§æ ‡§π‡•à ‡§Ü‡§™‡§ï‡•á target ‡§∏‡•á" : "‚Ä¢ My audience demographic matches your target perfectly"}
${language === "hindi" ? "‚Ä¢ ‡§Æ‡•á‡§∞‡•á recent collaborations ‡§Æ‡•á‡§Ç [specific results] ‡§Æ‡§ø‡§≤‡•á ‡§π‡•à‡§Ç" : "‚Ä¢ My recent collaborations achieved [specific results]"}
${language === "hindi" ? "‚Ä¢ ‡§Æ‡•à‡§Ç additional value add ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç like [extra service]" : "‚Ä¢ I can add additional value like [extra service]"}

${language === "hindi" ? "ÔøΩÔøΩ‡•à‡§Ç flexible ‡§πÔøΩÔøΩ‡§Ç ‡§îÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ mutually beneficial deal ‡§¨‡§®‡§æ‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡§æ ‡§π‡•Ç‡§Ç‡•§" : "I'm flexible and want to create a mutually beneficial deal."}

${language === "hindi" ? "Best regards," : "Best regards,"}
${userName}

---

${language === "hindi" ? "‡§ü‡•á‡§Æ‡•ç‡§™‡•ç‡§≤‡•á‡§ü 5: ‡§™‡§∞‡§´‡•â‡§∞‡•ç‡§Æ‡•á‡§Ç‡§∏ ‡§∞‡§ø‡§™‡•ãÔøΩÔøΩÔøΩ‡•ç‡§ü" : "TEMPLATE 5: PERFORMANCE REPORT"}
${language === "hindi" ? "‡§µ‡§ø‡§∑‡§Ø:" : "Subject:"} ${language === "hindi" ? `${userName} x [Brand] - Campaign Performance Report` : `${userName} x [Brand] - Campaign Performance Report`}

${language === "hindi" ? "Dear [Brand Team]," : "Dear [Brand Team],"}

${language === "hindi" ? "‡§π‡§Æ‡§æ‡§∞‡•á recent collaboration ‡§ï‡•á results share ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡§æ ‡§π‡•Ç‡§Ç:" : "I wanted to share the results from our recent collaboration:"}

${language === "hindi" ? "üìä PERFORMANCE METRICS:" : "üìä PERFORMANCE METRICS:"}
${language === "hindi" ? "‚Ä¢ Post Reach: [number] impressions" : "‚Ä¢ Post Reach: [number] impressions"}
${language === "hindi" ? "‚Ä¢ Engagement Rate: [percentage]" : "‚Ä¢ Engagement Rate: [percentage]"}
${language === "hindi" ? "‚Ä¢ Story Views: [number]" : "‚Ä¢ Story Views: [number]"}
${language === "hindi" ? "ÔøΩÔøΩ Website Clicks: [number]" : "‚Ä¢ Website Clicks: [number]"}

${language === "hindi" ? "üéØ AUDIENCE FEEDBACK:" : "üéØ AUDIENCE FEEDBACK:"}
${language === "hindi" ? "‚Ä¢ [Positive feedback examples]" : "‚Ä¢ [Positive feedback examples]"}
${language === "hindi" ? "‚Ä¢ [Questions about product]" : "‚Ä¢ [Questions about product]"}

${language === "hindi" ? "‡§Æ‡•Å‡§ù‡•á future collaborations ‡§Æ‡•á‡§Ç interest ‡§π‡•à ‡§î‡§∞ ‡§Ü‡§™‡§ï‡•á products ‡§ï‡•ã authentically promote ‡§ï‡§∞‡§®‡§æ ‡§™‡§∏‡§Ç‡§¶ ‡§πÔøΩÔøΩÔøΩ‡•§" : "I'm interested in future collaborations and love authentically promoting your products."}

${language === "hindi" ? "Thank you for trusting me!" : "Thank you for trusting me!"}
${userName}

---

${language === "hindi" ? "‡§ü‡•á‡§Æ‡•ç‡§™‡•ç‡§≤‡•á‡§ü 6: ‡§≤‡•â‡§®‡•ç‡§ó-‡§ü‡§∞‡•ç‡§Æ ‡§™‡§æ‡§∞‡•ç‡§ü‡§®‡§∞‡§∂‡§ø‡§™ ‡§™‡•ç‡§∞‡§™‡•ã‡§ú‡§º‡§≤" : "TEMPLATE 6: LONG-TERM PARTNERSHIP PROPOSAL"}
${language === "hindi" ? "‡§µ‡§ø‡§∑‡§Ø:" : "Subject:"} ${language === "hindi" ? `Long-term Partnership Proposal - ${userName} x [Brand]` : `Long-term Partnership Proposal - ${userName} x [Brand]`}

${language === "hindi" ? "Dear [Decision Maker]," : "Dear [Decision Maker],"}

${language === "hindi" ? "‡§π‡§Æ‡§æÔøΩÔøΩ‡•á successful collaboration ‡§ï‡•á ‡§¨‡§æÔøΩÔøΩÔøΩÔøΩ, ÔøΩÔøΩÔøΩ‡•à‡§Ç ‡§è‡§ï long-term partnership propose ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡•Ç‡§Ç‡§ó‡§æ‡•§" : "Following our successful collaboration, I'd like to propose a long-term partnership."}

${language === "hindi" ? "ü§ù PROPOSED PARTNERSHIP:" : "ü§ù PROPOSED PARTNERSHIP:"}
${language === "hindi" ? "ÔøΩÔøΩÔøΩ Monthly content creation" : "‚Ä¢ Monthly content creation"}
${language === "hindi" ? "‚Ä¢ Product launches coverage" : "‚Ä¢ Product launches coverage"}
${language === "hindi" ? "‚Ä¢ Event participation" : "‚Ä¢ Event participation"}
${language === "hindi" ? "‚Ä¢ Brand ambassadorship" : "‚Ä¢ Brand ambassadorship"}

${language === "hindi" ? "üí∞ PROPOSED STRUCTURE:" : "üí∞ PROPOSED STRUCTURE:"}
${language === "hindi" ? "‚Ä¢ Retainer fee: ‚Çπ[amount]/month" : "‚Ä¢ Retainer fee: ‚Çπ[amount]/month"}
${language === "hindi" ? "‚Ä¢ Performance bonuses" : "‚Ä¢ Performance bonuses"}
${language === "hindi" ? "‚Ä¢ Exclusive collaboration terms" : "‚Ä¢ Exclusive collaboration terms"}

${language === "hindi" ? "üìà BENEFITS FOR YOUR BRAND:" : "üìà BENEFITS FOR YOUR BRAND:"}
${language === "hindi" ? "‚Ä¢ Consistent brand presence" : "‚Ä¢ Consistent brand presence"}
${language === "hindi" ? "‚Ä¢ Authentic audience connection" : "‚Ä¢ Authentic audience connection"}
${language === "hindi" ? "‚Ä¢ Better content planning" : "‚Ä¢ Better content planning"}
${language === "hindi" ? "‚Ä¢ Cost-effective marketing" : "‚Ä¢ Cost-effective marketing"}

${language === "hindi" ? "‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§á‡§∏ opportunity ‡§ï‡•ã explore ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç interested ‡§π‡•à‡§Ç?" : "Would you be interested in exploring this opportunity?"}

${language === "hindi" ? "Best," : "Best,"}
${userName}

---

${language === "hindi" ? "‡§¨‡•ã‡§®‡§∏ ‡§ü‡§ø‡§™‡•ç‡§∏:" : "BONUS TIPS:"}
${language === "hindi" ? "‚Ä¢ ‡§π‡§Æ‡•á‡§∂‡§æ personalize ‡§ï‡§∞‡•á‡§Ç emails" : "‚Ä¢ Always personalize your emails"}
${language === "hindi" ? "‚Ä¢ Subject lines ‡§ï‡•ã catchy ‡§∞‡§ñ‡•á‡§Ç" : "‚Ä¢ Keep subject lines catchy"}
${language === "hindi" ? "‚Ä¢ Follow-up ‡§ï‡§∞‡§®‡§æ ‡§® ‡§≠‡•Ç‡§≤‡•á‡§Ç" : "‚Ä¢ Don't forget to follow up"}
${language === "hindi" ? "‚Ä¢ Professional tone maintain ‡§ï‡§∞‡•á‡§Ç" : "‚Ä¢ Maintain a professional tone"}
${language === "hindi" ? "‚Ä¢ Results ‡§î‡§∞ metrics share ‡§ï‡§∞‡•á‡§Ç" : "‚Ä¢ Share results and metrics"}
${language === "hindi" ? "‚Ä¢ Grateful ‡§î‡§∞ humble ‡§∞‡§π‡•á‡§Ç" : "‚Ä¢ Be grateful and humble"}`;
    } else if (type === "growthStrategy") {
      content =
        fontSizeIndicator +
        `${language === "hindi" ? "90-ÔøΩÔøΩÔøΩ‡§ø‡§® ‡§ï‡•Ä ‡§ó‡•ç‡§∞‡•ã‡§• ‡§∞‡§£‡§®‡•Ä‡§§‡§ø" : "90-DAY GROWTH STRATEGY"} - ${userName}

${language === "hindi" ? "‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£:" : "PERSONAL ANALYSIS:"}
${language === "hindi" ? "‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§∏‡•ç‡§•‡§ø‡§§‡§ø:" : "Current Status:"} ${quizData.followerCount} on ${quizData.primaryPlatform}
${language === "hindi" ? "‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§ö‡•Å‡§®‡•å‡§§‡§øÔøΩÔøΩÔøΩ‡§æ‡§Ç:" : "Main Challenges:"} ${quizData.biggestChallenge.slice(0, 2).join(", ")}
${language === "hindi" ? "‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§≤‡§ï‡•ç‡§∑‡•ç‡§Ø:" : "Primary Goals:"} ${quizData.goals.slice(0, 2).join(", ")}

${language === "hindi" ? "‡§¶‡§ø‡§® 1-30: ‡§¨‡•Å‡§®‡§øÔøΩÔøΩÔøΩ‡§æ‡§¶ ‡§ÆÔøΩÔøΩ‡§¨‡•Ç‡§§ ‡§ï‡§∞‡§®‡§æ" : "DAYS 1-30: FOUNDATION BUILDING"}
${language === "hindi" ? "‡§∏‡§™‡•ç‡§§‡§æ‡§π 1:" : "Week 1:"}
${language === "hindi" ? `- ${quizData.postingFrequency === "Daily" ? "‡§Ö‡§™‡§®‡•Ä ‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§Ü‡§µ‡•É‡§§‡•ç‡§§‡§ø ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡•á‡§Ç" : "‡§™‡•ã‡§∏‡•ç‡§ü‡§ø‡§Ç‡§ó ‡§Ü‡§µ‡•É‡§§‡•ç‡§§‡§ø ‡§¨‡§¢‡§º‡§æ‡§ï‡§∞ ‡§¶‡•à‡§®‡§ø‡§ï ‡§ï‡§∞‡•á‡§Ç"}` : `- ${quizData.postingFrequency === "Daily" ? "Maintain your current posting frequency" : "Increase posting frequency to daily"}`}
${language === "hindi" ? `- ${quizData.niche} ‡§™‡§∞ 10 ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü ‡§ÜÔøΩÔøΩÔøΩ‡§°‡§ø‡§Ø‡§æ ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§ï‡§∞‡•á‡§Ç` : `- Prepare 10 content ideas for ${quizData.niche}`}
${language === "hindi" ? "- ‡§π‡•à‡§∂‡§ü‡•à‡§ó ‡§∞‡§ø‡§∏‡§∞‡•ç‡§ö ‡§ï‡§∞‡•á‡§Ç (30 ‡§π‡•à‡§∂‡§ü‡•à‡§ó ‡§Æ‡§ø‡§ï‡•ç‡§∏)" : "- Research hashtags (30 hashtag mix)"}

${language === "hindi" ? "‡§∏‡§™‡•ç‡§§ÔøΩÔøΩ‡§π 2-4:" : "Week 2-4:"}
${language === "hindi" ? "- ‡§á‡§Ç‡§ü‡§∞‡•à‡§ï‡•ç‡§ü‡§ø‡§µ ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü ‡§¨‡§¢‡§º‡§æ‡§è‡§Ç (‡§™‡•ã‡§≤‡•ç‡§∏, Q&A)" : "- Increase interactive content (polls, Q&A)"}
${language === "hindi" ? "- ‡§ï‡§Æ‡•ç‡§Ø‡•Å‡§®‡§ø‡§ü‡•Ä ‡§è‡§Ç‡§ó‡•á‡§ú‡§Æ‡•á‡§Ç‡§ü ‡§´‡•ã‡§ï‡§∏ ‡§ï‡§∞‡•á‡§Ç" : "- Focus on community engagement"}
${language === "hindi" ? "- ‡§è‡§®‡§æ‡§≤‡§ø‡§ü‡§ø‡§ï‡•ç‡§∏ ‡§ü‡•ç‡§∞‡•à‡§ï ‡§ï‡§∞‡§®‡§æ ‡§∂‡•ÅÔøΩÔøΩÔøΩ‡•Ç ‡§ï‡§∞‡•á‡§Ç" : "- Start tracking analytics"}

${language === "hindi" ? "‡§¶‡§ø‡§® 31-60: ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§î‡§∞ ‡§Ö‡§®‡•Å‡§ï‡•Ç‡§≤‡§®" : "DAYS 31-60: GROWTH & OPTIMIZATION"}
${language === "hindi" ? `- ${quizData.primaryPlatform === "Instagram" ? "‡§∞‡•Ä‡§≤‡•ç‡§∏ ‡§™‡§∞ ‡§´‡•ã‡§ï‡§∏ ‡§ï‡§∞‡•á‡§Ç (60% ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü)" : "‡§™‡•ç‡§≤‡•á‡§ü‡§´‡•â‡§∞‡•ç‡§Æ-‡§∏‡•ç‡§™‡•á‡§∏‡§ø‡§´‡§ø‡§ï ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü ‡§¨‡§¢‡§º‡§æ‡§è‡§Ç"}` : `- ${quizData.primaryPlatform === "Instagram" ? "Focus on Reels (60% content)" : "Increase platform-specific content"}`}
${language === "hindi" ? "- ‡§ü‡•ç‡§∞‡•á‡§Ç‡§°‡§ø‡§Ç‡§ó ‡§ü‡•â‡§™‡§ø‡§ï‡•ç‡§∏ ‡§™‡§∞ ‡§ï‡§Ç‡§ü‡•á‡§Ç‡§ü ‡§¨‡§®‡§æ‡§è‡§Ç" : "- Create content on trending topics"}
${language === "hindi" ? "- ‡§Ö‡§®‡•ç‡§Ø ‡§ï‡•ç‡§∞‡§ø‡§è‡§ü‡§∞‡•ç‡§∏ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§ï‡•ã‡§≤‡•à‡§¨‡•ã‡§∞‡•á‡§∂‡§® ‡§∂‡•Å‡§∞‡•Ç ÔøΩÔøΩÔøΩ‡§∞‡•á‡§Ç" : "- Start collaborations with other creators"}

${language === "hindi" ? "‡§¶ÔøΩÔøΩ‡§® 61-90: ‡§Æ‡•Å‡§¶‡•ç‡§∞‡•Ä‡§ï‡§∞‡§£ ‡§ï‡•Ä ‡§§‡•à‡§Ø‡§æ‡§∞‡•Ä" : "DAYS 61-90: MONETIZATION PREP"}
${language === "hindi" ? "- ‡§Æ‡•Ä‡§°‡§ø‡§Ø‡§æ ‡§ï‡§ø‡§ü ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§ï‡§∞‡•á‡§Ç" : "- Prepare media kit"}
${language === "hindi" ? "- ‡§¨‡•ç‡§∞‡§æ‡§ÇÔøΩÔøΩÔøΩ‡•ç‡§∏ ‡§∏‡•á ÔøΩÔøΩÔøΩ‡§Ç‡§™‡§∞‡•ç‡§ï ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç" : "- Start reaching out to brands"}
${language === "hindi" ? "- ‡§à‡§Æ‡•á‡§≤ ‡§≤‡§ø‡§∏‡•ç‡§ü ‡§¨‡§®‡§æ‡§®‡§æ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç" : "- Start building email list"}

${language === "hindi" ? "‡§Ö‡§™‡•á‡§ï‡•ç‡§∑‡§ø‡§§ ‡§™‡§∞‡§ø‡§£‡§æ‡§Æ (90 ‡§¶‡§ø‡§®):" : "EXPECTED RESULTS (90 days):"}
${language === "hindi" ? "- ‡§´‡•â‡§≤‡•ã‡§Ö‡§∞ ‡§ó‡•ç‡§∞‡•ã‡§•: 40-80%" : "- Follower Growth: 40-80%"}
${language === "hindi" ? "- ‡§è‡§Ç‡§ó‡•á‡§ú‡§Æ‡•á‡§Ç‡§ü ‡§Æ‡•á‡§Ç ‡§∏‡•Å‡§ß‡§æ‡§∞: 50-100%" : "- Engagement Improvement: 50-100%"}
${language === "hindi" ? "- ÔøΩÔøΩÔøΩ‡•ç‡§∞ÔøΩÔøΩ‡§Ç‡§° ‡§™‡•Ç‡§õ‡§§‡§æ‡§õ: 3-8" : "- Brand Inquiries: 3-8"}`;
    }

    const blob = new Blob([content], { type: "text/plain" });
    const url = URL.createObjectURL(blob);
    const a = document.createElement("a");
    a.href = url;
    a.download = fileName;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  if (showFreeResources) {
    return (
      <div className="min-h-screen bg-white">
        {/* Header */}
        <header className="relative z-10 px-4 py-6 bg-white border-b border-gray-100 sticky top-0 backdrop-blur-sm">
          <div className="container mx-auto flex justify-between items-center">
            <Link to="/" className="text-lg font-bold text-gray-900">
              FameChase<span className="text-neon-green">.com</span>
            </Link>

            <div className="flex items-center gap-4">
              <Link
                to="/"
                className="flex items-center gap-2 text-gray-600 hover:text-gray-900 transition-colors"
              >
                <Home className="w-4 h-4" />
                Back to Home
              </Link>
              <select
                value={language}
                onChange={(e) =>
                  setLanguage(e.target.value as "english" | "hindi")
                }
                className="bg-white border border-gray-300 text-gray-900 px-3 py-2 rounded-lg text-sm font-medium"
              >
                <option value="english">English</option>
                <option value="hindi">ÔøΩÔøΩÔøΩ‡§ø‡§Ç‡§¶‡•Ä</option>
              </select>
            </div>
          </div>
        </header>

        <main className="container mx-auto px-4 py-12">
          <div className="max-w-4xl mx-auto text-center">
            <div className="w-20 h-20 bg-gradient-to-r from-neon-green to-electric-blue rounded-full flex items-center justify-center mx-auto mb-6">
              <CheckCircle className="w-10 h-10 text-white" />
            </div>

            <h1 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
              {t.freeResources.title}
            </h1>
            <p className="text-xl text-gray-600 mb-12 max-w-2xl mx-auto">
              {t.freeResources.subtitle}
            </p>

            <div className="grid md:grid-cols-3 gap-8 mb-12">
              {/* Media Kit Template */}
              <div className="bg-white border-2 border-gray-200 rounded-2xl p-8 hover:border-neon-green transition-colors">
                <div className="w-16 h-16 bg-blue-100 rounded-xl flex items-center justify-center mx-auto mb-4">
                  <FileText className="w-8 h-8 text-blue-600" />
                </div>
                <h3 className="text-xl font-bold text-gray-900 mb-3">
                  {t.freeResources.mediaKit.title}
                </h3>
                <p className="text-gray-600 mb-6">
                  {t.freeResources.mediaKit.description}
                </p>
                <button
                  onClick={() =>
                    generateDownload(
                      "mediaKit",
                      `${quizData.name || "Creator"}_Media_Kit_${language}.txt`,
                    )
                  }
                  className="w-full bg-gradient-to-r from-neon-green to-electric-blue text-black font-bold py-3 px-6 rounded-xl hover:shadow-lg transition-all"
                >
                  <Download className="w-4 h-4 inline mr-2" />
                  {t.freeResources.downloadFree}
                </button>
              </div>

              {/* Email Templates */}
              <div className="bg-white border-2 border-gray-200 rounded-2xl p-8 hover:border-neon-green transition-colors">
                <div className="w-16 h-16 bg-green-100 rounded-xl flex items-center justify-center mx-auto mb-4">
                  <Mail className="w-8 h-8 text-green-600" />
                </div>
                <h3 className="text-xl font-bold text-gray-900 mb-3">
                  {t.freeResources.emailTemplates.title}
                </h3>
                <p className="text-gray-600 mb-6">
                  {t.freeResources.emailTemplates.description}
                </p>
                <button
                  onClick={() =>
                    generateDownload(
                      "emailTemplates",
                      `Brand_Outreach_Templates_${language}.txt`,
                    )
                  }
                  className="w-full bg-gradient-to-r from-neon-green to-electric-blue text-black font-bold py-3 px-6 rounded-xl hover:shadow-lg transition-all"
                >
                  <Download className="w-4 h-4 inline mr-2" />
                  {t.freeResources.downloadFree}
                </button>
              </div>

              {/* Growth Strategy */}
              <div className="bg-white border-2 border-gray-200 rounded-2xl p-8 hover:border-neon-green transition-colors">
                <div className="w-16 h-16 bg-purple-100 rounded-xl flex items-center justify-center mx-auto mb-4">
                  <Target className="w-8 h-8 text-purple-600" />
                </div>
                <h3 className="text-xl font-bold text-gray-900 mb-3">
                  {t.freeResources.growthGuide.title}
                </h3>
                <p className="text-gray-600 mb-6">
                  {t.freeResources.growthGuide.description}
                </p>
                <button
                  onClick={() =>
                    generateDownload(
                      "growthStrategy",
                      `90_Day_Growth_Strategy_${language}.txt`,
                    )
                  }
                  className="w-full bg-gradient-to-r from-neon-green to-electric-blue text-black font-bold py-3 px-6 rounded-xl hover:shadow-lg transition-all"
                >
                  <Download className="w-4 h-4 inline mr-2" />
                  {t.freeResources.downloadFree}
                </button>
              </div>
            </div>

            <div className="bg-gradient-to-r from-yellow-50 to-orange-50 border-2 border-yellow-200 rounded-2xl p-8">
              <h2 className="text-lg font-bold text-gray-900 mb-4">
                {language === "hindi"
                  ? "‡§Ö‡§™‡§®‡§æ ‡§™‡•Ç‡§∞‡§æ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?"
                  : "Want Your Complete Analysis?"}
              </h2>
              <p className="text-gray-600 mb-6">
                {language === "hindi"
                  ? "‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ SWOT ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£, ‡§µ‡§ø‡§ï‡§æÔøΩÔøΩÔøΩ ‡§∞‡§£‡§®‡•Ä‡§§‡§ø, ‡§î‡§∞ ‡§™‡•ç‡§∞ÔøΩÔøΩ‡§Æ‡§ø‡§Ø‡§Æ ‡§ü‡•Ç‡§≤‡•ç‡§∏ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§Ö‡§™‡§®‡•Ä ‡§ï‡•ç‡§∞‡§ø‡§è‡§ü‡§∞ ‡§Ø‡§æ‡§§‡•çÔøΩÔøΩÔøΩ‡§æ ‡§ï‡•ã ‡§§‡•á‡§ú‡§º‡•Ä ‡§∏‡•á ‡§Ü‡§ó‡•á ‡§¨‡§¢‡§º‡§æ‡§è‡§Ç‡•§"
                  : "Get personalized SWOT analysis, growth strategy, and premium tools to accelerate your creator journey."}
              </p>
              <button
                onClick={handleSubmit}
                className="bg-gradient-to-r from-neon-green to-electric-blue text-black font-bold py-4 px-8 rounded-xl text-lg hover:shadow-lg hover:scale-105 transition-all duration-300"
              >
                <Sparkles className="w-5 h-5 inline mr-2" />
                {t.buttons.submit}
              </button>
            </div>
          </div>
        </main>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-white">
      {/* Header */}
      <header className="relative z-10 px-4 py-6 bg-white border-b border-gray-100 sticky top-0 backdrop-blur-sm">
        <div className="container mx-auto flex justify-between items-center">
          <Link to="/" className="text-lg font-bold text-gray-900">
            FameChase<span className="text-neon-green">.com</span>
          </Link>

          <div className="flex items-center gap-4">
            <Link
              to="/"
              className="flex items-center gap-2 text-gray-600 hover:text-gray-900 transition-colors"
            >
              <Home className="w-4 h-4" />
              Back to Home
            </Link>
            <select
              value={language}
              onChange={(e) =>
                setLanguage(e.target.value as "english" | "hindi")
              }
              className="bg-white border border-gray-300 text-gray-900 px-3 py-2 rounded-lg text-sm font-medium"
            >
              <option value="english">English</option>
              <option value="hindi">‡§π‡§ø‡§Ç‡§¶‡•Ä</option>
            </select>

            <div className="text-gray-600 text-sm font-medium">
              Step {currentStep} of {totalSteps}
            </div>
          </div>
        </div>
      </header>

      {/* Progress Bar */}
      <div className="bg-gray-50 py-6">
        <div className="container mx-auto px-4">
          <div className="flex justify-center mb-4">
            <div className="flex space-x-2">
              {Array.from({ length: totalSteps }, (_, i) => i + 1).map(
                (step) => (
                  <div
                    key={step}
                    className={`w-8 h-3 rounded-full transition-all duration-500 ${
                      step <= currentStep
                        ? "bg-gradient-to-r from-neon-green to-electric-blue"
                        : "bg-gray-300"
                    }`}
                  />
                ),
              )}
            </div>
          </div>
          <div className="text-center text-gray-700 font-medium">
            {t.steps[currentStep as keyof typeof t.steps]}
          </div>
        </div>
      </div>

      {/* Quiz Content */}
      <main ref={quizContentRef} className="container mx-auto px-4 py-4">
        <div className="max-w-2xl mx-auto">
          <div className="text-center mb-12">
            <h1 className="text-4xl md:text-6xl font-bold text-gray-900 mb-6">
              {t.title}
            </h1>
            <p className="text-2xl md:text-3xl text-gray-600 leading-relaxed">
              {t.subtitle}
            </p>

            {/* Animated Icons */}
            <div className="flex justify-center gap-4 mt-6">
              <Sparkles className="w-6 h-6 text-neon-green animate-pulse" />
              <Star className="w-6 h-6 text-electric-blue animate-pulse" />
              <Target className="w-6 h-6 text-soft-violet animate-pulse" />
            </div>
          </div>

          <div className="bg-white border-2 border-gray-100 rounded-3xl p-6 md:p-12 shadow-xl">
            {/* Loading State */}
            {isGenerating && (
              <div className="text-center py-12">
                <div className="w-20 h-20 bg-gradient-to-r from-neon-green to-electric-blue rounded-full flex items-center justify-center mx-auto mb-6 animate-spin">
                  <Sparkles className="w-10 h-10 text-white" />
                </div>
                <h2 className="text-lg font-bold text-gray-900 mb-4">
                  Generating Your Creator Analysis...
                </h2>
                <p className="text-gray-600">
                  Our AI is analyzing your responses and creating your
                  personalized toolkit
                </p>
              </div>
            )}

            {!isGenerating && (
              <>
                {/* Step 1: Primary Platform & Followers */}
                {currentStep === 1 && (
                  <div className="space-y-8">
                    <div className="text-center mb-8">
                      <h2 className="text-2xl font-bold text-gray-900 mb-4">
                        Your Main Platform üì±
                      </h2>
                      <p className="text-xl text-gray-600">
                        Where do you create and share your content?
                      </p>
                    </div>

                    <div>
                      <label className="block text-gray-900 font-semibold mb-4 text-xl">
                        {t.questions.primaryPlatform}
                      </label>
                      <div className="grid grid-cols-2 gap-3">
                        {t.options.platforms.map((platform) => (
                          <button
                            key={platform}
                            onClick={() =>
                              updateQuizData("primaryPlatform", platform)
                            }
                            className={`p-4 rounded-lg border-2 text-lg font-medium transition-all duration-300 ${
                              quizData.primaryPlatform === platform
                                ? "bg-gradient-to-r from-electric-blue/10 to-neon-green/10 border-electric-blue text-gray-900 shadow-lg"
                                : "bg-white border-gray-200 text-gray-700 hover:border-gray-300 hover:shadow-md"
                            }`}
                          >
                            {platform}
                          </button>
                        ))}
                      </div>
                    </div>

                    <div>
                      <label className="block text-gray-900 font-semibold mb-4 text-lg">
                        {t.questions.followerCount}
                      </label>
                      <div className="grid grid-cols-2 gap-2">
                        {t.options.followerRanges.map((range) => (
                          <button
                            key={range}
                            onClick={() =>
                              updateQuizData("followerCount", range)
                            }
                            className={`p-3 rounded-lg border-2 text-sm font-medium transition-all duration-300 ${
                              quizData.followerCount === range
                                ? "bg-gradient-to-r from-electric-blue/10 to-soft-violet/10 border-electric-blue text-gray-900 shadow-lg"
                                : "bg-white border-gray-200 text-gray-700 hover:border-gray-300 hover:shadow-md"
                            }`}
                          >
                            {range}
                          </button>
                        ))}
                      </div>
                    </div>

                    <div>
                      <label className="block text-gray-900 font-semibold mb-4 text-lg">
                        {t.questions.secondaryPlatforms}
                      </label>
                      <div className="grid grid-cols-2 gap-2">
                        {t.options.platforms.map((platform) => (
                          <button
                            key={platform}
                            onClick={() => toggleSecondaryPlatform(platform)}
                            className={`p-3 rounded-lg border-2 text-sm font-medium transition-all duration-300 ${
                              quizData.secondaryPlatforms.includes(platform)
                                ? "bg-gradient-to-r from-neon-green/10 to-electric-blue/10 border-neon-green text-gray-900 shadow-lg"
                                : "bg-white border-gray-200 text-gray-700 hover:border-gray-300 hover:shadow-md"
                            }`}
                          >
                            {platform}
                          </button>
                        ))}
                      </div>
                    </div>
                  </div>
                )}

                {/* Step 2: Content Niche */}
                {currentStep === 2 && (
                  <div className="space-y-8">
                    <div className="text-center mb-8">
                      <h2 className="text-lg font-bold text-gray-900 mb-4">
                        Your Content Niche üéØ
                      </h2>
                      <p className="text-gray-600">
                        What topics do you create content about?
                      </p>
                    </div>

                    <div>
                      <label className="block text-gray-900 font-semibold mb-4 text-lg">
                        {t.questions.niche}
                      </label>
                      <div className="grid grid-cols-2 gap-2">
                        {t.options.niches.map((niche) => (
                          <button
                            key={niche}
                            onClick={() => updateQuizData("niche", niche)}
                            className={`p-3 rounded-lg border-2 text-sm font-medium transition-all duration-300 ${
                              quizData.niche === niche
                                ? "bg-gradient-to-r from-soft-violet/10 to-neon-green/10 border-soft-violet text-gray-900 shadow-lg"
                                : "bg-white border-gray-200 text-gray-700 hover:border-gray-300 hover:shadow-md"
                            }`}
                          >
                            {niche}
                          </button>
                        ))}
                      </div>
                    </div>
                  </div>
                )}

                {/* Step 3: Content Type */}
                {currentStep === 3 && (
                  <div className="space-y-8">
                    <div className="text-center mb-8">
                      <h2 className="text-lg font-bold text-gray-900 mb-4">
                        Content Format üé¨
                      </h2>
                      <p className="text-gray-600">
                        What type of content do you primarily create?
                      </p>
                    </div>

                    <div>
                      <label className="block text-gray-900 font-semibold mb-4 text-lg">
                        {t.questions.contentType}
                      </label>
                      <div className="grid grid-cols-2 gap-2">
                        {t.options.contentTypes.map((type) => (
                          <button
                            key={type}
                            onClick={() => updateQuizData("contentType", type)}
                            className={`p-3 rounded-lg border-2 text-sm font-medium transition-all duration-300 ${
                              quizData.contentType === type
                                ? "bg-gradient-to-r from-electric-blue/10 to-neon-green/10 border-electric-blue text-gray-900 shadow-lg"
                                : "bg-white border-gray-200 text-gray-700 hover:border-gray-300 hover:shadow-md"
                            }`}
                          >
                            {type}
                          </button>
                        ))}
                      </div>
                    </div>
                  </div>
                )}

                {/* Step 4: Posting Frequency */}
                {currentStep === 4 && (
                  <div className="space-y-8">
                    <div className="text-center mb-8">
                      <h2 className="text-lg font-bold text-gray-900 mb-4">
                        Posting Schedule ‚è∞
                      </h2>
                      <p className="text-gray-600">
                        How often do you share new content?
                      </p>
                    </div>

                    <div>
                      <label className="block text-gray-900 font-semibold mb-4 text-lg">
                        {t.questions.postingFrequency}
                      </label>
                      <div className="grid grid-cols-2 gap-2">
                        {t.options.frequencies.map((freq) => (
                          <button
                            key={freq}
                            onClick={() =>
                              updateQuizData("postingFrequency", freq)
                            }
                            className={`p-3 rounded-lg border-2 text-sm font-medium transition-all duration-300 ${
                              quizData.postingFrequency === freq
                                ? "bg-gradient-to-r from-neon-green/10 to-electric-blue/10 border-neon-green text-gray-900 shadow-lg"
                                : "bg-white border-gray-200 text-gray-700 hover:border-gray-300 hover:shadow-md"
                            }`}
                          >
                            {freq}
                          </button>
                        ))}
                      </div>
                    </div>
                  </div>
                )}

                {/* Step 5: Experience & Income */}
                {currentStep === 5 && (
                  <div className="space-y-8">
                    <div className="text-center mb-8">
                      <h2 className="text-lg font-bold text-gray-900 mb-4">
                        Your Creator Journey üöÄ
                      </h2>
                      <p className="text-gray-600">
                        Tell us about your experience and current income
                      </p>
                    </div>

                    <div>
                      <label className="block text-gray-900 font-semibold mb-4 text-lg">
                        {t.questions.experience}
                      </label>
                      <div className="grid grid-cols-1 gap-3">
                        {t.options.experiences.map((exp) => (
                          <button
                            key={exp}
                            onClick={() =>
                              toggleMultipleChoice("experience", exp)
                            }
                            className={`p-4 rounded-xl border-2 text-base font-semibold transition-all duration-300 text-left ${
                              quizData.experience.includes(exp)
                                ? "bg-gradient-to-r from-soft-violet/10 to-electric-blue/10 border-soft-violet text-gray-900 shadow-lg"
                                : "bg-white border-gray-200 text-gray-700 hover:border-gray-300 hover:shadow-md"
                            }`}
                          >
                            <div className="flex items-center gap-3">
                              {quizData.experience.includes(exp) && (
                                <CheckCircle className="w-5 h-5 text-soft-violet" />
                              )}
                              <span>{exp}</span>
                            </div>
                          </button>
                        ))}
                      </div>
                    </div>

                    <div>
                      <label className="block text-gray-900 font-semibold mb-4 text-lg">
                        {t.questions.monthlyIncome}
                      </label>
                      <div className="grid grid-cols-2 gap-2">
                        {t.options.incomes.map((income) => (
                          <button
                            key={income}
                            onClick={() =>
                              updateQuizData("monthlyIncome", income)
                            }
                            className={`p-3 rounded-lg border-2 text-sm font-medium transition-all duration-300 ${
                              quizData.monthlyIncome === income
                                ? "bg-gradient-to-r from-neon-green/10 to-electric-blue/10 border-neon-green text-gray-900 shadow-lg"
                                : "bg-white border-gray-200 text-gray-700 hover:border-gray-300 hover:shadow-md"
                            }`}
                          >
                            {income}
                          </button>
                        ))}
                      </div>
                    </div>
                  </div>
                )}

                {/* Step 6: Biggest Challenge */}
                {currentStep === 6 && (
                  <div className="space-y-8">
                    <div className="text-center mb-8">
                      <h2 className="text-lg font-bold text-gray-900 mb-4">
                        Your Challenges üéØ
                      </h2>
                      <p className="text-gray-600">
                        What obstacles are holding you back? (Select max 3)
                      </p>
                    </div>

                    <div>
                      <label className="block text-gray-900 font-semibold mb-4 text-xl">
                        {t.questions.biggestChallenge}
                      </label>
                      <div className="grid grid-cols-2 gap-3">
                        {t.options.challenges.map((challenge) => (
                          <button
                            key={challenge}
                            onClick={() =>
                              toggleMultipleChoice(
                                "biggestChallenge",
                                challenge,
                                3,
                              )
                            }
                            disabled={
                              !quizData.biggestChallenge.includes(challenge) &&
                              quizData.biggestChallenge.length >= 3
                            }
                            className={`p-4 rounded-xl border-2 text-base font-semibold transition-all duration-300 text-left ${
                              !quizData.biggestChallenge.includes(challenge) &&
                              quizData.biggestChallenge.length >= 3
                                ? "opacity-50 cursor-not-allowed"
                                : ""
                            } ${
                              quizData.biggestChallenge.includes(challenge)
                                ? "bg-gradient-to-r from-red-50 to-orange-50 border-red-400 text-gray-900 shadow-lg"
                                : "bg-white border-gray-200 text-gray-700 hover:border-gray-300 hover:shadow-md"
                            }`}
                          >
                            <div className="flex items-center gap-3">
                              {quizData.biggestChallenge.includes(
                                challenge,
                              ) && (
                                <CheckCircle className="w-5 h-5 text-red-500" />
                              )}
                              <span>{challenge}</span>
                            </div>
                          </button>
                        ))}
                      </div>
                      <p className="text-sm text-gray-600 mt-3">
                        Selected: {quizData.biggestChallenge.length} / 3 maximum
                      </p>
                    </div>
                  </div>
                )}

                {/* Step 7: Goals */}
                {currentStep === 7 && (
                  <div className="space-y-8">
                    <div className="text-center mb-8">
                      <h2 className="text-lg font-bold text-gray-900 mb-4">
                        Your Goals üéØ
                      </h2>
                      <p className="text-gray-600">
                        What do you want to achieve in the next 6 months?
                        (Select max 3)
                      </p>
                    </div>

                    <div>
                      <label className="block text-gray-900 font-semibold mb-4 text-xl">
                        {t.questions.goals}
                      </label>
                      <div className="grid grid-cols-2 gap-3">
                        {t.options.goals.map((goal) => (
                          <button
                            key={goal}
                            onClick={() =>
                              toggleMultipleChoice("goals", goal, 3)
                            }
                            disabled={
                              !quizData.goals.includes(goal) &&
                              quizData.goals.length >= 3
                            }
                            className={`p-4 rounded-xl border-2 text-base font-semibold transition-all duration-300 text-left ${
                              !quizData.goals.includes(goal) &&
                              quizData.goals.length >= 3
                                ? "opacity-50 cursor-not-allowed"
                                : ""
                            } ${
                              quizData.goals.includes(goal)
                                ? "bg-gradient-to-r from-green-50 to-blue-50 border-green-400 text-gray-900 shadow-lg"
                                : "bg-white border-gray-200 text-gray-700 hover:border-gray-300 hover:shadow-md"
                            }`}
                          >
                            <div className="flex items-center gap-3">
                              {quizData.goals.includes(goal) && (
                                <CheckCircle className="w-5 h-5 text-green-500" />
                              )}
                              <span>{goal}</span>
                            </div>
                          </button>
                        ))}
                      </div>
                      <p className="text-sm text-gray-600 mt-3">
                        Selected: {quizData.goals.length} / 3 maximum
                      </p>
                    </div>
                  </div>
                )}

                {/* Step 8: Social Links */}
                {currentStep === 8 && (
                  <div className="space-y-8">
                    <div className="text-center mb-8">
                      <h2 className="text-lg font-bold text-gray-900 mb-4">
                        Social Profiles üîó
                      </h2>
                      <p className="text-gray-600">
                        Optional: Add your social links for better analysis
                      </p>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div className="flex items-center gap-3">
                        <div className="w-8 h-8 bg-gradient-to-r from-pink-500 to-purple-500 rounded-lg flex items-center justify-center">
                          <Instagram className="w-4 h-4 text-white" />
                        </div>
                        <input
                          type="url"
                          value={quizData.socialLinks.instagram}
                          onChange={(e) =>
                            updateSocialLink("instagram", e.target.value)
                          }
                          placeholder="@username"
                          className="flex-1 bg-white border-2 border-gray-200 text-gray-900 px-3 py-2 rounded-lg focus:border-electric-blue focus:outline-none transition-colors text-sm"
                        />
                      </div>

                      <div className="flex items-center gap-3">
                        <div className="w-8 h-8 bg-red-500 rounded-lg flex items-center justify-center">
                          <Youtube className="w-4 h-4 text-white" />
                        </div>
                        <input
                          type="url"
                          value={quizData.socialLinks.youtube}
                          onChange={(e) =>
                            updateSocialLink("youtube", e.target.value)
                          }
                          placeholder="@channel"
                          className="flex-1 bg-white border-2 border-gray-200 text-gray-900 px-3 py-2 rounded-lg focus:border-electric-blue focus:outline-none transition-colors text-sm"
                        />
                      </div>

                      <div className="flex items-center gap-3">
                        <div className="w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center">
                          <Linkedin className="w-4 h-4 text-white" />
                        </div>
                        <input
                          type="url"
                          value={quizData.socialLinks.linkedin}
                          onChange={(e) =>
                            updateSocialLink("linkedin", e.target.value)
                          }
                          placeholder="/in/username"
                          className="flex-1 bg-white border-2 border-gray-200 text-gray-900 px-3 py-2 rounded-lg focus:border-electric-blue focus:outline-none transition-colors text-sm"
                        />
                      </div>

                      <div className="flex items-center gap-3">
                        <div className="w-8 h-8 bg-blue-400 rounded-lg flex items-center justify-center">
                          <Twitter className="w-4 h-4 text-white" />
                        </div>
                        <input
                          type="url"
                          value={quizData.socialLinks.twitter}
                          onChange={(e) =>
                            updateSocialLink("twitter", e.target.value)
                          }
                          placeholder="@username"
                          className="flex-1 bg-white border-2 border-gray-200 text-gray-900 px-3 py-2 rounded-lg focus:border-electric-blue focus:outline-none transition-colors text-sm"
                        />
                      </div>

                      <div className="flex items-center gap-3 md:col-span-2">
                        <div className="w-8 h-8 bg-gray-600 rounded-lg flex items-center justify-center">
                          <Globe className="w-4 h-4 text-white" />
                        </div>
                        <input
                          type="url"
                          value={quizData.socialLinks.website}
                          onChange={(e) =>
                            updateSocialLink("website", e.target.value)
                          }
                          placeholder="yourwebsite.com"
                          className="flex-1 bg-white border-2 border-gray-200 text-gray-900 px-3 py-2 rounded-lg focus:border-electric-blue focus:outline-none transition-colors text-sm"
                        />
                      </div>
                    </div>

                    <div>
                      <label className="block text-gray-900 font-semibold mb-3 text-lg">
                        {t.questions.bio}
                      </label>
                      <textarea
                        value={quizData.bio}
                        onChange={(e) => updateQuizData("bio", e.target.value)}
                        rows={4}
                        placeholder="Tell us about your content style, your audience, what makes you unique..."
                        className="w-full bg-white border-2 border-gray-200 text-gray-900 px-4 py-4 rounded-xl focus:border-electric-blue focus:outline-none resize-none text-lg"
                      />
                    </div>
                  </div>
                )}

                {/* Step 9: Engagement Rate */}
                {currentStep === 9 && (
                  <div className="space-y-8">
                    <div className="text-center mb-8">
                      <h2 className="text-2xl font-bold text-gray-900 mb-4">
                        Engagement Analytics üìä
                      </h2>
                      <p className="text-gray-600 text-lg">
                        Understanding your engagement helps us provide better monetization recommendations
                      </p>
                    </div>

                    <div>
                      <label className="block text-gray-900 font-semibold mb-4 text-xl">
                        {t.questions.engagementRate}
                      </label>
                      <div className="grid grid-cols-2 gap-3">
                        {t.options.engagementRates.map((rate) => (
                          <button
                            key={rate}
                            onClick={() => updateQuizData("engagementRate", rate)}
                            className={`p-4 rounded-xl border-2 text-lg font-semibold transition-all duration-300 ${
                              quizData.engagementRate === rate
                                ? "bg-gradient-to-r from-blue-50 to-green-50 border-blue-400 text-gray-900 shadow-lg"
                                : "bg-white border-gray-200 text-gray-700 hover:border-gray-300 hover:shadow-md"
                            }`}
                          >
                            {rate}
                          </button>
                        ))}
                      </div>
                    </div>
                  </div>
                )}

                {/* Navigation Buttons */}
                <div className="flex justify-between mt-12 pt-8 border-t border-gray-200">
                  {currentStep > 1 && (
                    <button
                      onClick={handleBack}
                      className="flex items-center gap-3 bg-gray-100 text-gray-700 px-8 py-4 rounded-xl font-semibold hover:bg-gray-200 transition-colors"
                    >
                      <ArrowLeft className="w-5 h-5" />
                      {t.buttons.back}
                    </button>
                  )}

                  <div className="flex-1"></div>

                  {currentStep < totalSteps ? (
                    <button
                      onClick={handleNext}
                      disabled={!canProceed()}
                      className="flex items-center gap-3 bg-gradient-to-r from-neon-green to-electric-blue text-black px-8 py-4 rounded-xl font-bold hover:shadow-lg hover:scale-105 transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed"
                    >
                      {t.buttons.next}
                      <ArrowRight className="w-5 h-5" />
                    </button>
                  ) : (
                    <button
                      onClick={handleNext}
                      className="flex items-center gap-3 bg-gradient-to-r from-neon-green to-electric-blue text-black px-8 py-4 rounded-xl font-bold hover:shadow-lg hover:scale-105 transition-all duration-300"
                    >
                      Complete Quiz
                      <ArrowRight className="w-5 h-5" />
                    </button>
                  )}
                </div>
              </>
            )}
          </div>
        </div>
      </main>
    </div>
  );
}
